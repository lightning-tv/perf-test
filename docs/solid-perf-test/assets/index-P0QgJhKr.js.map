{"version":3,"file":"index-P0QgJhKr.js","sources":["../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/lib/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/lib/Matrix3d.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/lib/RenderCoords.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimation.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimationController.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/CoreNode.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/main-api/Inspector.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/platform.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreContextTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/textures/Texture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/textures/ColorTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/textures/SubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShader.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShaderBatched.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/ShaderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DynamicShader.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/RoundedRectangle.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/SdfShader.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/EffectUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadiusEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/LinearGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GrayscaleEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderRightEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderTopEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderBottomEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderLeftEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GlitchEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/FadeOutEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadialGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadialProgressEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/HolePunchEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/canvas/shaders/UnsupportedShader.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/main-api/ShaderController.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/main-api/DynamicShaderController.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/CoreShaderManager.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/lib/WebGlContextWrapper.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/textures/RenderTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxRenderTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/lib/textureCompression.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/textures/ImageTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/animations/AnimationManager.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/lib/ImageWorker.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/textures/NoiseTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/CoreTextureManager.js","../../node_modules/.pnpm/memize@2.1.0/node_modules/memize/dist/index.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/TrFontManager.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/TextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/constants.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/getStartConditions.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/PeekableGenerator.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/getUnicodeCodepoints.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/measureText.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/layoutText.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/util.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/setRenderWindow.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/TextRenderingUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/SdfTextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/WebTrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/TextTextureRendererUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/LightningTextTextureRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/CanvasTextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/lib/ContextSpy.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/TextureMemoryManager.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/canvas/internal/ColorUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/canvas/CanvasCoreTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/canvas/internal/C2DShaderUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/canvas/CanvasCoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/CoreTextNode.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/main-api/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/core/Stage.js","../../node_modules/.pnpm/@lightningjs+renderer@1.0.1/node_modules/@lightningjs/renderer/dist/src/main-api/Renderer.js","../../node_modules/.pnpm/@lightningtv+core@1.4.1_@lightningjs+renderer@1.0.1/node_modules/@lightningtv/core/dist/src/lightningInit.js","../../node_modules/.pnpm/@lightningtv+core@1.4.1_@lightningjs+renderer@1.0.1/node_modules/@lightningtv/core/dist/src/config.js","../../node_modules/.pnpm/@lightningtv+core@1.4.1_@lightningjs+renderer@1.0.1/node_modules/@lightningtv/core/dist/src/utils.js","../../node_modules/.pnpm/@lightningtv+core@1.4.1_@lightningjs+renderer@1.0.1/node_modules/@lightningtv/core/dist/src/states.js","../../node_modules/.pnpm/@lightningtv+core@1.4.1_@lightningjs+renderer@1.0.1/node_modules/@lightningtv/core/dist/src/nodeTypes.js","../../node_modules/.pnpm/@lightningtv+core@1.4.1_@lightningjs+renderer@1.0.1/node_modules/@lightningtv/core/dist/src/flex.js","../../node_modules/.pnpm/@lightningtv+core@1.4.1_@lightningjs+renderer@1.0.1/node_modules/@lightningtv/core/dist/src/focusManager.js","../../node_modules/.pnpm/@lightningtv+core@1.4.1_@lightningjs+renderer@1.0.1/node_modules/@lightningtv/core/dist/src/elementNode.js","../../node_modules/.pnpm/solid-js@1.8.19/node_modules/solid-js/dist/solid.js","../../node_modules/.pnpm/@lightningtv+solid@1.5.0_@lightningjs+renderer@1.0.1_solid-js@1.8.19/node_modules/@lightningtv/solid/src/activeElement.ts","../../node_modules/.pnpm/@lightningtv+solid@1.5.0_@lightningjs+renderer@1.0.1_solid-js@1.8.19/node_modules/@lightningtv/solid/src/utils.ts","../../node_modules/.pnpm/solid-js@1.8.19/node_modules/solid-js/universal/dist/universal.js","../../node_modules/.pnpm/@lightningtv+solid@1.5.0_@lightningjs+renderer@1.0.1_solid-js@1.8.19/node_modules/@lightningtv/solid/src/solidOpts.ts","../../node_modules/.pnpm/@lightningtv+solid@1.5.0_@lightningjs+renderer@1.0.1_solid-js@1.8.19/node_modules/@lightningtv/solid/src/render.ts","../../src/pages/HelloWorld.jsx","../../src/index.jsx"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas, contextSpy) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        // Disabled because it prevents Visual Regression Tests from working\n        // failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    const gl = \n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config));\n    if (!gl) {\n        throw new Error('Unable to create WebGL context');\n    }\n    if (contextSpy) {\n        // Proxy the GL context to log all GL calls\n        return new Proxy(gl, {\n            get(target, prop) {\n                const value = target[prop];\n                if (typeof value === 'function') {\n                    contextSpy.increment(String(prop));\n                    return value.bind(target);\n                }\n                return value;\n            },\n        });\n    }\n    return gl;\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (isProductionEnvironment())\n        return;\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\nlet premultiplyRGB = true;\n/**\n * RGB components should not be premultiplied when using Canvas renderer\n * @param mode  Renderer mode\n */\nexport function setPremultiplyMode(mode) {\n    premultiplyRGB = mode === 'webgl';\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * For the webGl renderer, each color channel is premultiplied by the final alpha value.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: Depending on the mode set by {@link setPremultiplyMode}, this method returns\n * a PREMULTIPLIED alpha color which is generally only useful in the context of the\n * internal rendering process. Use {@link mergeColorAlpha} if you need to blend an alpha\n * value into a color in the context of the Renderer's main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const rgbAlpha = premultiplyRGB ? newAlpha : 1;\n    const r = Math.trunc((rgba >>> 24) * rgbAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * rgbAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * rgbAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n/**\n * Returns image aspect ratio\n *\n * @param width\n * @param height\n * @returns\n */\nexport function getImageAspectRatio(width, height) {\n    return width / height;\n}\n/**\n * Checks import.meta if env is production\n *\n * @returns\n */\nexport function isProductionEnvironment() {\n    return import.meta.env && import.meta.env.PROD;\n}\n/**\n * Returns a new unique ID\n */\nlet nextId = 1;\nexport function getNewId() {\n    return nextId++;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const PROTOCOL_REGEX = /^(data|ftps?|https?):/;\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function createBound(x1, y1, x2, y2, out) {\n    if (out) {\n        out.x1 = x1;\n        out.y1 = y1;\n        out.x2 = x2;\n        out.y2 = y2;\n        return out;\n    }\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\nexport function intersectBound(a, b, out) {\n    const intersection = createBound(Math.max(a.x1, b.x1), Math.max(a.y1, b.y1), Math.min(a.x2, b.x2), Math.min(a.y2, b.y2), out);\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return createBound(0, 0, 0, 0, intersection);\n}\nexport function boundsOverlap(a, b) {\n    return a.x1 < b.x2 && a.x2 > b.x1 && a.y1 < b.y2 && a.y2 > b.y1;\n}\nexport function convertBoundToRect(bound, out) {\n    if (out) {\n        out.x = bound.x1;\n        out.y = bound.y1;\n        out.width = bound.x2 - bound.x1;\n        out.height = bound.y2 - bound.y1;\n        return out;\n    }\n    return {\n        x: bound.x1,\n        y: bound.y1,\n        width: bound.x2 - bound.x1,\n        height: bound.y2 - bound.y1,\n    };\n}\nexport function intersectRect(a, b, out) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        if (out) {\n            out.x = x;\n            out.y = y;\n            out.width = width;\n            out.height = height;\n            return out;\n        }\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    if (out) {\n        out.x = 0;\n        out.y = 0;\n        out.width = 0;\n        out.height = 0;\n        return out;\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function copyRect(a, out) {\n    if (out) {\n        out.x = a.x;\n        out.y = a.y;\n        out.width = a.width;\n        out.height = a.height;\n        return out;\n    }\n    return {\n        x: a.x,\n        y: a.y,\n        width: a.width,\n        height: a.height,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function boundInsideBound(bound1, bound2) {\n    return (bound1.x1 <= bound2.x2 &&\n        bound1.y1 <= bound2.y2 &&\n        bound1.x2 >= bound2.x1 &&\n        bound1.y2 >= bound2.y1);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\nexport function convertUrlToAbsolute(url) {\n    // handle local file imports if the url isn't remote resource or data blob\n    if (self.location.protocol === 'file:' && !PROTOCOL_REGEX.test(url)) {\n        const path = self.location.pathname.split('/');\n        path.pop();\n        const basePath = path.join('/');\n        const baseUrl = self.location.protocol + '//' + basePath;\n        // check if url has a leading dot\n        if (url.charAt(0) === '.') {\n            url = url.slice(1);\n        }\n        // check if url has a leading slash\n        if (url.charAt(0) === '/') {\n            url = url.slice(1);\n        }\n        return baseUrl + '/' + url;\n    }\n    const absoluteUrl = new URL(url, self.location.href);\n    return absoluteUrl.href;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A 3D matrix representing a 2D graphics transformation\n *\n * @remarks\n * For convenience, entries in the first two rows can be accessed by the following\n * properties:\n * | ta tb tx |\n * | tc td ty |\n * | 0  0  1  |\n *\n * This matrix is optimized for 2D transformations and hence the last row will\n * always be considered [0, 0 ,1].\n *\n * To access a column major array for WebGL, use the {@link getFloatArr} method.\n */\nexport class Matrix3d {\n    ta;\n    tb;\n    tx;\n    tc;\n    td;\n    ty;\n    _floatArr = null;\n    /**\n     * Potential Mutation Flag\n     *\n     * @remarks\n     * This flag is set to true whenever the matrix is potentially modified.\n     * We don't waste CPU trying to identify if each operation actually modifies\n     * the matrix. Instead, we set this flag to true whenever we think the matrix\n     * is modified. This signals that the `floatArr` should to be updated.\n     */\n    mutation;\n    /**\n     * Creates a new 3x3 matrix.\n     *\n     * @param entries Row-major 3x3 matrix\n     */\n    constructor() {\n        this.ta = 0;\n        this.tb = 0;\n        this.tx = 0;\n        this.tc = 0;\n        this.td = 0;\n        this.ty = 0;\n        this.mutation = true;\n    }\n    /**\n     * Returns a temporary matrix that can be used for calculations.\n     *\n     * @remarks\n     * This is useful for avoiding allocations in tight loops.\n     *\n     * The matrix is not guaranteed to be the same between calls.\n     *\n     * @returns\n     */\n    static get temp() {\n        return tempMatrix;\n    }\n    static multiply(a, b, out) {\n        const e0 = a.ta * b.ta + a.tb * b.tc;\n        const e1 = a.ta * b.tb + a.tb * b.td;\n        const e2 = a.ta * b.tx + a.tb * b.ty + a.tx;\n        const e3 = a.tc * b.ta + a.td * b.tc;\n        const e4 = a.tc * b.tb + a.td * b.td;\n        const e5 = a.tc * b.tx + a.td * b.ty + a.ty;\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = e0;\n        out.tb = e1;\n        out.tx = e2;\n        out.tc = e3;\n        out.td = e4;\n        out.ty = e5;\n        out.mutation = true;\n        return out;\n    }\n    static identity(out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = 1;\n        out.tb = 0;\n        out.tx = 0;\n        out.tc = 0;\n        out.td = 1;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static translate(x, y, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = 1;\n        out.tb = 0;\n        out.tx = x;\n        out.tc = 0;\n        out.td = 1;\n        out.ty = y;\n        out.mutation = true;\n        return out;\n    }\n    static scale(sx, sy, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = sx;\n        out.tb = 0;\n        out.tx = 0;\n        out.tc = 0;\n        out.td = sy;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static rotate(angle, out) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = cos;\n        out.tb = -sin;\n        out.tx = 0;\n        out.tc = sin;\n        out.td = cos;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static copy(src, dst) {\n        if (!dst) {\n            dst = new Matrix3d();\n        }\n        dst.ta = src.ta;\n        dst.tc = src.tc;\n        dst.tb = src.tb;\n        dst.td = src.td;\n        dst.tx = src.tx;\n        dst.ty = src.ty;\n        dst.mutation = true;\n        return dst;\n    }\n    translate(x, y) {\n        this.tx = this.ta * x + this.tb * y + this.tx;\n        this.ty = this.tc * x + this.td * y + this.ty;\n        this.mutation = true;\n        return this;\n    }\n    scale(sx, sy) {\n        this.ta = this.ta * sx;\n        this.tb = this.tb * sy;\n        this.tc = this.tc * sx;\n        this.td = this.td * sy;\n        this.mutation = true;\n        return this;\n    }\n    rotate(angle) {\n        if (angle === 0 || !((angle % Math.PI) * 2)) {\n            return this;\n        }\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        const e0 = this.ta * cos + this.tb * sin;\n        const e1 = this.tb * cos - this.ta * sin;\n        const e3 = this.tc * cos + this.td * sin;\n        const e4 = this.td * cos - this.tc * sin;\n        this.ta = e0;\n        this.tb = e1;\n        this.tc = e3;\n        this.td = e4;\n        this.mutation = true;\n        return this;\n    }\n    multiply(other) {\n        return Matrix3d.multiply(this, other, this);\n    }\n    /**\n     * Returns the matrix as a Float32Array in column-major order.\n     *\n     * @remarks\n     * This method is optimized to avoid unnecessary allocations. The same array\n     * is returned every time this method is called, and is updated in place.\n     *\n     * WARNING: Use the array only for passing directly to a WebGL shader uniform\n     * during a frame render. Do not modify or hold onto the array for longer than\n     * a frame.\n     */\n    getFloatArr() {\n        if (!this._floatArr) {\n            this._floatArr = new Float32Array(9);\n        }\n        if (this.mutation) {\n            this._floatArr[0] = this.ta;\n            this._floatArr[1] = this.tc;\n            this._floatArr[2] = 0;\n            this._floatArr[3] = this.tb;\n            this._floatArr[4] = this.td;\n            this._floatArr[5] = 0;\n            this._floatArr[6] = this.tx;\n            this._floatArr[7] = this.ty;\n            this._floatArr[8] = 1;\n            this.mutation = false;\n        }\n        return this._floatArr;\n    }\n}\nconst tempMatrix = new Matrix3d();\n//# sourceMappingURL=Matrix3d.js.map","const rx1 = 0;\nconst rx2 = 2;\nconst rx3 = 4;\nconst rx4 = 6;\nconst ry1 = 1;\nconst ry2 = 3;\nconst ry3 = 5;\nconst ry4 = 7;\nexport class RenderCoords {\n    data;\n    constructor(entries) {\n        this.data = new Float32Array(8);\n        if (entries) {\n            this.data[rx1] = entries[rx1];\n            this.data[rx2] = entries[rx2];\n            this.data[rx3] = entries[rx3];\n            this.data[rx4] = entries[rx4];\n            this.data[ry1] = entries[ry1];\n            this.data[ry2] = entries[ry2];\n            this.data[ry3] = entries[ry3];\n            this.data[ry4] = entries[ry4];\n        }\n    }\n    static translate(x1, y1, x2, y2, x3, y3, x4, y4, out) {\n        if (!out) {\n            out = new RenderCoords();\n        }\n        out.data[rx1] = x1;\n        out.data[rx2] = x2;\n        out.data[rx3] = x3;\n        out.data[rx4] = x4;\n        out.data[ry1] = y1;\n        out.data[ry2] = y2;\n        out.data[ry3] = y3;\n        out.data[ry4] = y4;\n        return out;\n    }\n    get x1() {\n        return this.data[rx1];\n    }\n    get x2() {\n        return this.data[rx2];\n    }\n    get x3() {\n        return this.data[rx3];\n    }\n    get x4() {\n        return this.data[rx4];\n    }\n    get y1() {\n        return this.data[ry1];\n    }\n    get y2() {\n        return this.data[ry2];\n    }\n    get y3() {\n        return this.data[ry3];\n    }\n    get y4() {\n        return this.data[ry4];\n    }\n}\n//# sourceMappingURL=RenderCoords.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nconst timingMapping = {};\nconst timingLookup = {\n    ease: [0.25, 0.1, 0.25, 1.0],\n    'ease-in': [0.42, 0, 1.0, 1.0],\n    'ease-out': [0, 0, 0.58, 1.0],\n    'ease-in-out': [0.42, 0, 0.58, 1.0],\n    'ease-in-sine': [0.12, 0, 0.39, 0],\n    'ease-out-sine': [0.12, 0, 0.39, 0],\n    'ease-in-out-sine': [0.37, 0, 0.63, 1],\n    'ease-in-cubic': [0.32, 0, 0.67, 0],\n    'ease-out-cubic': [0.33, 1, 0.68, 1],\n    'ease-in-out-cubic': [0.65, 0, 0.35, 1],\n    'ease-in-circ': [0.55, 0, 1, 0.45],\n    'ease-out-circ': [0, 0.55, 0.45, 1],\n    'ease-in-out-circ': [0.85, 0, 0.15, 1],\n    'ease-in-back': [0.36, 0, 0.66, -0.56],\n    'ease-out-back': [0.34, 1.56, 0.64, 1],\n    'ease-in-out-back': [0.68, -0.6, 0.32, 1.6],\n};\nconst defaultTiming = (t) => t;\nconst parseCubicBezier = (str) => {\n    //cubic-bezier(0.84, 0.52, 0.56, 0.6)\n    const regex = /-?\\d*\\.?\\d+/g;\n    const match = str.match(regex);\n    if (match) {\n        const [num1, num2, num3, num4] = match;\n        const a = parseFloat(num1 || '0.42');\n        const b = parseFloat(num2 || '0');\n        const c = parseFloat(num3 || '1');\n        const d = parseFloat(num4 || '1');\n        const timing = getTimingBezier(a, b, c, d);\n        timingMapping[str] = timing;\n        return timing;\n    }\n    // parse failed, return linear\n    console.warn('Unknown cubic-bezier timing: ' + str);\n    return defaultTiming;\n};\nexport const getTimingFunction = (str) => {\n    if (str === 'linear') {\n        return defaultTiming;\n    }\n    if (timingMapping[str] !== undefined) {\n        return timingMapping[str] || defaultTiming;\n    }\n    if (str === 'step-start') {\n        return () => {\n            return 1;\n        };\n    }\n    if (str === 'step-end') {\n        return (time) => {\n            return time === 1 ? 1 : 0;\n        };\n    }\n    const lookup = timingLookup[str];\n    if (lookup !== undefined) {\n        const [a, b, c, d] = lookup;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - TS doesn't understand that we've checked for undefined\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const timing = getTimingBezier(a, b, c, d);\n        timingMapping[str] = timing;\n        return timing;\n    }\n    if (str.startsWith('cubic-bezier')) {\n        return parseCubicBezier(str);\n    }\n    console.warn('Unknown timing function: ' + str);\n    return defaultTiming;\n};\n/**\n * Convert bytes to string of megabytes with 2 decimal points\n *\n * @param bytes\n * @returns\n */\nexport function bytesToMb(bytes) {\n    return (bytes / 1024 / 1024).toFixed(2);\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../CoreNode.js';\nimport { getTimingFunction } from '../utils.js';\nimport { mergeColorProgress } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimation extends EventEmitter {\n    node;\n    props;\n    settings;\n    progress = 0;\n    delayFor = 0;\n    timingFunction;\n    propValuesMap = {};\n    dynPropValuesMap = undefined;\n    constructor(node, props, settings) {\n        super();\n        this.node = node;\n        this.props = props;\n        for (const key in props) {\n            if (key !== 'shaderProps') {\n                if (this.propValuesMap['props'] === undefined) {\n                    this.propValuesMap['props'] = {};\n                }\n                this.propValuesMap['props'][key] = {\n                    start: node[key],\n                    target: props[key],\n                };\n            }\n            else if (node.shader.type !== 'DynamicShader') {\n                this.propValuesMap['shaderProps'] = {};\n                for (const key in props.shaderProps) {\n                    this.propValuesMap['shaderProps'][key] = {\n                        start: node.shader.props[key],\n                        target: props.shaderProps[key],\n                    };\n                }\n            }\n            else {\n                const shaderPropKeys = Object.keys(props.shaderProps);\n                const spLength = shaderPropKeys.length;\n                this.dynPropValuesMap = {};\n                for (let j = 0; j < spLength; j++) {\n                    const effectName = shaderPropKeys[j];\n                    const effect = props.shaderProps[effectName];\n                    this.dynPropValuesMap[effectName] = {};\n                    const effectProps = Object.entries(effect);\n                    const eLength = effectProps.length;\n                    for (let k = 0; k < eLength; k++) {\n                        const [key, value] = effectProps[k];\n                        this.dynPropValuesMap[effectName][key] = {\n                            start: node.shader.props[effectName][key],\n                            target: value,\n                        };\n                    }\n                }\n            }\n        }\n        const easing = settings.easing || 'linear';\n        const delay = settings.delay ?? 0;\n        this.settings = {\n            duration: settings.duration ?? 0,\n            delay,\n            easing,\n            loop: settings.loop ?? false,\n            repeat: settings.repeat ?? 0,\n            repeatDelay: settings.repeatDelay ?? 0,\n            stopMethod: settings.stopMethod ?? false,\n        };\n        this.timingFunction = getTimingFunction(easing);\n        this.delayFor = delay;\n    }\n    reset() {\n        this.progress = 0;\n        this.delayFor = this.settings.delay || 0;\n        this.update(0);\n    }\n    restoreValues(target, valueMap) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            target[key] = value.start;\n        }\n    }\n    restore() {\n        this.reset();\n        if (this.propValuesMap['props'] !== undefined) {\n            this.restoreValues(this.node, this.propValuesMap['props']);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.restoreValues(this.node.shader.props, this.propValuesMap['shaderProps']);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.restoreValues(this.node.shader.props[key], this.dynPropValuesMap[key]);\n                }\n            }\n        }\n    }\n    reverseValues(valueMap) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            valueMap[key] = {\n                start: value.target,\n                target: value.start,\n            };\n        }\n    }\n    reverse() {\n        this.progress = 0;\n        if (this.propValuesMap['props'] !== undefined) {\n            this.reverseValues(this.propValuesMap['props']);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.reverseValues(this.propValuesMap['shaderProps']);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.reverseValues(this.dynPropValuesMap[key]);\n                }\n            }\n        }\n        // restore stop method if we are not looping\n        if (!this.settings.loop) {\n            this.settings.stopMethod = false;\n        }\n    }\n    applyEasing(p, s, e) {\n        return (this.timingFunction(p) || p) * (e - s) + s;\n    }\n    updateValue(propName, propValue, startValue, easing) {\n        if (this.progress === 1) {\n            return propValue;\n        }\n        if (this.progress === 0) {\n            return startValue;\n        }\n        const endValue = propValue;\n        if (propName.indexOf('color') !== -1) {\n            if (startValue === endValue) {\n                return startValue;\n            }\n            if (easing) {\n                const easingProgressValue = this.timingFunction(this.progress) || this.progress;\n                return mergeColorProgress(startValue, endValue, easingProgressValue);\n            }\n            return mergeColorProgress(startValue, endValue, this.progress);\n        }\n        if (easing) {\n            return this.applyEasing(this.progress, startValue, endValue);\n        }\n        return startValue + (endValue - startValue) * this.progress;\n    }\n    updateValues(target, valueMap, easing) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            target[key] = this.updateValue(key, value.target, value.start, easing);\n        }\n    }\n    update(dt) {\n        const { duration, loop, easing, stopMethod } = this.settings;\n        const { delayFor } = this;\n        if (duration === 0 && delayFor === 0) {\n            this.emit('finished', {});\n            return;\n        }\n        if (this.delayFor > 0) {\n            this.delayFor -= dt;\n            if (this.delayFor >= 0) {\n                // Either no or more delay left. Exit.\n                return;\n            }\n            else {\n                // We went beyond the delay time, add it back to dt so we can continue\n                // with the animation.\n                dt = -this.delayFor;\n                this.delayFor = 0;\n            }\n        }\n        if (duration === 0) {\n            // No duration, we are done.\n            this.emit('finished', {});\n            return;\n        }\n        if (this.progress === 0) {\n            // Progress is 0, we are starting the post-delay part of the animation.\n            this.emit('animating', {});\n        }\n        this.progress += dt / duration;\n        if (this.progress > 1) {\n            this.progress = loop ? 0 : 1;\n            if (stopMethod) {\n                // If there's a stop method emit finished so the stop method can be applied.\n                // TODO: We should probably reevaluate how stopMethod is implemented as currently\n                // stop method 'reset' does not work when looping.\n                this.emit('finished', {});\n                return;\n            }\n        }\n        if (this.propValuesMap['props'] !== undefined) {\n            this.updateValues(this.node, this.propValuesMap['props'], easing);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.updateValues(this.node.shader.props, this.propValuesMap['shaderProps'], easing);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.updateValues(this.node.shader.props[key], this.dynPropValuesMap[key], easing);\n                }\n            }\n        }\n        if (this.progress === 1) {\n            this.emit('finished', {});\n        }\n    }\n}\n//# sourceMappingURL=CoreAnimation.js.map","/* eslint-disable @typescript-eslint/unbound-method */\n/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimationController extends EventEmitter {\n    manager;\n    animation;\n    stoppedPromise;\n    /**\n     * If this is null, then the animation is in a finished / stopped state.\n     */\n    stoppedResolve = null;\n    state;\n    constructor(manager, animation) {\n        super();\n        this.manager = manager;\n        this.animation = animation;\n        this.state = 'stopped';\n        // Initial stopped promise is resolved (since the animation is stopped)\n        this.stoppedPromise = Promise.resolve();\n        // Bind event handlers\n        this.onAnimating = this.onAnimating.bind(this);\n        this.onFinished = this.onFinished.bind(this);\n    }\n    start() {\n        if (this.state !== 'running') {\n            this.makeStoppedPromise();\n            this.registerAnimation();\n            this.state = 'running';\n        }\n        return this;\n    }\n    stop() {\n        this.unregisterAnimation();\n        if (this.stoppedResolve !== null) {\n            this.stoppedResolve();\n            this.stoppedResolve = null;\n            this.emit('stopped', this);\n        }\n        this.animation.reset();\n        this.state = 'stopped';\n        return this;\n    }\n    pause() {\n        this.unregisterAnimation();\n        this.state = 'paused';\n        return this;\n    }\n    restore() {\n        this.stoppedResolve = null;\n        this.animation.restore();\n        return this;\n    }\n    waitUntilStopped() {\n        return this.stoppedPromise;\n    }\n    registerAnimation() {\n        // Hook up event listeners\n        this.animation.once('finished', this.onFinished);\n        this.animation.on('animating', this.onAnimating);\n        // Then register the animation\n        this.manager.registerAnimation(this.animation);\n    }\n    unregisterAnimation() {\n        // First unregister the animation\n        this.manager.unregisterAnimation(this.animation);\n        // Then unhook event listeners\n        this.animation.off('finished', this.onFinished);\n        this.animation.off('animating', this.onAnimating);\n    }\n    makeStoppedPromise() {\n        if (this.stoppedResolve === null) {\n            this.stoppedPromise = new Promise((resolve) => {\n                this.stoppedResolve = resolve;\n            });\n        }\n    }\n    onFinished() {\n        assertTruthy(this.stoppedResolve);\n        // If the animation is looping, then we need to restart it.\n        const { loop, stopMethod } = this.animation.settings;\n        if (stopMethod === 'reverse') {\n            this.animation.once('finished', this.onFinished);\n            this.animation.reverse();\n            return;\n        }\n        if (loop) {\n            return;\n        }\n        // unregister animation\n        this.unregisterAnimation();\n        // resolve promise\n        this.stoppedResolve();\n        this.stoppedResolve = null;\n        this.emit('stopped', this);\n        this.state = 'stopped';\n    }\n    onAnimating() {\n        this.emit('animating', this);\n    }\n}\n//# sourceMappingURL=CoreAnimationController.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, getNewId, mergeColorAlphaPremultiplied, } from '../utils.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { copyRect, intersectRect, createBound, boundInsideBound, } from './lib/utils.js';\nimport { Matrix3d } from './lib/Matrix3d.js';\nimport { RenderCoords } from './lib/RenderCoords.js';\nimport { CoreAnimation } from './animations/CoreAnimation.js';\nimport { CoreAnimationController } from './animations/CoreAnimationController.js';\nexport var CoreNodeRenderState;\n(function (CoreNodeRenderState) {\n    CoreNodeRenderState[CoreNodeRenderState[\"Init\"] = 0] = \"Init\";\n    CoreNodeRenderState[CoreNodeRenderState[\"OutOfBounds\"] = 2] = \"OutOfBounds\";\n    CoreNodeRenderState[CoreNodeRenderState[\"InBounds\"] = 4] = \"InBounds\";\n    CoreNodeRenderState[CoreNodeRenderState[\"InViewport\"] = 8] = \"InViewport\";\n})(CoreNodeRenderState || (CoreNodeRenderState = {}));\nconst CoreNodeRenderStateMap = new Map();\nCoreNodeRenderStateMap.set(CoreNodeRenderState.Init, 'init');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.OutOfBounds, 'outOfBounds');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.InBounds, 'inBounds');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.InViewport, 'inViewport');\nexport var UpdateType;\n(function (UpdateType) {\n    /**\n     * Child updates\n     */\n    UpdateType[UpdateType[\"Children\"] = 1] = \"Children\";\n    /**\n     * Scale/Rotate transform update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `scaleRotateTransform`\n     */\n    UpdateType[UpdateType[\"ScaleRotate\"] = 2] = \"ScaleRotate\";\n    /**\n     * Translate transform update (x/y/width/height/pivot/mount)\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `localTransform`\n     */\n    UpdateType[UpdateType[\"Local\"] = 4] = \"Local\";\n    /**\n     * Global Transform update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `globalTransform`\n     * - `renderCoords`\n     * - `renderBound`\n     */\n    UpdateType[UpdateType[\"Global\"] = 8] = \"Global\";\n    /**\n     * Clipping rect update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `clippingRect`\n     */\n    UpdateType[UpdateType[\"Clipping\"] = 16] = \"Clipping\";\n    /**\n     * Calculated ZIndex update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `calcZIndex`\n     */\n    UpdateType[UpdateType[\"CalculatedZIndex\"] = 32] = \"CalculatedZIndex\";\n    /**\n     * Z-Index Sorted Children update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `children` (sorts children by their `calcZIndex`)\n     */\n    UpdateType[UpdateType[\"ZIndexSortedChildren\"] = 64] = \"ZIndexSortedChildren\";\n    /**\n     * Premultiplied Colors update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `premultipliedColorTl`\n     * - `premultipliedColorTr`\n     * - `premultipliedColorBl`\n     * - `premultipliedColorBr`\n     */\n    UpdateType[UpdateType[\"PremultipliedColors\"] = 128] = \"PremultipliedColors\";\n    /**\n     * World Alpha update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `worldAlpha` = `parent.worldAlpha` * `alpha`\n     */\n    UpdateType[UpdateType[\"WorldAlpha\"] = 256] = \"WorldAlpha\";\n    /**\n     * Render State update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `renderState`\n     */\n    UpdateType[UpdateType[\"RenderState\"] = 512] = \"RenderState\";\n    /**\n     * Is Renderable update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `isRenderable`\n     */\n    UpdateType[UpdateType[\"IsRenderable\"] = 1024] = \"IsRenderable\";\n    /**\n     * Render Texture update\n     */\n    UpdateType[UpdateType[\"RenderTexture\"] = 2048] = \"RenderTexture\";\n    /**\n     * Track if parent has render texture\n     */\n    UpdateType[UpdateType[\"ParentRenderTexture\"] = 4096] = \"ParentRenderTexture\";\n    /**\n     * None\n     */\n    UpdateType[UpdateType[\"None\"] = 0] = \"None\";\n    /**\n     * All\n     */\n    UpdateType[UpdateType[\"All\"] = 8191] = \"All\";\n})(UpdateType || (UpdateType = {}));\n/**\n * A visual Node in the Renderer scene graph.\n *\n * @remarks\n * CoreNode is an internally used class that represents a Renderer Node in the\n * scene graph. See INode.ts for the public APIs exposed to Renderer users\n * that include generic types for Shaders.\n */\nexport class CoreNode extends EventEmitter {\n    stage;\n    children = [];\n    _id = getNewId();\n    props;\n    updateType = UpdateType.All;\n    globalTransform;\n    scaleRotateTransform;\n    localTransform;\n    renderCoords;\n    renderBound;\n    strictBound;\n    preloadBound;\n    clippingRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n        valid: false,\n    };\n    isRenderable = false;\n    renderState = CoreNodeRenderState.Init;\n    worldAlpha = 1;\n    premultipliedColorTl = 0;\n    premultipliedColorTr = 0;\n    premultipliedColorBl = 0;\n    premultipliedColorBr = 0;\n    calcZIndex = 0;\n    hasRTTupdates = false;\n    parentHasRenderTexture = false;\n    constructor(stage, props) {\n        super();\n        this.stage = stage;\n        this.props = {\n            ...props,\n            parent: null,\n            texture: null,\n            src: null,\n            rtt: false,\n        };\n        // Assign props to instance\n        this.parent = props.parent;\n        this.texture = props.texture;\n        this.src = props.src;\n        this.rtt = props.rtt;\n        this.updateScaleRotateTransform();\n    }\n    //#region Textures\n    loadTexture() {\n        const { texture } = this.props;\n        assertTruthy(texture);\n        // If texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            // Preload texture if required\n            if (this.textureOptions.preload) {\n                texture.ctxTexture.load();\n            }\n            if (texture.state === 'loaded') {\n                assertTruthy(texture.dimensions);\n                this.onTextureLoaded(texture, texture.dimensions);\n            }\n            else if (texture.state === 'failed') {\n                assertTruthy(texture.error);\n                this.onTextureFailed(texture, texture.error);\n            }\n            else if (texture.state === 'freed') {\n                this.onTextureFreed(texture);\n            }\n            texture.on('loaded', this.onTextureLoaded);\n            texture.on('failed', this.onTextureFailed);\n            texture.on('freed', this.onTextureFreed);\n        });\n    }\n    unloadTexture() {\n        if (this.texture) {\n            this.texture.off('loaded', this.onTextureLoaded);\n            this.texture.off('failed', this.onTextureFailed);\n            this.texture.off('freed', this.onTextureFreed);\n            this.texture.setRenderableOwner(this, false);\n        }\n    }\n    autosizeNode(dimensions) {\n        if (this.autosize) {\n            this.width = dimensions.width;\n            this.height = dimensions.height;\n        }\n    }\n    onTextureLoaded = (_, dimensions) => {\n        this.autosizeNode(dimensions);\n        // Texture was loaded. In case the RAF loop has already stopped, we request\n        // a render to ensure the texture is rendered.\n        this.stage.requestRender();\n        // If parent has a render texture, flag that we need to update\n        // @todo: Reserve type for RTT updates\n        if (this.parentHasRenderTexture) {\n            this.setRTTUpdates(1);\n        }\n        this.emit('loaded', {\n            type: 'texture',\n            dimensions,\n        });\n        // Trigger a local update if the texture is loaded and the resizeMode is 'contain'\n        if (this.props.textureOptions?.resizeMode?.type === 'contain') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    };\n    onTextureFailed = (_, error) => {\n        this.emit('failed', {\n            type: 'texture',\n            error,\n        });\n    };\n    onTextureFreed = () => {\n        this.emit('freed', {\n            type: 'texture',\n        });\n    };\n    //#endregion Textures\n    /**\n     * Change types types is used to determine the scope of the changes being applied\n     *\n     * @remarks\n     * See {@link UpdateType} for more information on each type\n     *\n     * @param type\n     */\n    setUpdateType(type) {\n        this.updateType |= type;\n        // If we're updating this node at all, we need to inform the parent\n        // (and all ancestors) that their children need updating as well\n        const parent = this.props.parent;\n        if (parent && !(parent.updateType & UpdateType.Children)) {\n            parent.setUpdateType(UpdateType.Children);\n        }\n        // If node is part of RTT texture\n        // Flag that we need to update\n        if (this.parentHasRenderTexture) {\n            this.setRTTUpdates(type);\n        }\n    }\n    sortChildren() {\n        this.children.sort((a, b) => a.calcZIndex - b.calcZIndex);\n    }\n    updateScaleRotateTransform() {\n        const { rotation, scaleX, scaleY } = this.props;\n        // optimize simple translation cases\n        if (rotation === 0 && scaleX === 1 && scaleY === 1) {\n            this.scaleRotateTransform = undefined;\n            return;\n        }\n        this.scaleRotateTransform = Matrix3d.rotate(rotation, this.scaleRotateTransform).scale(scaleX, scaleY);\n    }\n    updateLocalTransform() {\n        const { x, y, width, height } = this.props;\n        const mountTranslateX = this.props.mountX * width;\n        const mountTranslateY = this.props.mountY * height;\n        if (this.scaleRotateTransform) {\n            const pivotTranslateX = this.props.pivotX * width;\n            const pivotTranslateY = this.props.pivotY * height;\n            this.localTransform = Matrix3d.translate(x - mountTranslateX + pivotTranslateX, y - mountTranslateY + pivotTranslateY, this.localTransform)\n                .multiply(this.scaleRotateTransform)\n                .translate(-pivotTranslateX, -pivotTranslateY);\n        }\n        else {\n            this.localTransform = Matrix3d.translate(x - mountTranslateX, y - mountTranslateY, this.localTransform);\n        }\n        // Handle 'contain' resize mode\n        const texture = this.props.texture;\n        if (texture &&\n            texture.dimensions &&\n            this.props.textureOptions?.resizeMode?.type === 'contain') {\n            let resizeModeScaleX = 1;\n            let resizeModeScaleY = 1;\n            let extraX = 0;\n            let extraY = 0;\n            const { width: tw, height: th } = texture.dimensions;\n            const txAspectRatio = tw / th;\n            const nodeAspectRatio = width / height;\n            if (txAspectRatio > nodeAspectRatio) {\n                // Texture is wider than node\n                // Center the node vertically (shift down by extraY)\n                // Scale the node vertically to maintain original aspect ratio\n                const scaleX = width / tw;\n                const scaledTxHeight = th * scaleX;\n                extraY = (height - scaledTxHeight) / 2;\n                resizeModeScaleY = scaledTxHeight / height;\n            }\n            else {\n                // Texture is taller than node (or equal)\n                // Center the node horizontally (shift right by extraX)\n                // Scale the node horizontally to maintain original aspect ratio\n                const scaleY = height / th;\n                const scaledTxWidth = tw * scaleY;\n                extraX = (width - scaledTxWidth) / 2;\n                resizeModeScaleX = scaledTxWidth / width;\n            }\n            // Apply the extra translation and scale to the local transform\n            this.localTransform\n                .translate(extraX, extraY)\n                .scale(resizeModeScaleX, resizeModeScaleY);\n        }\n        this.setUpdateType(UpdateType.Global);\n    }\n    /**\n     * @todo: test for correct calculation flag\n     * @param delta\n     */\n    update(delta, parentClippingRect) {\n        if (this.updateType & UpdateType.ScaleRotate) {\n            this.updateScaleRotateTransform();\n            this.setUpdateType(UpdateType.Local);\n        }\n        if (this.updateType & UpdateType.Local) {\n            this.updateLocalTransform();\n            this.setUpdateType(UpdateType.Global);\n        }\n        const parent = this.props.parent;\n        let childUpdateType = UpdateType.None;\n        if (this.updateType & UpdateType.ParentRenderTexture) {\n            let p = this.parent;\n            while (p) {\n                if (p.rtt) {\n                    this.parentHasRenderTexture = true;\n                }\n                p = p.parent;\n            }\n        }\n        // If we have render texture updates and not already running a full update\n        if (this.updateType ^ UpdateType.All &&\n            this.updateType & UpdateType.RenderTexture) {\n            this.children.forEach((child) => {\n                child.setUpdateType(UpdateType.All);\n            });\n        }\n        if (this.updateType & UpdateType.Global) {\n            assertTruthy(this.localTransform);\n            this.globalTransform = Matrix3d.copy(parent?.globalTransform || this.localTransform, this.globalTransform);\n            if (this.parentHasRenderTexture && this.props.parent?.rtt) {\n                this.globalTransform = Matrix3d.identity();\n            }\n            if (parent) {\n                this.globalTransform.multiply(this.localTransform);\n            }\n            this.calculateRenderCoords();\n            this.updateBoundingRect();\n            this.setUpdateType(UpdateType.Clipping | UpdateType.RenderState | UpdateType.Children);\n            childUpdateType |= UpdateType.Global;\n        }\n        if (this.updateType & UpdateType.Clipping) {\n            this.calculateClippingRect(parentClippingRect);\n            this.setUpdateType(UpdateType.Children);\n            childUpdateType |= UpdateType.Clipping;\n        }\n        if (this.updateType & UpdateType.WorldAlpha) {\n            if (parent) {\n                this.worldAlpha = parent.worldAlpha * this.props.alpha;\n            }\n            else {\n                this.worldAlpha = this.props.alpha;\n            }\n            this.setUpdateType(UpdateType.Children |\n                UpdateType.PremultipliedColors |\n                UpdateType.IsRenderable);\n            childUpdateType |= UpdateType.WorldAlpha;\n        }\n        if (this.updateType & UpdateType.PremultipliedColors) {\n            this.premultipliedColorTl = mergeColorAlphaPremultiplied(this.props.colorTl, this.worldAlpha, true);\n            // If all the colors are the same just sent them all to the same value\n            if (this.props.colorTl === this.props.colorTr &&\n                this.props.colorBl === this.props.colorBr &&\n                this.props.colorTl === this.props.colorBl) {\n                this.premultipliedColorTr =\n                    this.premultipliedColorBl =\n                        this.premultipliedColorBr =\n                            this.premultipliedColorTl;\n            }\n            else {\n                this.premultipliedColorTr = mergeColorAlphaPremultiplied(this.props.colorTr, this.worldAlpha, true);\n                this.premultipliedColorBl = mergeColorAlphaPremultiplied(this.props.colorBl, this.worldAlpha, true);\n                this.premultipliedColorBr = mergeColorAlphaPremultiplied(this.props.colorBr, this.worldAlpha, true);\n            }\n        }\n        if (this.updateType & UpdateType.RenderState) {\n            this.updateRenderState(parentClippingRect);\n            this.setUpdateType(UpdateType.IsRenderable);\n        }\n        if (this.updateType & UpdateType.IsRenderable) {\n            this.updateIsRenderable();\n        }\n        // No need to update zIndex if there is no parent\n        if (parent && this.updateType & UpdateType.CalculatedZIndex) {\n            this.calculateZIndex();\n            // Tell parent to re-sort children\n            parent.setUpdateType(UpdateType.ZIndexSortedChildren);\n        }\n        if (this.updateType & UpdateType.Children &&\n            this.children.length &&\n            !this.rtt) {\n            this.children.forEach((child) => {\n                // Trigger the depenedent update types on the child\n                child.setUpdateType(childUpdateType);\n                // If child has no updates, skip\n                if (child.updateType === 0) {\n                    return;\n                }\n                child.update(delta, this.clippingRect);\n            });\n        }\n        // Sorting children MUST happen after children have been updated so\n        // that they have the oppotunity to update their calculated zIndex.\n        if (this.updateType & UpdateType.ZIndexSortedChildren) {\n            // reorder z-index\n            this.sortChildren();\n        }\n        // reset update type\n        this.updateType = 0;\n    }\n    //check if CoreNode is renderable based on props\n    checkRenderProps() {\n        if (this.props.texture) {\n            return true;\n        }\n        if (!this.props.width || !this.props.height) {\n            return false;\n        }\n        if (this.props.shader !== this.stage.defShaderCtr) {\n            return true;\n        }\n        if (this.props.clipping) {\n            return true;\n        }\n        if (this.props.color !== 0) {\n            return true;\n        }\n        // Consider removing these checks and just using the color property check above.\n        // Maybe add a forceRender prop for nodes that should always render.\n        if (this.props.colorTop !== 0) {\n            return true;\n        }\n        if (this.props.colorBottom !== 0) {\n            return true;\n        }\n        if (this.props.colorLeft !== 0) {\n            return true;\n        }\n        if (this.props.colorRight !== 0) {\n            return true;\n        }\n        if (this.props.colorTl !== 0) {\n            return true;\n        }\n        if (this.props.colorTr !== 0) {\n            return true;\n        }\n        if (this.props.colorBl !== 0) {\n            return true;\n        }\n        if (this.props.colorBr !== 0) {\n            return true;\n        }\n        return false;\n    }\n    checkRenderBounds(parentClippingRect) {\n        assertTruthy(this.renderBound);\n        const rectW = parentClippingRect.width || this.stage.root.width;\n        const rectH = parentClippingRect.height || this.stage.root.height;\n        this.strictBound = createBound(parentClippingRect.x, parentClippingRect.y, parentClippingRect.x + rectW, parentClippingRect.y + rectH, this.strictBound);\n        if (boundInsideBound(this.renderBound, this.strictBound)) {\n            return CoreNodeRenderState.InViewport;\n        }\n        const renderM = this.stage.boundsMargin;\n        this.preloadBound = createBound(this.strictBound.x1 - renderM[3], this.strictBound.y1 - renderM[0], this.strictBound.x2 + renderM[1], this.strictBound.y2 + renderM[2], this.preloadBound);\n        if (boundInsideBound(this.renderBound, this.preloadBound)) {\n            return CoreNodeRenderState.InBounds;\n        }\n        return CoreNodeRenderState.OutOfBounds;\n    }\n    updateRenderState(parentClippingRect) {\n        const renderState = this.checkRenderBounds(parentClippingRect);\n        if (renderState === this.renderState) {\n            return;\n        }\n        const previous = this.renderState;\n        this.renderState = renderState;\n        const event = CoreNodeRenderStateMap.get(renderState);\n        assertTruthy(event);\n        this.emit(event, {\n            previous,\n            current: renderState,\n        });\n    }\n    /**\n     * This function updates the `isRenderable` property based on certain conditions.\n     *\n     * @returns\n     */\n    updateIsRenderable() {\n        let newIsRenderable;\n        if (this.worldAlpha === 0 || !this.checkRenderProps()) {\n            newIsRenderable = false;\n        }\n        else {\n            newIsRenderable = this.renderState > CoreNodeRenderState.OutOfBounds;\n        }\n        if (this.isRenderable !== newIsRenderable) {\n            this.isRenderable = newIsRenderable;\n            this.onChangeIsRenderable(newIsRenderable);\n        }\n    }\n    onChangeIsRenderable(isRenderable) {\n        this.texture?.setRenderableOwner(this, isRenderable);\n    }\n    calculateRenderCoords() {\n        const { width, height, globalTransform: transform } = this;\n        assertTruthy(transform);\n        const { tx, ty, ta, tb, tc, td } = transform;\n        if (tb === 0 && tc === 0) {\n            const minX = tx;\n            const maxX = tx + width * ta;\n            const minY = ty;\n            const maxY = ty + height * td;\n            this.renderCoords = RenderCoords.translate(\n            //top-left\n            minX, minY, \n            //top-right\n            maxX, minY, \n            //bottom-right\n            maxX, maxY, \n            //bottom-left\n            minX, maxY, this.renderCoords);\n        }\n        else {\n            this.renderCoords = RenderCoords.translate(\n            //top-left\n            tx, ty, \n            //top-right\n            tx + width * ta, ty + width * tc, \n            //bottom-right\n            tx + width * ta + height * tb, ty + width * tc + height * td, \n            //bottom-left\n            tx + height * tb, ty + height * td, this.renderCoords);\n        }\n    }\n    updateBoundingRect() {\n        const { renderCoords, globalTransform: transform } = this;\n        assertTruthy(transform);\n        assertTruthy(renderCoords);\n        const { tb, tc } = transform;\n        const { x1, y1, x3, y3 } = renderCoords;\n        if (tb === 0 || tc === 0) {\n            this.renderBound = createBound(x1, y1, x3, y3, this.renderBound);\n        }\n        else {\n            const { x2, x4, y2, y4 } = renderCoords;\n            this.renderBound = createBound(Math.min(x1, x2, x3, x4), Math.min(y1, y2, y3, y4), Math.max(x1, x2, x3, x4), Math.max(y1, y2, y3, y4), this.renderBound);\n        }\n    }\n    /**\n     * This function calculates the clipping rectangle for a node.\n     *\n     * The function then checks if the node is rotated. If the node requires clipping and is not rotated, a new clipping rectangle is created based on the node's global transform and dimensions.\n     * If a parent clipping rectangle exists, it is intersected with the node's clipping rectangle (if it exists), or replaces the node's clipping rectangle.\n     *\n     * Finally, the node's parentClippingRect and clippingRect properties are updated.\n     */\n    calculateClippingRect(parentClippingRect) {\n        assertTruthy(this.globalTransform);\n        const { clippingRect, props, globalTransform: gt } = this;\n        const { clipping } = props;\n        const isRotated = gt.tb !== 0 || gt.tc !== 0;\n        if (clipping && !isRotated) {\n            clippingRect.x = gt.tx;\n            clippingRect.y = gt.ty;\n            clippingRect.width = this.width * gt.ta;\n            clippingRect.height = this.height * gt.td;\n            clippingRect.valid = true;\n        }\n        else {\n            clippingRect.valid = false;\n        }\n        if (parentClippingRect.valid && clippingRect.valid) {\n            // Intersect parent clipping rect with node clipping rect\n            intersectRect(parentClippingRect, clippingRect, clippingRect);\n        }\n        else if (parentClippingRect.valid) {\n            // Copy parent clipping rect\n            copyRect(parentClippingRect, clippingRect);\n            clippingRect.valid = true;\n        }\n    }\n    calculateZIndex() {\n        const props = this.props;\n        const z = props.zIndex || 0;\n        const p = props.parent?.zIndex || 0;\n        let zIndex = z;\n        if (props.parent?.zIndexLocked) {\n            zIndex = z < p ? z : p;\n        }\n        this.calcZIndex = zIndex;\n    }\n    /**\n     * Destroy the node and cleanup all resources\n     */\n    destroy() {\n        this.unloadTexture();\n        this.clippingRect.valid = false;\n        this.isRenderable = false;\n        delete this.renderCoords;\n        delete this.renderBound;\n        delete this.strictBound;\n        delete this.preloadBound;\n        delete this.globalTransform;\n        delete this.scaleRotateTransform;\n        delete this.localTransform;\n        this.props.texture = null;\n        this.props.shader = this.stage.defShaderCtr;\n        const children = [...this.children];\n        for (let i = 0; i < children.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            children[i].destroy();\n        }\n        // This very action will also remove the node from the parent's children array\n        this.parent = null;\n        if (this.rtt) {\n            this.stage.renderer.removeRTTNode(this);\n        }\n        this.removeAllListeners();\n    }\n    renderQuads(renderer) {\n        const { texture, width, height, textureOptions, rtt, shader } = this.props;\n        // Prevent quad rendering if parent has a render texture\n        // and renderer is not currently rendering to a texture\n        if (this.parentHasRenderTexture) {\n            if (!renderer.renderToTextureActive) {\n                return;\n            }\n            // Prevent quad rendering if parent render texture is not the active render texture\n            if (this.parentRenderTexture !== renderer.activeRttNode) {\n                return;\n            }\n        }\n        const { premultipliedColorTl, premultipliedColorTr, premultipliedColorBl, premultipliedColorBr, } = this;\n        const { zIndex, worldAlpha, globalTransform: gt, clippingRect, renderCoords, } = this;\n        assertTruthy(gt);\n        assertTruthy(renderCoords);\n        // add to list of renderables to be sorted before rendering\n        renderer.addQuad({\n            width,\n            height,\n            colorTl: premultipliedColorTl,\n            colorTr: premultipliedColorTr,\n            colorBl: premultipliedColorBl,\n            colorBr: premultipliedColorBr,\n            texture,\n            textureOptions,\n            zIndex,\n            shader: shader.shader,\n            shaderProps: shader.getResolvedProps(),\n            alpha: worldAlpha,\n            clippingRect,\n            tx: gt.tx,\n            ty: gt.ty,\n            ta: gt.ta,\n            tb: gt.tb,\n            tc: gt.tc,\n            td: gt.td,\n            renderCoords,\n            rtt,\n            parentHasRenderTexture: this.parentHasRenderTexture,\n            framebufferDimensions: this.framebufferDimensions,\n        });\n    }\n    //#region Properties\n    get id() {\n        return this._id;\n    }\n    get x() {\n        return this.props.x;\n    }\n    set x(value) {\n        if (this.props.x !== value) {\n            this.props.x = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get absX() {\n        return (this.props.x +\n            (this.props.parent?.absX || this.props.parent?.globalTransform?.tx || 0));\n    }\n    get absY() {\n        return this.props.y + (this.props.parent?.absY ?? 0);\n    }\n    get y() {\n        return this.props.y;\n    }\n    set y(value) {\n        if (this.props.y !== value) {\n            this.props.y = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        if (this.props.width !== value) {\n            this.props.width = value;\n            this.setUpdateType(UpdateType.Local);\n            if (this.props.rtt) {\n                this.texture = this.stage.txManager.loadTexture('RenderTexture', {\n                    width: this.width,\n                    height: this.height,\n                });\n                this.textureOptions.preload = true;\n                this.setUpdateType(UpdateType.RenderTexture);\n            }\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        if (this.props.height !== value) {\n            this.props.height = value;\n            this.setUpdateType(UpdateType.Local);\n            if (this.props.rtt) {\n                this.texture = this.stage.txManager.loadTexture('RenderTexture', {\n                    width: this.width,\n                    height: this.height,\n                });\n                this.textureOptions.preload = true;\n                this.setUpdateType(UpdateType.RenderTexture);\n            }\n        }\n    }\n    get scale() {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        return this.scaleX;\n    }\n    set scale(value) {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        this.scaleX = value;\n        this.scaleY = value;\n    }\n    get scaleX() {\n        return this.props.scaleX;\n    }\n    set scaleX(value) {\n        if (this.props.scaleX !== value) {\n            this.props.scaleX = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get scaleY() {\n        return this.props.scaleY;\n    }\n    set scaleY(value) {\n        if (this.props.scaleY !== value) {\n            this.props.scaleY = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get mount() {\n        return this.props.mount;\n    }\n    set mount(value) {\n        if (this.props.mountX !== value || this.props.mountY !== value) {\n            this.props.mountX = value;\n            this.props.mountY = value;\n            this.props.mount = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get mountX() {\n        return this.props.mountX;\n    }\n    set mountX(value) {\n        if (this.props.mountX !== value) {\n            this.props.mountX = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get mountY() {\n        return this.props.mountY;\n    }\n    set mountY(value) {\n        if (this.props.mountY !== value) {\n            this.props.mountY = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivot() {\n        return this.props.pivot;\n    }\n    set pivot(value) {\n        if (this.props.pivotX !== value || this.props.pivotY !== value) {\n            this.props.pivotX = value;\n            this.props.pivotY = value;\n            this.props.pivot = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivotX() {\n        return this.props.pivotX;\n    }\n    set pivotX(value) {\n        if (this.props.pivotX !== value) {\n            this.props.pivotX = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivotY() {\n        return this.props.pivotY;\n    }\n    set pivotY(value) {\n        if (this.props.pivotY !== value) {\n            this.props.pivotY = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get rotation() {\n        return this.props.rotation;\n    }\n    set rotation(value) {\n        if (this.props.rotation !== value) {\n            this.props.rotation = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get alpha() {\n        return this.props.alpha;\n    }\n    set alpha(value) {\n        this.props.alpha = value;\n        this.setUpdateType(UpdateType.PremultipliedColors | UpdateType.WorldAlpha);\n    }\n    get autosize() {\n        return this.props.autosize;\n    }\n    set autosize(value) {\n        this.props.autosize = value;\n    }\n    get clipping() {\n        return this.props.clipping;\n    }\n    set clipping(value) {\n        this.props.clipping = value;\n        this.setUpdateType(UpdateType.Clipping);\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(value) {\n        this.colorTop = value;\n        this.colorBottom = value;\n        this.colorLeft = value;\n        this.colorRight = value;\n        this.props.color = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTop() {\n        return this.props.colorTop;\n    }\n    set colorTop(value) {\n        if (this.props.colorTl !== value || this.props.colorTr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n        }\n        this.props.colorTop = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBottom() {\n        return this.props.colorBottom;\n    }\n    set colorBottom(value) {\n        if (this.props.colorBl !== value || this.props.colorBr !== value) {\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.colorBottom = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorLeft() {\n        return this.props.colorLeft;\n    }\n    set colorLeft(value) {\n        if (this.props.colorTl !== value || this.props.colorBl !== value) {\n            this.colorTl = value;\n            this.colorBl = value;\n        }\n        this.props.colorLeft = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorRight() {\n        return this.props.colorRight;\n    }\n    set colorRight(value) {\n        if (this.props.colorTr !== value || this.props.colorBr !== value) {\n            this.colorTr = value;\n            this.colorBr = value;\n        }\n        this.props.colorRight = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTl() {\n        return this.props.colorTl;\n    }\n    set colorTl(value) {\n        this.props.colorTl = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTr() {\n        return this.props.colorTr;\n    }\n    set colorTr(value) {\n        this.props.colorTr = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBl() {\n        return this.props.colorBl;\n    }\n    set colorBl(value) {\n        this.props.colorBl = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBr() {\n        return this.props.colorBr;\n    }\n    set colorBr(value) {\n        this.props.colorBr = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    // we're only interested in parent zIndex to test\n    // if we should use node zIndex is higher then parent zIndex\n    get zIndexLocked() {\n        return this.props.zIndexLocked || 0;\n    }\n    set zIndexLocked(value) {\n        this.props.zIndexLocked = value;\n        this.setUpdateType(UpdateType.CalculatedZIndex | UpdateType.Children);\n        this.children.forEach((child) => {\n            child.setUpdateType(UpdateType.CalculatedZIndex);\n        });\n    }\n    get zIndex() {\n        return this.props.zIndex;\n    }\n    set zIndex(value) {\n        this.props.zIndex = value;\n        this.setUpdateType(UpdateType.CalculatedZIndex | UpdateType.Children);\n        this.children.forEach((child) => {\n            child.setUpdateType(UpdateType.CalculatedZIndex);\n        });\n    }\n    get parent() {\n        return this.props.parent;\n    }\n    set parent(newParent) {\n        const oldParent = this.props.parent;\n        if (oldParent === newParent) {\n            return;\n        }\n        this.props.parent = newParent;\n        if (oldParent) {\n            const index = oldParent.children.indexOf(this);\n            assertTruthy(index !== -1, \"CoreNode.parent: Node not found in old parent's children!\");\n            oldParent.children.splice(index, 1);\n            oldParent.setUpdateType(UpdateType.Children | UpdateType.ZIndexSortedChildren);\n        }\n        if (newParent) {\n            newParent.children.push(this);\n            // Since this node has a new parent, to be safe, have it do a full update.\n            this.setUpdateType(UpdateType.All);\n            // Tell parent that it's children need to be updated and sorted.\n            newParent.setUpdateType(UpdateType.Children | UpdateType.ZIndexSortedChildren);\n            if (newParent.rtt || newParent.parentHasRenderTexture) {\n                this.setRTTUpdates(UpdateType.All);\n            }\n        }\n        this.updateScaleRotateTransform();\n    }\n    get rtt() {\n        return this.props.rtt;\n    }\n    set rtt(value) {\n        if (this.props.rtt === true) {\n            this.props.rtt = value;\n            // unload texture if we used to have a render texture\n            if (value === false && this.texture !== null) {\n                this.unloadTexture();\n                this.setUpdateType(UpdateType.All);\n                this.children.forEach((child) => {\n                    child.parentHasRenderTexture = false;\n                });\n                this.stage.renderer?.removeRTTNode(this);\n                return;\n            }\n        }\n        // if the new value is false and we didnt have rtt previously, we don't need to do anything\n        if (value === false) {\n            return;\n        }\n        // load texture\n        this.texture = this.stage.txManager.loadTexture('RenderTexture', {\n            width: this.width,\n            height: this.height,\n        });\n        this.textureOptions.preload = true;\n        this.props.rtt = true;\n        this.hasRTTupdates = true;\n        this.setUpdateType(UpdateType.All);\n        this.children.forEach((child) => {\n            child.setUpdateType(UpdateType.All);\n        });\n        // Store RTT nodes in a separate list\n        this.stage.renderer?.renderToTexture(this);\n    }\n    get shader() {\n        return this.props.shader;\n    }\n    set shader(value) {\n        if (this.props.shader === value) {\n            return;\n        }\n        this.props.shader = value;\n        this.setUpdateType(UpdateType.IsRenderable);\n    }\n    get src() {\n        return this.props.src;\n    }\n    set src(imageUrl) {\n        if (this.props.src === imageUrl) {\n            return;\n        }\n        this.props.src = imageUrl;\n        if (!imageUrl) {\n            this.texture = null;\n            return;\n        }\n        this.texture = this.stage.txManager.loadTexture('ImageTexture', {\n            src: imageUrl,\n        });\n    }\n    /**\n     * Returns the framebuffer dimensions of the node.\n     * If the node has a render texture, the dimensions are the same as the node's dimensions.\n     * If the node does not have a render texture, the dimensions are inherited from the parent.\n     * If the node parent has a render texture and the node is a render texture, the nodes dimensions are used.\n     */\n    get framebufferDimensions() {\n        if (this.parentHasRenderTexture && !this.rtt && this.parent) {\n            return this.parent.framebufferDimensions;\n        }\n        return { width: this.width, height: this.height };\n    }\n    /**\n     * Returns the parent render texture node if it exists.\n     */\n    get parentRenderTexture() {\n        let parent = this.parent;\n        while (parent) {\n            if (parent.rtt) {\n                return parent;\n            }\n            parent = parent.parent;\n        }\n        return null;\n    }\n    get texture() {\n        return this.props.texture;\n    }\n    set texture(value) {\n        if (this.props.texture === value) {\n            return;\n        }\n        const oldTexture = this.props.texture;\n        if (oldTexture) {\n            oldTexture.setRenderableOwner(this, false);\n            this.unloadTexture();\n        }\n        this.props.texture = value;\n        if (value) {\n            value.setRenderableOwner(this, this.isRenderable);\n            this.loadTexture();\n        }\n        this.setUpdateType(UpdateType.IsRenderable);\n    }\n    set textureOptions(value) {\n        this.props.textureOptions = value;\n    }\n    get textureOptions() {\n        return this.props.textureOptions;\n    }\n    setRTTUpdates(type) {\n        this.hasRTTupdates = true;\n        this.parent?.setRTTUpdates(type);\n    }\n    animate(props, settings) {\n        const animation = new CoreAnimation(this, props, settings);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n        const controller = new CoreAnimationController(this.stage.animationManager, animation);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return controller;\n    }\n    flush() {\n        // no-op\n    }\n}\n//# sourceMappingURL=CoreNode.js.map","import { CoreNode, } from '../core/CoreNode.js';\nimport {} from './Renderer.js';\nimport { isProductionEnvironment } from '../utils.js';\nconst stylePropertyMap = {\n    alpha: (v) => {\n        if (v === 1) {\n            return null;\n        }\n        return { prop: 'opacity', value: `${v}` };\n    },\n    x: (x) => {\n        return { prop: 'left', value: `${x}px` };\n    },\n    y: (y) => {\n        return { prop: 'top', value: `${y}px` };\n    },\n    width: (w) => {\n        if (w === 0) {\n            return null;\n        }\n        return { prop: 'width', value: `${w}px` };\n    },\n    height: (h) => {\n        if (h === 0) {\n            return null;\n        }\n        return { prop: 'height', value: `${h}px` };\n    },\n    zIndex: () => 'zIndex',\n    fontFamily: () => 'font-family',\n    fontSize: () => 'font-size',\n    fontStyle: () => 'font-style',\n    fontWeight: () => 'font-weight',\n    fontStretch: () => 'font-stretch',\n    lineHeight: () => 'line-height',\n    letterSpacing: () => 'letter-spacing',\n    textAlign: () => 'text-align',\n    overflowSuffix: () => 'overflow-suffix',\n    maxLines: () => 'max-lines',\n    contain: () => 'contain',\n    verticalAlign: () => 'vertical-align',\n    clipping: (v) => {\n        if (v === false) {\n            return null;\n        }\n        return { prop: 'overflow', value: v ? 'hidden' : 'visible' };\n    },\n    rotation: (v) => {\n        if (v === 0) {\n            return null;\n        }\n        return { prop: 'transform', value: `rotate(${v}rad)` };\n    },\n    scale: (v) => {\n        if (v === 1) {\n            return null;\n        }\n        return { prop: 'transform', value: `scale(${v})` };\n    },\n    scaleX: (v) => {\n        if (v === 1) {\n            return null;\n        }\n        return { prop: 'transform', value: `scaleX(${v})` };\n    },\n    scaleY: (v) => {\n        if (v === 1) {\n            return null;\n        }\n        return { prop: 'transform', value: `scaleY(${v})` };\n    },\n    color: (v) => {\n        if (v === 0) {\n            return null;\n        }\n        return { prop: 'color', value: convertColorToRgba(v) };\n    },\n};\nconst convertColorToRgba = (color) => {\n    const a = (color & 0xff) / 255;\n    const b = (color >> 8) & 0xff;\n    const g = (color >> 16) & 0xff;\n    const r = (color >> 24) & 0xff;\n    return `rgba(${r},${g},${b},${a})`;\n};\nconst domPropertyMap = {\n    id: 'id',\n};\nconst gradientColorPropertyMap = [\n    'colorTop',\n    'colorBottom',\n    'colorLeft',\n    'colorRight',\n    'colorTl',\n    'colorTr',\n    'colorBl',\n    'colorBr',\n];\nexport class Inspector {\n    root = null;\n    canvas = null;\n    height = 1080;\n    width = 1920;\n    scaleX = 1;\n    scaleY = 1;\n    constructor(canvas, settings) {\n        if (isProductionEnvironment())\n            return;\n        if (!settings) {\n            throw new Error('settings is required');\n        }\n        // calc dimensions based on the devicePixelRatio\n        this.height = Math.ceil(settings.appHeight ?? 1080 / (settings.deviceLogicalPixelRatio ?? 1));\n        this.width = Math.ceil(settings.appWidth ?? 1900 / (settings.deviceLogicalPixelRatio ?? 1));\n        this.scaleX = settings.deviceLogicalPixelRatio ?? 1;\n        this.scaleY = settings.deviceLogicalPixelRatio ?? 1;\n        this.canvas = canvas;\n        this.root = document.createElement('div');\n        this.setRootPosition();\n        document.body.appendChild(this.root);\n        //listen for changes on canvas\n        const mutationObserver = new MutationObserver(this.setRootPosition.bind(this));\n        mutationObserver.observe(canvas, {\n            attributes: true,\n            childList: false,\n            subtree: false,\n        });\n        // Create a ResizeObserver to watch for changes in the element's size\n        const resizeObserver = new ResizeObserver(this.setRootPosition.bind(this));\n        resizeObserver.observe(canvas);\n        //listen for changes on window\n        window.addEventListener('resize', this.setRootPosition.bind(this));\n        console.warn('Inspector is enabled, this will impact performance');\n    }\n    setRootPosition() {\n        if (this.root === null || this.canvas === null) {\n            return;\n        }\n        // get the world position of the canvas object, so we can match the inspector to it\n        const rect = this.canvas.getBoundingClientRect();\n        const top = document.documentElement.scrollTop + rect.top;\n        const left = document.documentElement.scrollLeft + rect.left;\n        this.root.id = 'root';\n        this.root.style.left = `${left}px`;\n        this.root.style.top = `${top}px`;\n        this.root.style.width = `${this.width}px`;\n        this.root.style.height = `${this.height}px`;\n        this.root.style.position = 'absolute';\n        this.root.style.transformOrigin = '0 0 0';\n        this.root.style.transform = `scale(${this.scaleX}, ${this.scaleY})`;\n        this.root.style.overflow = 'hidden';\n        this.root.style.zIndex = '65534';\n    }\n    createDiv(id, properties) {\n        const div = document.createElement('div');\n        div.style.position = 'absolute';\n        div.id = id.toString();\n        // set initial properties\n        for (const key in properties) {\n            this.updateNodeProperty(div, \n            // really typescript? really?\n            key, properties[key]);\n        }\n        return div;\n    }\n    createNode(node) {\n        const div = this.createDiv(node.id, node.props);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n        div.node = node;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n        node.div = div;\n        return this.createProxy(node, div);\n    }\n    createTextNode(node) {\n        const div = this.createDiv(node.id, node.props);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n        div.node = node;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n        node.div = div;\n        return this.createProxy(node, div);\n    }\n    createProxy(node, div) {\n        return new Proxy(node, {\n            set: (target, property, value) => {\n                this.updateNodeProperty(div, property, value);\n                return Reflect.set(target, property, value);\n            },\n            get: (target, property, receiver) => {\n                if (property === 'destroy') {\n                    this.destroyNode(target.id);\n                }\n                if (property === 'animate') {\n                    return (props, settings) => {\n                        const anim = target.animate(props, settings);\n                        // Trap the animate start function so we can update the inspector accordingly\n                        return new Proxy(anim, {\n                            get: (target, property, receiver) => {\n                                if (property === 'start') {\n                                    this.animateNode(div, props, settings);\n                                }\n                                return Reflect.get(target, property, receiver);\n                            },\n                        });\n                    };\n                }\n                return Reflect.get(target, property, receiver);\n            },\n        });\n    }\n    destroyNode(id) {\n        const div = document.getElementById(id.toString());\n        div?.remove();\n    }\n    updateNodeProperty(div, property, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value) {\n        if (this.root === null || value === undefined || value === null) {\n            return;\n        }\n        /**\n         * Special case for parent property\n         */\n        if (property === 'parent') {\n            const parentId = value.id;\n            // only way to detect if the parent is the root node\n            // if you are reading this and have a better way, please let me know\n            if (parentId === 1) {\n                this.root.appendChild(div);\n                return;\n            }\n            const parent = document.getElementById(parentId.toString());\n            parent?.appendChild(div);\n            return;\n        }\n        // special case for text\n        if (property === 'text') {\n            div.innerHTML = String(value);\n            // hide text because we can't render SDF fonts\n            // it would look weird and obstruct the WebGL rendering\n            div.style.visibility = 'hidden';\n            return;\n        }\n        // special case for images\n        // we're not setting any CSS properties to avoid images getting loaded twice\n        // as the renderer will handle the loading of the image. Setting it to `data-src`\n        if (property === 'src' && value) {\n            div.setAttribute(`data-src`, String(value));\n            return;\n        }\n        // special case for color gradients (normal colors are handled by the stylePropertyMap)\n        // FIXME the renderer seems to return the same number for all colors\n        // if (gradientColorPropertyMap.includes(property as string)) {\n        //   const color = convertColorToRgba(value as number);\n        //   div.setAttribute(`data-${property}`, color);\n        //   return;\n        // }\n        // CSS mappable attribute\n        if (stylePropertyMap[property]) {\n            const mappedStyleResponse = stylePropertyMap[property]?.(value);\n            if (mappedStyleResponse === null) {\n                return;\n            }\n            if (typeof mappedStyleResponse === 'string') {\n                div.style.setProperty(mappedStyleResponse, String(value));\n                return;\n            }\n            if (typeof mappedStyleResponse === 'object') {\n                div.style.setProperty(mappedStyleResponse.prop, mappedStyleResponse.value);\n            }\n            return;\n        }\n        // DOM properties\n        if (domPropertyMap[property]) {\n            const domProperty = domPropertyMap[property];\n            if (!domProperty) {\n                return;\n            }\n            div.setAttribute(String(domProperty), String(value));\n            return;\n        }\n        // custom data properties\n        if (property === 'data') {\n            for (const key in value) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                const keyValue = value[key];\n                if (keyValue === undefined) {\n                    div.removeAttribute(`data-${key}`);\n                }\n                else {\n                    div.setAttribute(`data-${key}`, String(keyValue));\n                }\n            }\n            return;\n        }\n    }\n    // simple animation handler\n    animateNode(div, props, settings) {\n        const { duration = 1000, delay = 0,\n        // easing = 'linear',\n        // repeat = 0,\n        // loop = false,\n        // stopMethod = false,\n         } = settings;\n        const { x, y, width, height, alpha = 1, rotation = 0, scale = 1, color, } = props;\n        // ignoring loops and repeats for now, as that might be a bit too much for the inspector\n        function animate() {\n            setTimeout(() => {\n                div.style.top = `${y}px`;\n                div.style.left = `${x}px`;\n                div.style.width = `${width}px`;\n                div.style.height = `${height}px`;\n                div.style.opacity = `${alpha}`;\n                div.style.rotate = `${rotation}rad`;\n                div.style.scale = `${scale}`;\n                div.style.color = convertColorToRgba(color);\n            }, duration);\n        }\n        setTimeout(animate, delay);\n    }\n}\n//# sourceMappingURL=Inspector.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Platform render loop initiator\n */\nexport const startLoop = (stage) => {\n    let isIdle = false;\n    const runLoop = () => {\n        stage.updateFrameTime();\n        stage.updateAnimations();\n        if (!stage.hasSceneUpdates()) {\n            // We still need to calculate the fps else it looks like the app is frozen\n            stage.calculateFps();\n            setTimeout(runLoop, 16.666666666666668);\n            if (!isIdle) {\n                if (stage.txMemManager.checkCleanup()) {\n                    stage.txMemManager.cleanup();\n                }\n                stage.eventBus.emit('idle');\n                isIdle = true;\n            }\n            stage.flushFrameEvents();\n            return;\n        }\n        isIdle = false;\n        stage.drawFrame();\n        stage.flushFrameEvents();\n        requestAnimationFrame(runLoop);\n    };\n    requestAnimationFrame(runLoop);\n};\n/**\n * Return unix timestamp\n * @return {number}\n */\nexport const getTimeStamp = () => {\n    return performance ? performance.now() : Date.now();\n};\n//# sourceMappingURL=platform.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    textureSource;\n    memManager;\n    constructor(memManager, textureSource) {\n        this.memManager = memManager;\n        this.textureSource = textureSource;\n    }\n    setTextureMemUse(byteSize) {\n        this.memManager.setTextureMemUse(this.textureSource, byteSize);\n    }\n    get renderable() {\n        return this.textureSource.renderable;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    options;\n    mode;\n    stage;\n    //// Core Managers\n    txManager;\n    txMemManager;\n    shManager;\n    rttNodes = [];\n    constructor(options) {\n        this.options = options;\n        this.stage = options.stage;\n        this.txManager = options.txManager;\n        this.txMemManager = options.txMemManager;\n        this.shManager = options.shManager;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(glw, type, source) {\n    const shader = glw.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    glw.shaderSource(shader, source);\n    glw.compileShader(shader);\n    const success = glw.getShaderParameter(shader, glw.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(glw.getShaderInfoLog(shader));\n    glw.deleteShader(shader);\n}\nexport function createProgram(glw, vertexShader, fragmentShader) {\n    const program = glw.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    glw.attachShader(program, vertexShader);\n    glw.attachShader(program, fragmentShader);\n    glw.linkProgram(program);\n    const success = glw.getProgramParameter(program, glw.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(glw.getProgramInfoLog(program));\n    glw.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    glw;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const glw = (this.glw = this.renderer.glw);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = glw.isWebGl2();\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!glw.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(glw, glw.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(glw, glw.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(glw, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = glw.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            glw.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = glw.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = glw.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = glw.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const { glw } = this;\n        glw.enableVertexAttribArray(location);\n        glw.vertexAttribPointer(buffer, location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.glw.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { glw, parentHasRenderTexture, renderToTexture } = renderOp;\n        // Skip if the parent and current operation both have render textures\n        if (renderToTexture && parentHasRenderTexture) {\n            return;\n        }\n        // Bind render texture framebuffer dimensions as resolution\n        // if the parent has a render texture\n        if (parentHasRenderTexture) {\n            const { width, height } = renderOp.framebufferDimensions || {};\n            // Force pixel ratio to 1.0 for render textures since they are always 1:1\n            // the final render texture will be rendered to the screen with the correct pixel ratio\n            this.setUniform('u_pixelRatio', 1.0);\n            // Set resolution to the framebuffer dimensions\n            this.setUniform('u_resolution', new Float32Array([width ?? 0, height ?? 0]));\n        }\n        else {\n            this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n            this.setUniform('u_resolution', new Float32Array([glw.canvas.width, glw.canvas.height]));\n        }\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, ...value) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-unsafe-argument\n        this.glw.setUniform(this.uniformTypes[name], this.uniformLocations[name], ...value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.glw.useProgram(this.program);\n        this.glw.useProgram(this.program);\n        if (this.glw.isWebGl2() && this.vao) {\n            this.glw.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    glw;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    renderToTexture;\n    parentHasRenderTexture;\n    framebufferDimensions;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(glw, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        super();\n        this.glw = glw;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.renderToTexture = renderToTexture;\n        this.parentHasRenderTexture = parentHasRenderTexture;\n        this.framebufferDimensions = framebufferDimensions;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? glw.getParameter(glw.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { glw, shader, shaderProps, options } = this;\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // Clipping\n        if (this.clippingRect.valid) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            glw.setScissorTest(true);\n            glw.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            glw.setScissorTest(false);\n        }\n        glw.drawElements(glw.TRIANGLES, 6 * this.numQuads, glw.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param glw\n */\nexport function getWebGlParameters(glw) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = glw.getParameter(glw[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param glw\n */\nexport function getWebGlExtensions(glw) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = glw.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n *\n * @param glw\n * @param size\n */\nexport function createIndexBuffer(glw, size) {\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = glw.createBuffer();\n    glw.elementArrayBufferData(buffer, indices, glw.STATIC_DRAW);\n}\n/**\n * Checks if an object is of type HTMLImageElement.\n * This is used because we cant check for HTMLImageElement directly when the\n * renderer is running in a seperate web worker context.\n *\n * @param obj\n * @returns\n */\nexport function isHTMLImageElement(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        obj.constructor &&\n        obj.constructor.name === 'HTMLImageElement');\n}\n//# sourceMappingURL=RendererUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isHTMLImageElement } from './internal/RendererUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    glw;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(glw, memManager, textureSource) {\n        super(memManager, textureSource);\n        this.glw = glw;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            // If the texture has been freed while loading, return early.\n            if (this._state === 'freed') {\n                return;\n            }\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            // If the texture has been freed while loading, return early.\n            if (this._state === 'freed') {\n                return;\n            }\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        const { glw } = this;\n        // Set to a 1x1 transparent texture\n        glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        this.setTextureMemUse(TRANSPARENT_TEXTURE_DATA.byteLength);\n        const textureData = await this.textureSource?.getTextureData();\n        // If the texture has been freed while loading, return early.\n        if (!this._nativeCtxTexture) {\n            assertTruthy(this._state === 'freed');\n            return { width: 0, height: 0 };\n        }\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        glw.activeTexture(0);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if (textureData.data instanceof ImageBitmap ||\n            textureData.data instanceof ImageData ||\n            // not using typeof HTMLImageElement due to web worker\n            isHTMLImageElement(textureData.data)) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.pixelStorei(glw.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            glw.texImage2D(0, glw.RGBA, glw.RGBA, glw.UNSIGNED_BYTE, data);\n            this.setTextureMemUse(width * height * 4);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (glw.isWebGl2() || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                glw.generateMipmap();\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n            this.setTextureMemUse(TRANSPARENT_TEXTURE_DATA.byteLength);\n        }\n        else if ('mipmaps' in textureData.data && textureData.data.mipmaps) {\n            const { mipmaps, width = 0, height = 0, type, glInternalFormat, } = textureData.data;\n            const view = type === 'ktx'\n                ? new DataView(mipmaps[0] ?? new ArrayBuffer(0))\n                : mipmaps[0];\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.compressedTexImage2D(0, glInternalFormat, width, height, 0, view);\n            glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n            glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n            this.setTextureMemUse(view.byteLength);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this.textureSource.setState('freed');\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        const { glw } = this;\n        glw.deleteTexture(this._nativeCtxTexture);\n        this.setTextureMemUse(0);\n        this._nativeCtxTexture = null;\n    }\n    /**\n     * Create native context texture\n     *\n     * @remarks\n     * When this method returns the returned texture will be bound to the GL context state.\n     *\n     * @param width\n     * @param height\n     * @returns\n     */\n    createNativeCtxTexture() {\n        const { glw } = this;\n        const nativeTexture = glw.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        glw.activeTexture(0);\n        glw.bindTexture(nativeTexture);\n        // linear texture filtering\n        glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n        glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n        // texture wrapping method\n        glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n        glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'freed';\n    renderableOwners = new Set();\n    renderable = false;\n    lastRenderableChangeTime = 0;\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Add/remove an owner to/from the Texture based on its renderability.\n     *\n     * @remarks\n     * Any object can own a texture, be it a CoreNode or even the state object\n     * from a Text Renderer.\n     *\n     * When the reference to the texture that an owner object holds is replaced\n     * or cleared it must call this with `renderable=false` to release the owner\n     * association.\n     *\n     * @param owner\n     * @param renderable\n     */\n    setRenderableOwner(owner, renderable) {\n        const oldSize = this.renderableOwners.size;\n        if (renderable) {\n            this.renderableOwners.add(owner);\n            const newSize = this.renderableOwners.size;\n            if (newSize > oldSize && newSize === 1) {\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n                this.renderable = true;\n                this.lastRenderableChangeTime = this.txManager.frameTime;\n                this.onChangeIsRenderable?.(true);\n            }\n        }\n        else {\n            this.renderableOwners.delete(owner);\n            const newSize = this.renderableOwners.size;\n            if (newSize < oldSize && newSize === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n                this.renderable = false;\n                this.lastRenderableChangeTime = this.txManager.frameTime;\n                this.onChangeIsRenderable?.(false);\n            }\n        }\n    }\n    /**\n     * Get the CoreContextTexture for this Texture\n     *\n     * @remarks\n     * Each Texture has a corresponding CoreContextTexture that is used to\n     * manage the texture's native data depending on the renderer's mode\n     * (WebGL, Canvas, etc).\n     *\n     * The Texture and CoreContextTexture are always linked together in a 1:1\n     * relationship.\n     */\n    get ctxTexture() {\n        // The first time this is called, create the ctxTexture\n        const ctxTexture = this.txManager.renderer.createCtxTexture(this);\n        // And replace this getter with the value for future calls\n        Object.defineProperty(this, 'ctxTexture', { value: ctxTexture });\n        return ctxTexture;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = SubTexture.resolveDefaults(props || {});\n        this.parentTexture = this.props.texture;\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    onChangeIsRenderable(isRenderable) {\n        // Propagate the renderable owner change to the parent texture\n        this.parentTexture.setRenderableOwner(this, isRenderable);\n    }\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nexport class DefaultShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio;\n        vec2 screenSpace = vec2(2.0 / u_resolution.x, -2.0 / u_resolution.y);\n\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        gl_Position = vec4(normalized.x * screenSpace.x - 1.0, normalized.y * -abs(screenSpace.y) + 1.0, 0.0, 1.0);\n        gl_Position.y = -sign(screenSpace.y) * gl_Position.y;\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n          vec4 color = texture2D(u_texture, v_textureCoordinate);\n          gl_FragColor = vec4(v_color) * texture2D(u_texture, v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\n// import type { Texture } from '../textures/Texture';\nexport class DefaultShaderBatched extends WebGlCoreShader {\n    supportsIndexedTextures = true;\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: [\n                'a_position',\n                'a_textureCoordinate',\n                'a_color',\n                'a_textureIndex',\n            ],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_textures[0]', uniform: 'uniform1iv' },\n            ],\n        });\n    }\n    bindTextures(texture) {\n        const { renderer, glw } = this;\n        if (texture.length > renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS) {\n            throw new Error(`DefaultShaderBatched: Cannot bind more than ${renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS} textures`);\n        }\n        texture.forEach((t, i) => {\n            glw.activeTexture(i);\n            glw.bindTexture(t.ctxTexture);\n        });\n        const samplers = Array.from(Array(texture.length).keys());\n        this.setUniform('u_textures[0]', samplers);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_textureCoordinate;\n      attribute vec2 a_position;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      void main(){\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n        v_textureIndex = a_textureIndex;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: (textureUnits) => `\n      #define txUnits ${textureUnits}\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_image;\n      uniform sampler2D u_textures[txUnits];\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      vec4 sampleFromTexture(sampler2D textures[${textureUnits}], int idx, vec2 uv) {\n        ${Array.from(Array(textureUnits).keys())\n            .map((idx) => `\n          ${idx !== 0 ? 'else ' : ''}if (idx == ${idx}) {\n            return texture2D(textures[${idx}], uv);\n          }\n        `)\n            .join('')}\n        return texture2D(textures[0], uv);\n      }\n\n      void main(){\n        gl_FragColor = vec4(v_color) * sampleFromTexture(u_textures, int(v_textureIndex), v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShaderBatched.js.map","export class ShaderEffect {\n    priority = 1;\n    name = '';\n    ref;\n    target;\n    passParameters = '';\n    declaredUniforms = '';\n    uniformInfo = {};\n    static uniforms = {};\n    static methods;\n    static onShaderMask;\n    static onColorize;\n    static onEffectMask;\n    static getEffectKey(props) {\n        return '';\n    }\n    static getMethodParameters(uniforms, props) {\n        const res = [];\n        for (const u in uniforms) {\n            const uni = uniforms[u];\n            let define = '';\n            if (uni.size) {\n                define = `[${uni.size(props)}]`;\n            }\n            res.push(`${uni.type} ${u}${define}`);\n        }\n        return res.join(',');\n    }\n    constructor(options) {\n        const { ref, target, props = {} } = options;\n        this.ref = ref;\n        this.target = target;\n        const uniformInfo = {};\n        const passParameters = [];\n        let declaredUniforms = '';\n        const uniforms = this.constructor.uniforms || {};\n        for (const u in uniforms) {\n            const unif = uniforms[u];\n            const uniType = unif.type;\n            //make unique uniform name\n            const uniformName = `${ref}_${u}`;\n            let define = '';\n            if (unif.size) {\n                define = `[${unif.size(props)}]`;\n            }\n            passParameters.push(uniformName);\n            declaredUniforms += `uniform ${uniType} ${uniformName}${define};`;\n            uniformInfo[u] = { name: uniformName, uniform: uniforms[u].method };\n        }\n        this.passParameters = passParameters.join(',');\n        this.declaredUniforms = declaredUniforms;\n        this.uniformInfo = uniformInfo;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n    static makeEffectKey(props) {\n        return false;\n    }\n}\n//# sourceMappingURL=ShaderEffect.js.map","import { WebGlCoreShader, } from '../WebGlCoreShader.js';\nimport { ShaderEffect, } from './effects/ShaderEffect.js';\nimport { assertTruthy } from '../../../../utils.js';\nconst effectCache = new Map();\nconst getResolvedEffect = (effects, effectContructors) => {\n    const key = JSON.stringify(effects);\n    if (effectCache.has(key)) {\n        return effectCache.get(key);\n    }\n    effects = effects ?? [];\n    const resolvedEffects = [];\n    const effectsLength = effects.length;\n    let i = 0;\n    for (; i < effectsLength; i++) {\n        const { name, type, props } = effects[i];\n        const resolvedEffect = {\n            name,\n            type,\n            props: {},\n        };\n        const effectConstructor = effectContructors[type];\n        const defaultPropValues = effectConstructor.resolveDefaults(props);\n        const uniforms = effectConstructor.uniforms;\n        const uniformKeys = Object.keys(uniforms);\n        const uniformsLength = uniformKeys.length;\n        let j = 0;\n        for (; j < uniformsLength; j++) {\n            const key = uniformKeys[j];\n            const uniform = uniforms[key];\n            const result = {\n                value: defaultPropValues[key],\n                programValue: undefined,\n                updateOnBind: uniform.updateOnBind || false,\n                hasValidator: uniform.validator !== undefined,\n                hasProgramValueUpdater: uniform.updateProgramValue !== undefined,\n            };\n            const validatedValue = (result.hasValidator &&\n                uniform.validator(defaultPropValues[key], defaultPropValues)) ||\n                defaultPropValues[key];\n            if (defaultPropValues[key] !== validatedValue) {\n                result.validatedValue = validatedValue;\n            }\n            if (result.hasProgramValueUpdater) {\n                uniform.updateProgramValue(result);\n            }\n            if (result.programValue === undefined) {\n                result.programValue = result.value;\n            }\n            resolvedEffect.props[key] = result;\n        }\n        resolvedEffects.push(resolvedEffect);\n    }\n    effectCache.set(key, resolvedEffects);\n    return resolvedEffects;\n};\nexport class DynamicShader extends WebGlCoreShader {\n    effects = [];\n    constructor(renderer, props, effectContructors) {\n        const shader = DynamicShader.createShader(props, effectContructors);\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_alpha', uniform: 'uniform1f' },\n                ...shader.uniforms,\n            ],\n            shaderSources: {\n                vertex: shader.vertex,\n                fragment: shader.fragment,\n            },\n        });\n        this.effects = shader.effects;\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const effects = props.effects;\n        const effectsL = effects.length;\n        let i = 0;\n        for (; i < effectsL; i++) {\n            const effect = effects[i];\n            const uniformInfo = this.effects[i].uniformInfo;\n            const propKeys = Object.keys(effect.props);\n            const propsLength = propKeys.length;\n            let j = 0;\n            for (; j < propsLength; j++) {\n                const key = propKeys[j];\n                const prop = effect.props[key];\n                if (prop.updateOnBind === true) {\n                    const uniform = this.renderer.shManager.getRegisteredEffects()[effect.type]?.uniforms[key];\n                    uniform?.updateProgramValue(effect.props[key], props);\n                }\n                this.setUniform(uniformInfo[key].name, effect.props[key].programValue);\n            }\n        }\n    }\n    canBatchShaderProps(propsA, propsB) {\n        if (propsA.$dimensions.width !== propsB.$dimensions.width ||\n            propsA.$dimensions.height !== propsB.$dimensions.height ||\n            propsA.effects.length !== propsB.effects.length) {\n            return false;\n        }\n        const propsEffectsLen = propsA.effects.length;\n        let i = 0;\n        for (; i < propsEffectsLen; i++) {\n            const effectA = propsA.effects[i];\n            const effectB = propsB.effects[i];\n            if (effectA.type !== effectB.type) {\n                return false;\n            }\n            for (const key in effectA.props) {\n                if ((effectB.props && !effectB.props[key]) ||\n                    effectA.props[key].value !==\n                        effectB.props[key].value) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    static createShader(props, effectContructors) {\n        //counts duplicate effects\n        const effectNameCount = {};\n        const methods = {};\n        let declareUniforms = '';\n        const uniforms = [];\n        const uFx = [];\n        const effects = props.effects.map((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            effectNameCount[key] = effectNameCount[key] ? ++effectNameCount[key] : 1;\n            const nr = effectNameCount[key];\n            if (nr === 1) {\n                uFx.push({ key, type: effect.type, props: effect.props });\n            }\n            //initialize new effect class;\n            const fxClass = new baseClass({\n                ref: `${key}${nr === 1 ? '' : nr}`,\n                target: key,\n                props: effect.props,\n            });\n            declareUniforms += fxClass.declaredUniforms;\n            uniforms.push(...Object.values(fxClass.uniformInfo));\n            return fxClass;\n        });\n        //build source\n        let effectMethods = '';\n        uFx?.forEach((fx) => {\n            const fxClass = effectContructors[fx.type];\n            const fxProps = fxClass.resolveDefaults((fx.props ?? {}));\n            const remap = [];\n            for (const m in fxClass.methods) {\n                let cm = m;\n                const fxMethod = fxClass.methods[m];\n                if (methods[m] && methods[m] !== fxMethod) {\n                    cm = DynamicShader.resolveMethodDuplicate(m, fxMethod, methods);\n                }\n                methods[cm] = fxMethod.replace('function', cm);\n                remap.push({ m, cm });\n            }\n            let onShaderMask = fxClass.onShaderMask instanceof Function\n                ? fxClass.onShaderMask(fxProps)\n                : fxClass.onShaderMask;\n            let onColorize = fxClass.onColorize instanceof Function\n                ? fxClass.onColorize(fxProps)\n                : fxClass.onColorize;\n            let onEffectMask = fxClass.onEffectMask instanceof Function\n                ? fxClass.onEffectMask(fxProps)\n                : fxClass.onEffectMask;\n            remap.forEach((r) => {\n                const { m, cm } = r;\n                const reg = new RegExp(`\\\\$${m}`, 'g');\n                if (onShaderMask) {\n                    onShaderMask = onShaderMask.replace(reg, cm);\n                }\n                if (onColorize) {\n                    onColorize = onColorize.replace(reg, cm);\n                }\n                if (onEffectMask) {\n                    onEffectMask = onEffectMask.replace(reg, cm);\n                }\n            });\n            const methodParameters = fxClass.getMethodParameters(fxClass.uniforms, fxProps);\n            const pm = methodParameters.length > 0 ? `, ${methodParameters}` : '';\n            if (onShaderMask) {\n                effectMethods += `\n        float fx_${fx.key}_onShaderMask(float shaderMask ${pm}) {\n          ${onShaderMask}\n        }\n        `;\n            }\n            if (onColorize) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onColorize(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onColorize}\n          }\n        `;\n            }\n            if (onEffectMask) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onEffectMask(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onEffectMask}\n          }\n        `;\n            }\n        });\n        let sharedMethods = '';\n        for (const m in methods) {\n            sharedMethods += methods[m];\n        }\n        //fill main functions\n        let currentMask = `mix(shaderColor, maskColor, clamp(-(lng_DefaultMask), 0.0, 1.0))`;\n        let drawEffects = `\n\n    `;\n        for (let i = 0; i < effects.length; i++) {\n            const current = effects[i];\n            const pm = current.passParameters.length > 0 ? `, ${current.passParameters}` : '';\n            const currentClass = effectContructors[current.name];\n            if (currentClass.onShaderMask) {\n                drawEffects += `\n        shaderMask = fx_${current.target}_onShaderMask(shaderMask ${pm});\n        `;\n            }\n            if (currentClass.onColorize) {\n                drawEffects += `\n        maskColor = fx_${current.target}_onColorize(shaderMask, maskColor, shaderColor${pm});\n        `;\n            }\n            if (currentClass.onEffectMask) {\n                currentMask = `fx_${current.target}_onEffectMask(shaderMask, maskColor, shaderColor${pm})`;\n            }\n            const next = effects[i + 1];\n            if (next === undefined ||\n                effectContructors[next.name].onEffectMask) {\n                drawEffects += `\n          shaderColor = ${currentMask};\n        `;\n            }\n        }\n        return {\n            effects,\n            uniforms,\n            fragment: DynamicShader.fragment(declareUniforms, sharedMethods, effectMethods, drawEffects),\n            vertex: DynamicShader.vertex(),\n        };\n    }\n    static resolveMethodDuplicate(key, effectMethod, methodCollection, increment = 0) {\n        const m = key + (increment > 0 ? increment : '');\n        if (methodCollection[m] && methodCollection[m] !== effectMethod) {\n            return this.resolveMethodDuplicate(key, effectMethod, methodCollection, ++increment);\n        }\n        return m;\n    }\n    static resolveDefaults(props, effectContructors) {\n        assertTruthy(effectContructors);\n        return {\n            effects: getResolvedEffect(props.effects ?? [], effectContructors),\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n            $alpha: 0,\n        };\n    }\n    static makeCacheKey(props, effectContructors) {\n        let fx = '';\n        props.effects?.forEach((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            fx += `,${key}`;\n        });\n        return `DynamicShader${fx}`;\n    }\n    static z$__type__Props;\n    static vertex = () => `\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    attribute vec2 a_textureCoordinate;\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    attribute float a_textureIndex;\n\n    uniform vec2 u_resolution;\n    uniform float u_pixelRatio;\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n    varying float v_textureIndex;\n\n    void main(){\n      vec2 normalized = a_position * u_pixelRatio / u_resolution;\n      vec2 zero_two = normalized * 2.0;\n      vec2 clip_space = zero_two - 1.0;\n\n      // pass to fragment\n      v_color = a_color;\n      v_textureCoordinate = a_textureCoordinate;\n      v_textureIndex = a_textureIndex;\n\n      // flip y\n      gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n    }\n  `;\n    static fragment = (uniforms, methods, effectMethods, drawEffects) => `\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    #define PI 3.14159265359\n\n    uniform vec2 u_resolution;\n    uniform vec2 u_dimensions;\n    uniform float u_alpha;\n    uniform float u_radius;\n    uniform sampler2D u_texture;\n    uniform float u_pixelRatio;\n\n    ${uniforms}\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n\n    ${methods}\n\n    ${effectMethods}\n\n    void main() {\n      vec2 p = v_textureCoordinate.xy * u_dimensions - u_dimensions * 0.5;\n      vec2 d = abs(p) - (u_dimensions) * 0.5;\n      float lng_DefaultMask = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n\n      vec4 shaderColor = vec4(0.0);\n      float shaderMask = lng_DefaultMask;\n\n      vec4 maskColor = texture2D(u_texture, v_textureCoordinate) * v_color;\n\n      shaderColor = mix(shaderColor, maskColor, clamp(-(lng_DefaultMask + 0.5), 0.0, 1.0));\n\n      ${drawEffects}\n\n      gl_FragColor = shaderColor * u_alpha;\n    }\n  `;\n}\n//# sourceMappingURL=DynamicShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader, } from '../WebGlCoreShader.js';\n/**\n * Similar to the {@link DefaultShader} but cuts out 4 rounded rectangle corners\n * as defined by the specified corner {@link RoundedRectangleProps.radius}\n */\nexport class RoundedRectangle extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_radius', uniform: 'uniform1f' },\n            ],\n        });\n    }\n    static z$__type__Props;\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius || 10,\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n        };\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const radiusFactor = Math.min(props.$dimensions.width, props.$dimensions.height) /\n            (2.0 * props.radius);\n        this.setUniform('u_radius', props.radius * Math.min(radiusFactor, 1));\n    }\n    canBatchShaderProps(propsA, propsB) {\n        return (propsA.radius === propsB.radius &&\n            propsA.$dimensions.width === propsB.$dimensions.width &&\n            propsA.$dimensions.height === propsB.$dimensions.height);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform vec2 u_dimensions;\n      uniform float u_radius;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n\n      float fillMask(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n\n      void main() {\n        vec4 color = texture2D(u_texture, v_textureCoordinate) * v_color;\n        vec2 halfDimensions = u_dimensions * 0.5;\n\n        float d = boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions + 0.5, u_radius);\n        gl_FragColor = mix(vec4(0.0), color, fillMask(d));\n      }\n    `,\n    };\n}\n//# sourceMappingURL=RoundedRectangle.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../lib/utils.js';\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nconst IDENTITY_MATRIX_3x3 = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n/**\n * SdfShader supports multi-channel and single-channel signed distance field textures.\n *\n * @remarks\n * This Shader is used by the {@link SdfTextRenderer}. Do not use thie Shader\n * directly. Instead create a Text Node and assign a SDF font family to it.\n *\n * @internalRemarks\n * The only thing this shader does to support multi-channel SDFs is to\n * add a median function to the fragment shader. If this one function call\n * ends up being a performance bottleneck we can always look at ways to\n * remove it.\n */\nexport class SdfShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_transform', uniform: 'uniformMatrix3fv' },\n                { name: 'u_scrollY', uniform: 'uniform1f' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_color', uniform: 'uniform4fv' },\n                { name: 'u_size', uniform: 'uniform1f' },\n                { name: 'u_distanceRange', uniform: 'uniform1f' },\n                { name: 'u_debug', uniform: 'uniform1i' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const resolvedProps = SdfShader.resolveDefaults(props);\n        for (const key in resolvedProps) {\n            if (key === 'transform') {\n                this.setUniform('u_transform', false, resolvedProps[key]);\n            }\n            else if (key === 'scrollY') {\n                this.setUniform('u_scrollY', resolvedProps[key]);\n            }\n            else if (key === 'color') {\n                const components = getNormalizedRgbaComponents(resolvedProps.color);\n                this.setUniform('u_color', components);\n            }\n            else if (key === 'size') {\n                this.setUniform('u_size', resolvedProps[key]);\n            }\n            else if (key === 'distanceRange') {\n                this.setUniform('u_distanceRange', resolvedProps[key]);\n            }\n            else if (key === 'debug') {\n                this.setUniform('u_debug', resolvedProps[key] ? 1.0 : 0.0);\n            }\n        }\n    }\n    static resolveDefaults(props = {}) {\n        return {\n            transform: props.transform ?? IDENTITY_MATRIX_3x3,\n            scrollY: props.scrollY ?? 0,\n            color: props.color ?? 0xffffffff,\n            size: props.size ?? 16,\n            distanceRange: props.distanceRange ?? 1.0,\n            debug: props.debug ?? false,\n        };\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n      // an attribute is an input (in) to a vertex shader.\n      // It will receive data from a buffer\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n\n      uniform vec2 u_resolution;\n      uniform mat3 u_transform;\n      uniform float u_scrollY;\n      uniform float u_pixelRatio;\n      uniform float u_size;\n\n      varying vec2 v_texcoord;\n\n      void main() {\n        vec2 scrolledPosition = a_position * u_size - vec2(0, u_scrollY);\n        vec2 transformedPosition = (u_transform * vec3(scrolledPosition, 1)).xy;\n\n        // Calculate screen space with pixel ratio\n        vec2 screenSpace = (transformedPosition * u_pixelRatio / u_resolution * 2.0 - 1.0) * vec2(1, -1);\n\n        gl_Position = vec4(screenSpace, 0.0, 1.0);\n        v_texcoord = a_textureCoordinate;\n\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n      uniform vec4 u_color;\n      uniform sampler2D u_texture;\n      uniform float u_distanceRange;\n      uniform float u_pixelRatio;\n      uniform int u_debug;\n\n      varying vec2 v_texcoord;\n\n      float median(float r, float g, float b) {\n          return max(min(r, g), min(max(r, g), b));\n      }\n\n      void main() {\n          vec3 sample = texture2D(u_texture, v_texcoord).rgb;\n          if (u_debug == 1) {\n            gl_FragColor = vec4(sample.r, sample.g, sample.b, 1.0);\n            return;\n          }\n          float scaledDistRange = u_distanceRange * u_pixelRatio;\n          float sigDist = scaledDistRange * (median(sample.r, sample.g, sample.b) - 0.5);\n          float opacity = clamp(sigDist + 0.5, 0.0, 1.0) * u_color.a;\n\n          // Build the final color.\n          // IMPORTANT: We must premultiply the color by the alpha value before returning it.\n          gl_FragColor = vec4(u_color.r * opacity, u_color.g * opacity, u_color.b * opacity, opacity);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=SdfShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const colorToFloat32Array = (argb) => {\n    const col = getRgbaComponentsNormalized(argb);\n    /* eslint-disable @typescript-eslint/no-non-null-assertion -- getRgbaComponentsNormalized has a constant array size */\n    col[0] *= col[3];\n    col[1] *= col[3];\n    col[2] *= col[3];\n    /* eslint-enable */\n    return col;\n};\nconst getRgbaComponentsNormalized = (argb) => {\n    const r = ((argb / 65536) | 0) % 256;\n    const g = ((argb / 256) | 0) % 256;\n    const b = argb % 256;\n    const a = (argb / 16777216) | 0;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const updateShaderEffectColor = (values) => {\n    if (values.programValue === undefined) {\n        values.programValue = new Float32Array(4);\n    }\n    const rgba = values.value;\n    const floatArray = values.programValue;\n    floatArray[0] = (rgba >>> 24) / 255;\n    floatArray[1] = ((rgba >>> 16) & 0xff) / 255;\n    floatArray[2] = ((rgba >>> 8) & 0xff) / 255;\n    floatArray[3] = (rgba & 0xff) / 255;\n};\nexport const updateFloat32ArrayLength2 = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const floatArray = values.programValue;\n        floatArray[0] = validatedValue[0];\n        floatArray[1] = validatedValue[1];\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const updateFloat32ArrayLength4 = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const floatArray = values.programValue;\n        floatArray[0] = validatedValue[0];\n        floatArray[1] = validatedValue[1];\n        floatArray[2] = validatedValue[1];\n        floatArray[3] = validatedValue[1];\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const updateFloat32ArrayLengthN = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const len = validatedValue.length;\n        const programValue = values.programValue;\n        for (let i = 0; i < len; i++) {\n            programValue[i] = validatedValue[i];\n        }\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const validateArrayLength4 = (value) => {\n    const isArray = Array.isArray(value);\n    if (!isArray) {\n        return [value, value, value, value];\n    }\n    else if (isArray && value.length === 4) {\n        return value;\n    }\n    else if (isArray && value.length === 2) {\n        return [value[0], value[1], value[0], value[1]];\n    }\n    else if (isArray && value.length === 3) {\n        return [value[0], value[1], value[2], value[0]];\n    }\n    return [value[0], value[0], value[0], value[0]];\n};\nexport const updateWebSafeRadius = (values, shaderProps) => {\n    if (values.programValue === undefined) {\n        values.programValue = new Float32Array(4);\n    }\n    const programValue = values.programValue;\n    const validatedValue = (values.validatedValue || values.value);\n    if (shaderProps === undefined && values.$dimensions === undefined) {\n        programValue[0] = validatedValue[0];\n        programValue[1] = validatedValue[1];\n        programValue[2] = validatedValue[2];\n        programValue[3] = validatedValue[3];\n        return;\n    }\n    let storedDimensions = values.$dimensions;\n    if (shaderProps !== undefined) {\n        const { $dimensions } = shaderProps;\n        if (storedDimensions !== undefined &&\n            (storedDimensions.width === $dimensions.width ||\n                storedDimensions.height === $dimensions.height)) {\n            return;\n        }\n        if (storedDimensions === undefined) {\n            storedDimensions = {\n                width: $dimensions?.width,\n                height: $dimensions?.height,\n            };\n            values.$dimensions = storedDimensions;\n        }\n    }\n    const { width, height } = storedDimensions;\n    const [r0, r1, r2, r3] = validatedValue;\n    const factor = Math.min(Math.min(Math.min(width / Math.max(width, r0 + r1), width / Math.max(width, r2 + r3)), Math.min(height / Math.max(height, r0 + r2), height / Math.max(height, r1 + r3))), 1);\n    programValue[0] = r0 * factor;\n    programValue[1] = r1 * factor;\n    programValue[2] = r2 * factor;\n    programValue[3] = r3 * factor;\n};\n//# sourceMappingURL=EffectUtils.js.map","import { updateWebSafeRadius, validateArrayLength4 } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor with rounded corners similar to {@link RoundedRectangle}\n */\nexport class RadiusEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radius';\n    static getEffectKey() {\n        return `radius`;\n    }\n    static uniforms = {\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            updateOnBind: true,\n            validator: validateArrayLength4,\n            updateProgramValue: updateWebSafeRadius,\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius ?? 10,\n        };\n    }\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  float r = radius[0] * step(v_textureCoordinate.x, 0.5) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[1] * step(0.5, v_textureCoordinate.x) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[2] * step(0.5, v_textureCoordinate.x) * step(0.5, v_textureCoordinate.y);\n  r = r + radius[3] * step(v_textureCoordinate.x, 0.5) * step(0.5, v_textureCoordinate.y);\n  return $boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions, r);\n  `;\n    static onEffectMask = `\n  return mix(vec4(0.0), maskColor, $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=RadiusEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderEffect renders a border along all edges of an element\n */\nexport class BorderEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'border';\n    static getEffectKey() {\n        return `border`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static onEffectMask = `\n  float intR = shaderMask + 1.0;\n  float mask = clamp(intR + width, 0.0, 1.0) - clamp(intR, 0.0, 1.0);\n  return mix(shaderColor, mix(shaderColor, maskColor, maskColor.a), mask);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateFloat32ArrayLengthN } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Linear Gradient effect over a effect mask\n */\nexport class LinearGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'linearGradient';\n    static getEffectKey(props) {\n        return `linearGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops || [];\n        if (stops.length === 0 || stops.length !== colors.length) {\n            const colorsL = colors.length;\n            let i = 0;\n            const tmp = stops;\n            for (; i < colorsL; i++) {\n                if (stops[i]) {\n                    tmp[i] = stops[i];\n                    if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                        tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                    }\n                }\n                else {\n                    tmp[i] = i * (1 / (colors.length - 1));\n                }\n            }\n            stops = tmp;\n        }\n        return {\n            colors,\n            stops,\n            angle: props.angle ?? 0,\n        };\n    }\n    static uniforms = {\n        angle: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                return rgbas.reduce((acc, val) => acc.concat(getNormalizedRgbaComponents(val)), []);\n            },\n            updateProgramValue: updateFloat32ArrayLengthN,\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static methods = {\n        fromLinear: `\n      vec4 function(vec4 linearRGB) {\n        vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\n        vec4 lower = linearRGB * vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        toLinear: `\n      vec4 function(vec4 sRGB) {\n        vec4 higher = pow((sRGB + vec4(0.055))/vec4(1.055), vec4(2.4));\n        vec4 lower = sRGB/vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        calcPoint: `\n      vec2 function(float d, float angle) {\n        return d * vec2(cos(angle), sin(angle)) + (u_dimensions * 0.5);\n      }\n    `,\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      float a = angle - (PI / 180.0 * 90.0);\n      float lineDist = abs(u_dimensions.x * cos(a)) + abs(u_dimensions.y * sin(a));\n      vec2 f = $calcPoint(lineDist * 0.5, a);\n      vec2 t = $calcPoint(lineDist * 0.5, a + PI);\n      vec2 gradVec = t - f;\n      float dist = dot(v_textureCoordinate.xy * u_dimensions - f, gradVec) / dot(gradVec, gradVec);\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = $fromLinear(mix($toLinear(colors[0]), $toLinear(colors[1]), stopCalc));\n      ${this.ColorLoop(colors)}\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=LinearGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Grayscale effect grayscales the color values of the current mask color\n */\nexport class GrayscaleEffect extends ShaderEffect {\n    name = 'grayscale';\n    static getEffectKey() {\n        return `grayscale`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amount: props.amount ?? 1,\n        };\n    }\n    static uniforms = {\n        amount: {\n            value: 1,\n            method: 'uniform1f',\n            type: 'float',\n        },\n    };\n    static onColorize = `\n    float grayness = 0.2 * maskColor.r + 0.6 * maskColor.g + 0.2 * maskColor.b;\n    return vec4(amount * vec3(grayness) + (1.0 - amount) * maskColor.rgb, maskColor.a);\n  `;\n}\n//# sourceMappingURL=GrayscaleEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the right side of an element\n */\nexport class BorderRightEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderRight';\n    static getEffectKey() {\n        return `borderRight`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(u_dimensions.x - width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderRightEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the top side of an element\n */\nexport class BorderTopEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderTop';\n    static getEffectKey() {\n        return `borderTop`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderTopEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the bottom side of an element\n */\nexport class BorderBottomEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderBottom';\n    static getEffectKey() {\n        return `borderBottom`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, u_dimensions.y - width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderBottomEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the left of an element\n */\nexport class BorderLeftEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderLeft';\n    static getEffectKey() {\n        return `borderLeft`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderLeftEffect.js.map","import { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Renders a Glitch effect using the incoming texture\n */\nexport class GlitchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'glitch';\n    static getEffectKey(props) {\n        return `glitch`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amplitude: props.amplitude ?? 0.2,\n            narrowness: props.narrowness ?? 4.0,\n            blockiness: props.blockiness ?? 2.0,\n            minimizer: props.minimizer ?? 8.0,\n            time: props.time ?? Date.now(),\n        };\n    }\n    static uniforms = {\n        amplitude: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        narrowness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        blockiness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        minimizer: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        time: {\n            value: 0,\n            method: 'uniform1f',\n            updateOnBind: true,\n            updateProgramValue: (values) => {\n                const value = (values.value =\n                    (Date.now() - values.value) % 1000);\n                values.programValue = value;\n            },\n            type: 'float',\n        },\n    };\n    static methods = {\n        rand: `\n      float function(vec2 p, float time) {\n        float t = floor(time * 20.) / 10.;\n        return fract(sin(dot(p, vec2(t * 12.9898, t * 78.233))) * 43758.5453);\n      }\n    `,\n        noise: `\n      float function(vec2 uv, float blockiness, float time) {\n        vec2 lv = fract(uv);\n        vec2 id = floor(uv);\n\n        float n1 = rand(id, time);\n        float n2 = rand(id+vec2(1,0), time);\n        float n3 = rand(id+vec2(0,1), time);\n        float n4 = rand(id+vec2(1,1), time);\n        vec2 u = smoothstep(0.0, 1.0 + blockiness, lv);\n        return mix(mix(n1, n2, u.x), mix(n3, n4, u.x), u.y);\n      }\n    `,\n        fbm: `\n      float function(vec2 uv, int count, float blockiness, float complexity, float time) {\n        float val = 0.0;\n        float amp = 0.5;\n        const int MAX_ITERATIONS = 10;\n\n        for(int i = 0; i < MAX_ITERATIONS; i++) {\n          if(i >= count) {break;}\n          val += amp * noise(uv, blockiness, time);\n          amp *= 0.5;\n          uv *= complexity;\n        }\n        return val;\n      }\n    `,\n    };\n    static onColorize = `\n    vec2 uv = v_textureCoordinate.xy;\n    float aspect = u_dimensions.x / u_dimensions.y;\n    vec2 a = vec2(uv.x * aspect , uv.y);\n    vec2 uv2 = vec2(a.x / u_dimensions.x, exp(a.y));\n\n    float shift = amplitude * pow($fbm(uv2, 4, blockiness, narrowness, time), minimizer);\n    float colR = texture2D(u_texture, vec2(uv.x + shift, uv.y)).r * (1. - shift);\n    float colG = texture2D(u_texture, vec2(uv.x - shift, uv.y)).g * (1. - shift);\n    float colB = texture2D(u_texture, vec2(uv.x - shift, uv.y)).b * (1. - shift);\n\n    vec3 f = vec3(colR, colG, colB);\n    return vec4(f, texture2D(u_texture, vec2(uv.x - shift, uv.y)).a);\n  `;\n}\n//# sourceMappingURL=GlitchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateFloat32ArrayLength4, validateArrayLength4, } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class FadeOutEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'fadeOut';\n    static getEffectKey() {\n        return `fadeOut`;\n    }\n    static uniforms = {\n        fade: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: validateArrayLength4,\n            updateProgramValue: updateFloat32ArrayLength4,\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            fade: props.fade ?? 10,\n        };\n    }\n    static onColorize = `\n  vec2 point = v_textureCoordinate.xy * u_dimensions.xy;\n  vec2 pos1;\n  vec2 pos2;\n  vec2 d;\n  float c;\n  vec4 result = maskColor;\n\n\n  if(fade[0] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x, point.y + fade[0]);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[1] > 0.0) {\n    pos1 = vec2(point.x - u_dimensions.x - fade[1], v_textureCoordinate.y);\n    pos2 = vec2(point.x - u_dimensions.x, v_textureCoordinate.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[2] > 0.0) {\n    pos1 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y - fade[2]);\n    pos2 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[3] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x + fade[3], point.y);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  return result;\n  `;\n}\n//# sourceMappingURL=FadeOutEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateFloat32ArrayLength2, updateFloat32ArrayLengthN, } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class RadialGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialGradient';\n    static getEffectKey(props) {\n        return `radialGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops || [];\n        if (stops.length === 0 || stops.length !== colors.length) {\n            const colorsL = colors.length;\n            let i = 0;\n            const tmp = stops;\n            for (; i < colorsL; i++) {\n                if (stops[i]) {\n                    tmp[i] = stops[i];\n                    if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                        tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                    }\n                }\n                else {\n                    tmp[i] = i * (1 / (colors.length - 1));\n                }\n            }\n            stops = tmp;\n        }\n        return {\n            colors,\n            stops,\n            width: props.width ?? 0,\n            height: props.height ?? props.width ?? 0,\n            pivot: props.pivot ?? [0.5, 0.5],\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        pivot: {\n            value: [0.5, 0.5],\n            updateProgramValue: updateFloat32ArrayLength2,\n            method: 'uniform2fv',\n            type: 'vec2',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                return rgbas.reduce((acc, val) => acc.concat(getNormalizedRgbaComponents(val)), []);\n            },\n            updateProgramValue: updateFloat32ArrayLengthN,\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      vec2 point = v_textureCoordinate.xy * u_dimensions;\n      vec2 projection = vec2(pivot.x * u_dimensions.x, pivot.y * u_dimensions.y);\n\n      float dist = length((point - projection) / vec2(width, height));\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = mix(colors[0], colors[1], stopCalc);\n      ${this.ColorLoop(colors)}\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=RadialGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The RadialProgressEffect renders a border along all edges of an element\n */\nexport class RadialProgressEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialProgress';\n    static getEffectKey() {\n        return `radialProgress`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            progress: props.progress ?? 0.5,\n            offset: props.offset ?? 0,\n            range: props.range ?? Math.PI * 2,\n            rounded: props.rounded ?? false,\n            radius: props.radius ?? 1,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        progress: {\n            value: 0.5,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        offset: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        range: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        rounded: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n            validator: (value) => {\n                return value ? 1 : 0;\n            },\n        },\n        radius: {\n            value: 1,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        rotateUV: `\n    vec2 function(vec2 uv, float d) {\n      float s = sin(d);\n      float c = cos(d);\n      mat2 rotMatrix = mat2(c, -s, s, c);\n      return uv * rotMatrix;\n    }\n    `,\n        drawDot: `\n    float function(vec2 uv, vec2 p, float r) {\n      uv += p;\n      float circle = length(uv) - r;\n      return clamp(-circle, 0.0, 1.0);\n    }\n    `,\n    };\n    static onEffectMask = `\n    float outerRadius = radius * u_dimensions.y * 0.5;\n\n    float endAngle = range * progress - 0.0005;\n\n    vec2 uv = v_textureCoordinate.xy * u_dimensions.xy - u_dimensions * 0.5;\n\n    uv = $rotateUV(uv, -(offset));\n    float linewidth = width * u_pixelRatio;\n    float circle = length(uv) - (outerRadius - linewidth) ;\n    circle = abs(circle) - linewidth;\n    circle = clamp(-circle, 0.0, 1.0);\n\n    float angle = (atan(uv.x, -uv.y) / 3.14159265359 * 0.5);\n    float p = endAngle / (PI * 2.);\n\n    circle *= step(fract(angle), fract(p));\n\n    circle = rounded < 1. ? circle : max(circle, $drawDot(uv, vec2(0, outerRadius - linewidth), linewidth));\n    circle = rounded < 1. ? circle : max(circle, $drawDot($rotateUV(uv, -(endAngle)), vec2(0, outerRadius - linewidth), linewidth));\n\n    return mix(shaderColor, maskColor, circle);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=RadialProgressEffect.js.map","import { updateWebSafeRadius, validateArrayLength4 } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor a holepunch effect with rounded corners similar to {@link RoundedRectangle}\n */\nexport class HolePunchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'holePunch';\n    static getEffectKey() {\n        return `holePunch`;\n    }\n    static uniforms = {\n        x: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        y: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            updateOnBind: true,\n            validator: validateArrayLength4,\n            updateProgramValue: updateWebSafeRadius,\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 50,\n            height: props.height || 50,\n            radius: props.radius ?? 0,\n        };\n    }\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  vec2 size = vec2(width, height) * 0.5;\n  vec2 basePos = v_textureCoordinate.xy * u_dimensions.xy - vec2(x, y);\n  vec2 pos = basePos - size;\n  float r = radius[0] * step(pos.x, 0.5) * step(pos.y, 0.5);\n  r = r + radius[1] * step(0.5, pos.x) * step(pos.y, 0.5);\n  r = r + radius[2] * step(0.5, pos.x) * step(0.5, pos.y);\n  r = r + radius[3] * step(pos.x, 0.5) * step(0.5, pos.y);\n  return $boxDist(pos, size, r);\n  `;\n    static onEffectMask = `\n  return mix(maskColor, vec4(0.0), $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=HolePunchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreShader } from '../../CoreShader.js';\nexport const ROUNDED_RECTANGLE_SHADER_TYPE = 'RoundedRectangle';\nexport class UnsupportedShader extends CoreShader {\n    shType;\n    constructor(shType) {\n        super();\n        this.shType = shType;\n        if (shType !== ROUNDED_RECTANGLE_SHADER_TYPE) {\n            console.warn('Unsupported shader:', shType);\n        }\n    }\n    bindRenderOp() {\n        // noop\n    }\n    bindProps() {\n        // noop\n    }\n    attach() {\n        // noop\n    }\n    detach() {\n        // noop\n    }\n}\n//# sourceMappingURL=UnsupportedShader.js.map","/**\n * Shader Controller Class\n *\n * @remarks\n * This class is used to control shader props.\n */\nexport class ShaderController {\n    type;\n    shader;\n    resolvedProps;\n    props;\n    constructor(type, shader, props, stage) {\n        this.type = type;\n        this.shader = shader;\n        this.resolvedProps = props;\n        const keys = Object.keys(props);\n        const l = keys.length;\n        const definedProps = {};\n        for (let i = 0; i < l; i++) {\n            const name = keys[i];\n            Object.defineProperty(definedProps, name, {\n                get: () => {\n                    return this.resolvedProps[name];\n                },\n                set: (value) => {\n                    this.resolvedProps[name] = value;\n                    stage.requestRender();\n                },\n            });\n        }\n        this.props = definedProps;\n    }\n    getResolvedProps() {\n        return this.resolvedProps;\n    }\n}\n//# sourceMappingURL=ShaderController.js.map","export class DynamicShaderController {\n    shader;\n    resolvedProps;\n    props;\n    type;\n    constructor(shader, props, shManager) {\n        this.shader = shader;\n        this.type = 'DynamicShader';\n        this.resolvedProps = props;\n        const effectConstructors = shManager.getRegisteredEffects();\n        const definedProps = {};\n        const effects = props.effects;\n        const effectsLength = effects.length;\n        for (let i = 0; i < effectsLength; i++) {\n            const { name: effectName, props: effectProps, type: effectType, } = effects[i];\n            if (effectName === undefined) {\n                continue;\n            }\n            const definedEffectProps = {};\n            const propEntries = Object.keys(effectProps);\n            const propEntriesLength = propEntries.length;\n            for (let j = 0; j < propEntriesLength; j++) {\n                const propName = propEntries[j];\n                Object.defineProperty(definedEffectProps, propName, {\n                    get: () => {\n                        return this.resolvedProps.effects[i].props[propName].value;\n                    },\n                    set: (value) => {\n                        const target = this.resolvedProps.effects[i].props[propName];\n                        target.value = value;\n                        if (target.hasValidator) {\n                            value = target.validatedValue = effectConstructors[effectType]\n                                .uniforms[propName]?.validator(value, effectProps);\n                        }\n                        if (target.hasProgramValueUpdater) {\n                            effectConstructors[effectType].uniforms[propName]\n                                ?.updateProgramValue(target);\n                        }\n                        else {\n                            target.programValue = value;\n                        }\n                        shManager.renderer.stage.requestRender();\n                    },\n                });\n            }\n            Object.defineProperty(definedProps, effectName, {\n                get: () => {\n                    return definedEffectProps;\n                },\n            });\n        }\n        this.props = definedProps;\n    }\n    getResolvedProps() {\n        return this.resolvedProps;\n    }\n}\n//# sourceMappingURL=DynamicShaderController.js.map","import { DefaultShader } from './renderers/webgl/shaders/DefaultShader.js';\nimport { DefaultShaderBatched } from './renderers/webgl/shaders/DefaultShaderBatched.js';\nimport { DynamicShader, } from './renderers/webgl/shaders/DynamicShader.js';\nimport { RoundedRectangle } from './renderers/webgl/shaders/RoundedRectangle.js';\nimport { SdfShader } from './renderers/webgl/shaders/SdfShader.js';\nimport { RadiusEffect } from './renderers/webgl/shaders/effects/RadiusEffect.js';\nimport { BorderEffect } from './renderers/webgl/shaders/effects/BorderEffect.js';\nimport { LinearGradientEffect, } from './renderers/webgl/shaders/effects/LinearGradientEffect.js';\nimport { GrayscaleEffect, } from './renderers/webgl/shaders/effects/GrayscaleEffect.js';\nimport { BorderRightEffect } from './renderers/webgl/shaders/effects/BorderRightEffect.js';\nimport { BorderTopEffect } from './renderers/webgl/shaders/effects/BorderTopEffect.js';\nimport { BorderBottomEffect } from './renderers/webgl/shaders/effects/BorderBottomEffect.js';\nimport { BorderLeftEffect } from './renderers/webgl/shaders/effects/BorderLeftEffect.js';\nimport { GlitchEffect, } from './renderers/webgl/shaders/effects/GlitchEffect.js';\nimport { FadeOutEffect, } from './renderers/webgl/shaders/effects/FadeOutEffect.js';\nimport { RadialGradientEffect, } from './renderers/webgl/shaders/effects/RadialGradientEffect.js';\nimport { RadialProgressEffect, } from './renderers/webgl/shaders/effects/RadialProgressEffect.js';\nimport { HolePunchEffect, } from './renderers/webgl/shaders/effects/HolePunchEffect.js';\nimport { WebGlCoreShader } from './renderers/webgl/WebGlCoreShader.js';\nimport { UnsupportedShader } from './renderers/canvas/shaders/UnsupportedShader.js';\nimport { ShaderController } from '../main-api/ShaderController.js';\nimport { DynamicShaderController, } from '../main-api/DynamicShaderController.js';\nexport class CoreShaderManager {\n    shCache = new Map();\n    shConstructors = {};\n    attachedShader = null;\n    effectConstructors = {};\n    renderer;\n    constructor() {\n        this.registerShaderType('DefaultShader', DefaultShader);\n        this.registerShaderType('DefaultShaderBatched', DefaultShaderBatched);\n        this.registerShaderType('RoundedRectangle', RoundedRectangle);\n        this.registerShaderType('DynamicShader', DynamicShader);\n        this.registerShaderType('SdfShader', SdfShader);\n        this.registerEffectType('border', BorderEffect);\n        this.registerEffectType('borderBottom', BorderBottomEffect);\n        this.registerEffectType('borderLeft', BorderLeftEffect);\n        this.registerEffectType('borderRight', BorderRightEffect);\n        this.registerEffectType('borderTop', BorderTopEffect);\n        this.registerEffectType('fadeOut', FadeOutEffect);\n        this.registerEffectType('linearGradient', LinearGradientEffect);\n        this.registerEffectType('radialGradient', RadialGradientEffect);\n        this.registerEffectType('grayscale', GrayscaleEffect);\n        this.registerEffectType('glitch', GlitchEffect);\n        this.registerEffectType('radius', RadiusEffect);\n        this.registerEffectType('radialProgress', RadialProgressEffect);\n        this.registerEffectType('holePunch', HolePunchEffect);\n    }\n    registerShaderType(shType, shClass) {\n        this.shConstructors[shType] = shClass;\n    }\n    registerEffectType(effectType, effectClass) {\n        this.effectConstructors[effectType] = effectClass;\n    }\n    getRegisteredEffects() {\n        return this.effectConstructors;\n    }\n    getRegisteredShaders() {\n        return this.shConstructors;\n    }\n    /**\n     * Loads a shader (if not already loaded) and returns a controller for it.\n     *\n     * @param shType\n     * @param props\n     * @returns\n     */\n    loadShader(shType, props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const ShaderClass = this.shConstructors[shType];\n        if (!ShaderClass) {\n            throw new Error(`Shader type \"${shType}\" is not registered`);\n        }\n        if (this.renderer.mode === 'canvas' &&\n            ShaderClass.prototype instanceof WebGlCoreShader) {\n            return this._createShaderCtr(shType, new UnsupportedShader(shType), props);\n        }\n        if (shType === 'DynamicShader') {\n            return this.loadDynamicShader(props);\n        }\n        const resolvedProps = ShaderClass.resolveDefaults(props);\n        const cacheKey = ShaderClass.makeCacheKey(resolvedProps) || ShaderClass.name;\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return this._createShaderCtr(shType, this.shCache.get(cacheKey), resolvedProps);\n        }\n        // @ts-expect-error ShaderClass WILL accept a Renderer\n        const shader = new ShaderClass(this.renderer, props);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return this._createShaderCtr(shType, shader, resolvedProps);\n    }\n    loadDynamicShader(props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const resolvedProps = DynamicShader.resolveDefaults(props, this.effectConstructors);\n        const cacheKey = DynamicShader.makeCacheKey(resolvedProps, this.effectConstructors);\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return this._createDynShaderCtr(this.shCache.get(cacheKey), resolvedProps);\n        }\n        const shader = new DynamicShader(this.renderer, props, this.effectConstructors);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return this._createDynShaderCtr(shader, resolvedProps);\n    }\n    _createShaderCtr(type, shader, props) {\n        return new ShaderController(type, shader, props, this.renderer.stage);\n    }\n    _createDynShaderCtr(shader, props) {\n        return new DynamicShaderController(shader, props, this);\n    }\n    useShader(shader) {\n        if (this.attachedShader === shader) {\n            return;\n        }\n        if (this.attachedShader) {\n            this.attachedShader.detach();\n        }\n        shader.attach();\n        this.attachedShader = shader;\n    }\n}\n//# sourceMappingURL=CoreShaderManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { assertTruthy } from '../../utils.js';\nimport { isWebGl2 } from '../renderers/webgl/internal/WebGlUtils.js';\n/**\n * Optimized WebGL Context Wrapper\n *\n * @remarks\n * This class contains the subset of the WebGLRenderingContext & WebGL2RenderingContext\n * API that is used by the renderer. Select high volume WebGL methods include\n * caching optimizations to avoid making WebGL calls if the state is already set\n * to the desired value.\n *\n * While most methods contained are direct passthroughs to the WebGL context,\n * some methods combine multiple WebGL calls into one for convenience, modify\n * arguments to be more convenient, or are replaced by more specific methods.\n *\n * Not all methods are optimized. Only methods that are called frequently\n * and/or have a high cost are optimized.\n *\n * A subset of GLenum constants are also exposed as properties on this class\n * for convenience.\n */\nexport class WebGlContextWrapper {\n    gl;\n    //#region Cached WebGL State\n    activeTextureUnit = 0;\n    texture2dUnits;\n    texture2dParams = new WeakMap();\n    scissorEnabled;\n    scissorX;\n    scissorY;\n    scissorWidth;\n    scissorHeight;\n    blendEnabled;\n    blendSrcRgb;\n    blendDstRgb;\n    blendSrcAlpha;\n    blendDstAlpha;\n    boundArrayBuffer;\n    boundElementArrayBuffer;\n    curProgram;\n    programUniforms = new WeakMap();\n    //#endregion Cached WebGL State\n    //#region Canvas\n    canvas;\n    //#endregion Canvas\n    //#region WebGL Enums\n    MAX_RENDERBUFFER_SIZE;\n    MAX_TEXTURE_SIZE;\n    MAX_VIEWPORT_DIMS;\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n    MAX_TEXTURE_IMAGE_UNITS;\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n    MAX_VERTEX_ATTRIBS;\n    MAX_VARYING_VECTORS;\n    MAX_VERTEX_UNIFORM_VECTORS;\n    MAX_FRAGMENT_UNIFORM_VECTORS;\n    TEXTURE_MAG_FILTER;\n    TEXTURE_MIN_FILTER;\n    TEXTURE_WRAP_S;\n    TEXTURE_WRAP_T;\n    LINEAR;\n    CLAMP_TO_EDGE;\n    RGBA;\n    UNSIGNED_BYTE;\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n    UNPACK_FLIP_Y_WEBGL;\n    FLOAT;\n    TRIANGLES;\n    UNSIGNED_SHORT;\n    ONE;\n    ONE_MINUS_SRC_ALPHA;\n    VERTEX_SHADER;\n    FRAGMENT_SHADER;\n    STATIC_DRAW;\n    COMPILE_STATUS;\n    LINK_STATUS;\n    DYNAMIC_DRAW;\n    COLOR_ATTACHMENT0;\n    //#endregion WebGL Enums\n    constructor(gl) {\n        this.gl = gl;\n        // The following code extracts the current state of the WebGL context\n        // to our local JavaScript cached version of it. This is so we can\n        // avoid making WebGL calls if we don't need to.\n        // We could assume that the WebGL context is in a default state, but\n        // in the future we may want to support restoring a broken WebGL context\n        // and this will help with that.\n        this.activeTextureUnit =\n            gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0;\n        const maxTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        // save current texture units\n        this.texture2dUnits = new Array(maxTextureUnits)\n            .fill(undefined)\n            .map((_, i) => {\n            this.activeTexture(i);\n            return gl.getParameter(gl.TEXTURE_BINDING_2D);\n        });\n        // restore active texture unit\n        this.activeTexture(this.activeTextureUnit);\n        this.scissorEnabled = gl.isEnabled(gl.SCISSOR_TEST);\n        const scissorBox = gl.getParameter(gl.SCISSOR_BOX);\n        this.scissorX = scissorBox[0];\n        this.scissorY = scissorBox[1];\n        this.scissorWidth = scissorBox[2];\n        this.scissorHeight = scissorBox[3];\n        this.blendEnabled = gl.isEnabled(gl.BLEND);\n        this.blendSrcRgb = gl.getParameter(gl.BLEND_SRC_RGB);\n        this.blendDstRgb = gl.getParameter(gl.BLEND_DST_RGB);\n        this.blendSrcAlpha = gl.getParameter(gl.BLEND_SRC_ALPHA);\n        this.blendDstAlpha = gl.getParameter(gl.BLEND_DST_ALPHA);\n        this.boundArrayBuffer = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n        this.boundElementArrayBuffer = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this.curProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n        this.canvas = gl.canvas;\n        // Extract GLenums\n        this.MAX_RENDERBUFFER_SIZE = gl.MAX_RENDERBUFFER_SIZE;\n        this.MAX_TEXTURE_SIZE = gl.MAX_TEXTURE_SIZE;\n        this.MAX_VIEWPORT_DIMS = gl.MAX_VIEWPORT_DIMS;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.MAX_TEXTURE_IMAGE_UNITS = gl.MAX_TEXTURE_IMAGE_UNITS;\n        this.MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n        this.MAX_VERTEX_ATTRIBS = gl.MAX_VERTEX_ATTRIBS;\n        this.MAX_VARYING_VECTORS = gl.MAX_VARYING_VECTORS;\n        this.MAX_VERTEX_UNIFORM_VECTORS = gl.MAX_VERTEX_UNIFORM_VECTORS;\n        this.MAX_FRAGMENT_UNIFORM_VECTORS = gl.MAX_FRAGMENT_UNIFORM_VECTORS;\n        this.TEXTURE_MAG_FILTER = gl.TEXTURE_MAG_FILTER;\n        this.TEXTURE_MIN_FILTER = gl.TEXTURE_MIN_FILTER;\n        this.TEXTURE_WRAP_S = gl.TEXTURE_WRAP_S;\n        this.TEXTURE_WRAP_T = gl.TEXTURE_WRAP_T;\n        this.LINEAR = gl.LINEAR;\n        this.CLAMP_TO_EDGE = gl.CLAMP_TO_EDGE;\n        this.RGBA = gl.RGBA;\n        this.UNSIGNED_BYTE = gl.UNSIGNED_BYTE;\n        this.UNPACK_PREMULTIPLY_ALPHA_WEBGL = gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n        this.UNPACK_FLIP_Y_WEBGL = gl.UNPACK_FLIP_Y_WEBGL;\n        this.FLOAT = gl.FLOAT;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.ONE = gl.ONE;\n        this.ONE_MINUS_SRC_ALPHA = gl.ONE_MINUS_SRC_ALPHA;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.VERTEX_SHADER = gl.VERTEX_SHADER;\n        this.FRAGMENT_SHADER = gl.FRAGMENT_SHADER;\n        this.STATIC_DRAW = gl.STATIC_DRAW;\n        this.COMPILE_STATUS = gl.COMPILE_STATUS;\n        this.LINK_STATUS = gl.LINK_STATUS;\n        this.DYNAMIC_DRAW = gl.DYNAMIC_DRAW;\n        this.COLOR_ATTACHMENT0 = gl.COLOR_ATTACHMENT0;\n    }\n    /**\n     * Returns true if the WebGL context is WebGL2\n     *\n     * @returns\n     */\n    isWebGl2() {\n        return isWebGl2(this.gl);\n    }\n    /**\n     * ```\n     * gl.activeTexture(textureUnit + gl.TEXTURE0);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: `textureUnit` is based from 0, not `gl.TEXTURE0`.\n     *\n     * @param textureUnit\n     */\n    activeTexture(textureUnit) {\n        const { gl } = this;\n        if (this.activeTextureUnit !== textureUnit) {\n            gl.activeTexture(textureUnit + gl.TEXTURE0);\n            this.activeTextureUnit = textureUnit;\n        }\n    }\n    /**\n     * ```\n     * gl.bindTexture(gl.TEXTURE_2D, texture);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param texture\n     */\n    bindTexture(texture) {\n        const { gl, activeTextureUnit, texture2dUnits } = this;\n        if (texture2dUnits[activeTextureUnit] === texture) {\n            return;\n        }\n        texture2dUnits[activeTextureUnit] = texture;\n        gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    }\n    _getActiveTexture() {\n        const { activeTextureUnit, texture2dUnits } = this;\n        return texture2dUnits[activeTextureUnit];\n    }\n    /**\n     * ```\n     * gl.texParameteri(gl.TEXTURE_2D, pname, param);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param pname\n     * @param param\n     * @returns\n     */\n    texParameteri(pname, param) {\n        const { gl, texture2dParams } = this;\n        const activeTexture = this._getActiveTexture();\n        if (!activeTexture) {\n            throw new Error('No active texture');\n        }\n        let textureParams = texture2dParams.get(activeTexture);\n        if (!textureParams) {\n            textureParams = {};\n            texture2dParams.set(activeTexture, textureParams);\n        }\n        if (textureParams[pname] === param) {\n            return;\n        }\n        textureParams[pname] = param;\n        gl.texParameteri(gl.TEXTURE_2D, pname, param);\n    }\n    texImage2D(level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels) {\n        const { gl } = this;\n        if (format) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource);\n        }\n    }\n    /**\n     * ```\n     * gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, data);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    compressedTexImage2D(level, internalformat, width, height, border, data) {\n        const { gl } = this;\n        gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalformat, width, height, border, data);\n    }\n    /**\n     * ```\n     * gl.pixelStorei(pname, param);\n     * ```\n     *\n     * @param pname\n     * @param param\n     */\n    pixelStorei(pname, param) {\n        const { gl } = this;\n        gl.pixelStorei(pname, param);\n    }\n    /**\n     * ```\n     * gl.generateMipmap(gl.TEXTURE_2D);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    generateMipmap() {\n        const { gl } = this;\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    /**\n     * ```\n     * gl.createTexture();\n     * ```\n     *\n     * @returns\n     */\n    createTexture() {\n        const { gl } = this;\n        return gl.createTexture();\n    }\n    /**\n     * ```\n     * gl.deleteTexture(texture);\n     * ```\n     *\n     * @param texture\n     */\n    deleteTexture(texture) {\n        const { gl } = this;\n        if (texture) {\n            this.texture2dParams.delete(texture);\n        }\n        gl.deleteTexture(texture);\n    }\n    /**\n     * ```\n     * gl.viewport(x, y, width, height);\n     * ```\n     */\n    viewport(x, y, width, height) {\n        const { gl } = this;\n        gl.viewport(x, y, width, height);\n    }\n    /**\n     * ```\n     * gl.clearColor(red, green, blue, alpha);\n     * ```\n     *\n     * @param red\n     * @param green\n     * @param blue\n     * @param alpha\n     */\n    clearColor(red, green, blue, alpha) {\n        const { gl } = this;\n        gl.clearColor(red, green, blue, alpha);\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.SCISSOR_TEST);\n     * ```\n     * @param enable\n     */\n    setScissorTest(enable) {\n        const { gl, scissorEnabled } = this;\n        if (enable === scissorEnabled) {\n            return;\n        }\n        if (enable) {\n            gl.enable(gl.SCISSOR_TEST);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        this.scissorEnabled = enable;\n    }\n    /**\n     * ```\n     * gl.scissor(x, y, width, height);\n     * ```\n     *\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n    scissor(x, y, width, height) {\n        const { gl, scissorX, scissorY, scissorWidth, scissorHeight } = this;\n        if (x !== scissorX ||\n            y !== scissorY ||\n            width !== scissorWidth ||\n            height !== scissorHeight) {\n            gl.scissor(x, y, width, height);\n            this.scissorX = x;\n            this.scissorY = y;\n            this.scissorWidth = width;\n            this.scissorHeight = height;\n        }\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.BLEND);\n     * ```\n     *\n     * @param blend\n     * @returns\n     */\n    setBlend(blend) {\n        const { gl, blendEnabled } = this;\n        if (blend === blendEnabled) {\n            return;\n        }\n        if (blend) {\n            gl.enable(gl.BLEND);\n        }\n        else {\n            gl.disable(gl.BLEND);\n        }\n        this.blendEnabled = blend;\n    }\n    /**\n     * ```\n     * gl.blendFunc(src, dst);\n     * ```\n     *\n     * @param src\n     * @param dst\n     */\n    blendFunc(src, dst) {\n        const { gl, blendSrcRgb, blendDstRgb, blendSrcAlpha, blendDstAlpha } = this;\n        if (src !== blendSrcRgb ||\n            dst !== blendDstRgb ||\n            src !== blendSrcAlpha ||\n            dst !== blendDstAlpha) {\n            gl.blendFunc(src, dst);\n            this.blendSrcRgb = src;\n            this.blendDstRgb = dst;\n            this.blendSrcAlpha = src;\n            this.blendDstAlpha = dst;\n        }\n    }\n    /**\n     * ```\n     * gl.createBuffer();\n     * ```\n     *\n     * @returns\n     */\n    createBuffer() {\n        const { gl } = this;\n        return gl.createBuffer();\n    }\n    /**\n     * ```\n     * gl.createFramebuffer();\n     * ```\n     * @returns\n     */\n    createFramebuffer() {\n        const { gl } = this;\n        return gl.createFramebuffer();\n    }\n    /**\n     * ```\n     * gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n     * ```\n     *\n     * @param framebuffer\n     */\n    bindFramebuffer(framebuffer) {\n        const { gl } = this;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    /**\n     * ```\n     * gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.FRAMEBUFFER` and textarget is always `gl.TEXTURE_2D`\n     */\n    framebufferTexture2D(attachment, texture, level) {\n        const { gl } = this;\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, level);\n    }\n    /**\n     * ```\n     * gl.clear(gl.COLOR_BUFFER_BIT);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Clear mask is always `gl.COLOR_BUFFER_BIT`\n     */\n    clear() {\n        const { gl } = this;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    arrayBufferData(buffer, data, usage) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n     * ```\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    elementArrayBufferData(buffer, data, usage) {\n        const { gl, boundElementArrayBuffer } = this;\n        if (boundElementArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n            this.boundElementArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.vertexAttribPointer` are combined into one function.\n     *\n     * @param buffer\n     * @param index\n     * @param size\n     * @param type\n     * @param normalized\n     * @param stride\n     * @param offset\n     */\n    vertexAttribPointer(buffer, index, size, type, normalized, stride, offset) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n    /**\n     * ```\n     * gl.useProgram(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    useProgram(program) {\n        const { gl, curProgram } = this;\n        if (curProgram === program) {\n            return;\n        }\n        gl.useProgram(program);\n        this.curProgram = program;\n    }\n    setUniform(type, location, ...args) {\n        const { gl, programUniforms } = this;\n        let uniforms = programUniforms.get(this.curProgram);\n        if (!uniforms) {\n            uniforms = new Map();\n            programUniforms.set(this.curProgram, uniforms);\n        }\n        const uniformArgs = uniforms.get(location);\n        if (!uniformArgs || !compareArrays(uniformArgs, args)) {\n            uniforms.set(location, args);\n            gl[type](location, ...args);\n        }\n    }\n    /**\n     * ```\n     * gl.getParameter(pname);\n     * ```\n     *\n     * @param pname\n     * @returns\n     */\n    getParameter(pname) {\n        const { gl } = this;\n        return gl.getParameter(pname);\n    }\n    /**\n     * ```\n     * gl.drawElements(mode, count, type, offset);\n     * ```\n     *\n     * @param mode\n     * @param count\n     * @param type\n     * @param offset\n     */\n    drawElements(mode, count, type, offset) {\n        const { gl } = this;\n        gl.drawElements(mode, count, type, offset);\n    }\n    /**\n     * ```\n     * gl.drawArrays(mode, first, count);\n     * ```\n     *\n     * @param name\n     * @returns\n     */\n    getExtension(name) {\n        const { gl } = this;\n        return gl.getExtension(name);\n    }\n    /**\n     * ```\n     * gl.createVertexArray();\n     * ```\n     *\n     * @returns\n     */\n    createVertexArray() {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        return gl.createVertexArray();\n    }\n    /**\n     * ```\n     * gl.bindVertexArray(vertexArray);\n     * ```\n     *\n     * @param vertexArray\n     */\n    bindVertexArray(vertexArray) {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        gl.bindVertexArray(vertexArray);\n    }\n    /**\n     * ```\n     * gl.getAttribLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getAttribLocation(program, name) {\n        const { gl } = this;\n        return gl.getAttribLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.getUniformLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getUniformLocation(program, name) {\n        const { gl } = this;\n        return gl.getUniformLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.enableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    enableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.enableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.disableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    disableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.disableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.createShader(type);\n     * ```\n     *\n     * @param type\n     * @returns\n     */\n    createShader(type) {\n        const { gl } = this;\n        return gl.createShader(type);\n    }\n    /**\n     * ```\n     * gl.compileShader(shader);\n     * ```\n     *\n     * @param shader\n     * @returns\n     */\n    compileShader(shader) {\n        const { gl } = this;\n        gl.compileShader(shader);\n    }\n    /**\n     * ```\n     * gl.attachShader(program, shader);\n     * ```\n     *\n     * @param program\n     * @param shader\n     */\n    attachShader(program, shader) {\n        const { gl } = this;\n        gl.attachShader(program, shader);\n    }\n    /**\n     * ```\n     * gl.linkProgram(program);\n     * ```\n     *\n     * @param program\n     */\n    linkProgram(program) {\n        const { gl } = this;\n        gl.linkProgram(program);\n    }\n    /**\n     * ```\n     * gl.deleteProgram(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteProgram(shader) {\n        const { gl } = this;\n        gl.deleteProgram(shader);\n    }\n    /**\n     * ```\n     * gl.getShaderParameter(shader, pname);\n     * ```\n     *\n     * @param shader\n     * @param pname\n     */\n    getShaderParameter(shader, pname) {\n        const { gl } = this;\n        return gl.getShaderParameter(shader, pname);\n    }\n    /**\n     * ```\n     * gl.getShaderInfoLog(shader);\n     * ```\n     *\n     * @param shader\n     */\n    getShaderInfoLog(shader) {\n        const { gl } = this;\n        return gl.getShaderInfoLog(shader);\n    }\n    /**\n     * ```\n     * gl.createProgram();\n     * ```\n     *\n     * @returns\n     */\n    createProgram() {\n        const { gl } = this;\n        return gl.createProgram();\n    }\n    /**\n     * ```\n     * gl.getProgramParameter(program, pname);\n     * ```\n     *\n     * @param program\n     * @param pname\n     * @returns\n     */\n    getProgramParameter(program, pname) {\n        const { gl } = this;\n        return gl.getProgramParameter(program, pname);\n    }\n    /**\n     * ```\n     * gl.getProgramInfoLog(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    getProgramInfoLog(program) {\n        const { gl } = this;\n        return gl.getProgramInfoLog(program);\n    }\n    /**\n     * ```\n     * gl.shaderSource(shader, source);\n     * ```\n     *\n     * @param shader\n     * @param source\n     */\n    shaderSource(shader, source) {\n        const { gl } = this;\n        gl.shaderSource(shader, source);\n    }\n    /**\n     * ```\n     * gl.deleteShader(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteShader(shader) {\n        const { gl } = this;\n        gl.deleteShader(shader);\n    }\n}\n/**\n * Compare two arrays for equality.\n *\n * @remarks\n * This function will not try to compare nested arrays or Float32Arrays and\n * instead will always return false when they are encountered.\n *\n * @param a\n * @param b\n * @returns\n */\nexport function compareArrays(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    return a.every((v, i) => {\n        // Don't bother to compare nested arrays or Float32Arrays\n        if (Array.isArray(v) || v instanceof Float32Array) {\n            return false;\n        }\n        else {\n            return v === b[i];\n        }\n    });\n}\n//# sourceMappingURL=WebGlContextWrapper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\nexport class RenderTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = RenderTexture.resolveDefaults(props || {});\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        this.props.width = value;\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        this.props.height = value;\n    }\n    async getTextureData() {\n        return {\n            data: null,\n            premultiplyAlpha: null,\n        };\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width || 256,\n            height: props.height || 256,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=RenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2024 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxRenderTexture extends WebGlCoreCtxTexture {\n    framebuffer;\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n        // Create Framebuffer object\n        const framebuffer = glw.createFramebuffer();\n        assertTruthy(framebuffer, 'Unable to create framebuffer');\n        this.framebuffer = framebuffer;\n    }\n    async onLoadRequest() {\n        const { glw } = this;\n        const nativeTexture = (this._nativeCtxTexture =\n            this.createNativeCtxTexture());\n        const { width, height } = this.textureSource;\n        // Set the dimensions of the render texture\n        glw.texImage2D(0, glw.RGBA, width, height, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        // Update the texture memory manager\n        this.setTextureMemUse(width * height * 4);\n        // Bind the framebuffer\n        glw.bindFramebuffer(this.framebuffer);\n        // Attach the texture to the framebuffer\n        glw.framebufferTexture2D(glw.COLOR_ATTACHMENT0, nativeTexture, 0);\n        // Unbind the framebuffer\n        glw.bindFramebuffer(null);\n        return {\n            width,\n            height,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxRenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../textures/Texture.js';\n/**\n * Tests if the given location is a compressed texture container\n * @param url\n * @remarks\n * This function is used to determine if the given image url is a compressed\n * and only supports the following extensions: .ktx and .pvr\n * @returns\n */\nexport function isCompressedTextureContainer(url) {\n    return /\\.(ktx|pvr)$/.test(url);\n}\n/**\n * Loads a compressed texture container\n * @param url\n * @returns\n */\nexport const loadCompressedTexture = async (url) => {\n    const response = await fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    if (url.indexOf('.ktx') !== -1) {\n        return loadKTXData(arrayBuffer);\n    }\n    return loadPVRData(arrayBuffer);\n};\n/**\n * Loads a KTX texture container and returns the texture data\n * @param buffer\n * @returns\n */\nconst loadKTXData = async (buffer) => {\n    const view = new DataView(buffer);\n    const littleEndian = view.getUint32(12) === 16909060 ? true : false;\n    const mipmaps = [];\n    const data = {\n        glInternalFormat: view.getUint32(28, littleEndian),\n        pixelWidth: view.getUint32(36, littleEndian),\n        pixelHeight: view.getUint32(40, littleEndian),\n        numberOfMipmapLevels: view.getUint32(56, littleEndian),\n        bytesOfKeyValueData: view.getUint32(60, littleEndian),\n    };\n    let offset = 64;\n    // Key Value Pairs of data start at byte offset 64\n    // But the only known kvp is the API version, so skipping parsing.\n    offset += data.bytesOfKeyValueData;\n    for (let i = 0; i < data.numberOfMipmapLevels; i++) {\n        const imageSize = view.getUint32(offset);\n        offset += 4;\n        mipmaps.push(view.buffer.slice(offset, imageSize));\n        offset += imageSize;\n    }\n    return {\n        data: {\n            glInternalFormat: data.glInternalFormat,\n            mipmaps,\n            width: data.pixelWidth || 0,\n            height: data.pixelHeight || 0,\n            type: 'ktx',\n        },\n        premultiplyAlpha: false,\n    };\n};\n/**\n * Loads a PVR texture container and returns the texture data\n * @param buffer\n * @returns\n */\nconst loadPVRData = async (buffer) => {\n    // pvr header length in 32 bits\n    const pvrHeaderLength = 13;\n    // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n    const pvrFormatEtc1 = 0x8d64;\n    const pvrWidth = 7;\n    const pvrHeight = 6;\n    const pvrMipmapCount = 11;\n    const pvrMetadata = 12;\n    const arrayBuffer = buffer;\n    const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n    // @ts-expect-error Object possibly undefined\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    const dataOffset = header[pvrMetadata] + 52;\n    const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n    const mipmaps = [];\n    const data = {\n        pixelWidth: header[pvrWidth],\n        pixelHeight: header[pvrHeight],\n        numberOfMipmapLevels: header[pvrMipmapCount] || 0,\n    };\n    let offset = 0;\n    let width = data.pixelWidth || 0;\n    let height = data.pixelHeight || 0;\n    for (let i = 0; i < data.numberOfMipmapLevels; i++) {\n        const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n        const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n        mipmaps.push(view);\n        offset += level;\n        width = width >> 1;\n        height = height >> 1;\n    }\n    return {\n        data: {\n            glInternalFormat: pvrFormatEtc1,\n            mipmaps: mipmaps,\n            width: data.pixelWidth || 0,\n            height: data.pixelHeight || 0,\n            type: 'pvr',\n        },\n        premultiplyAlpha: false,\n    };\n};\n//# sourceMappingURL=textureCompression.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\nimport { isCompressedTextureContainer, loadCompressedTexture, } from '../lib/textureCompression.js';\nimport { convertUrlToAbsolute } from '../lib/utils.js';\n/**\n * Texture consisting of an image loaded from a URL\n *\n * @remarks\n * The ImageTexture's {@link ImageTextureProps.src} prop defines the image URL\n * to be downloaded.\n *\n * By default, the texture's alpha values will be premultiplied into its color\n * values which is generally the desired setting before they are sent to the\n * texture's associated {@link Shader}. However, in special cases you may want\n * the Shader to receive straight (non-premultiplied) values. In that case you\n * can disable the default behavior by setting the\n * {@link ImageTextureProps.premultiplyAlpha} prop to `false`.\n */\nexport class ImageTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ImageTexture.resolveDefaults(props);\n    }\n    hasAlphaChannel(mimeType) {\n        return mimeType.indexOf('image/png') !== -1;\n    }\n    async getTextureData() {\n        const { src, premultiplyAlpha } = this.props;\n        if (!src) {\n            return {\n                data: null,\n            };\n        }\n        if (typeof src !== 'string') {\n            if (src instanceof ImageData) {\n                return {\n                    data: src,\n                    premultiplyAlpha,\n                };\n            }\n            return {\n                data: src(),\n                premultiplyAlpha,\n            };\n        }\n        // Handle compressed textures\n        if (isCompressedTextureContainer(src)) {\n            return loadCompressedTexture(src);\n        }\n        // Convert relative URL to absolute URL\n        const absoluteSrc = convertUrlToAbsolute(src);\n        if (this.txManager.imageWorkerManager) {\n            return await this.txManager.imageWorkerManager.getImage(absoluteSrc, premultiplyAlpha);\n        }\n        else if (this.txManager.hasCreateImageBitmap) {\n            const response = await fetch(absoluteSrc);\n            const blob = await response.blob();\n            const hasAlphaChannel = premultiplyAlpha ?? this.hasAlphaChannel(blob.type);\n            return {\n                data: await createImageBitmap(blob, {\n                    premultiplyAlpha: hasAlphaChannel ? 'premultiply' : 'none',\n                    colorSpaceConversion: 'none',\n                    imageOrientation: 'none',\n                }),\n                premultiplyAlpha: hasAlphaChannel,\n            };\n        }\n        else {\n            const img = new Image();\n            if (!(src.substr(0, 5) === 'data:')) {\n                img.crossOrigin = 'Anonymous';\n            }\n            img.src = absoluteSrc;\n            await new Promise((resolve, reject) => {\n                img.onload = () => resolve();\n                img.onerror = () => reject(new Error(`Failed to load image`));\n            }).catch((e) => {\n                console.error(e);\n            });\n            return {\n                data: img,\n                premultiplyAlpha: premultiplyAlpha ?? true,\n            };\n        }\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ImageTexture.resolveDefaults(props);\n        // Only cache key-able textures; prioritise key\n        const key = resolvedProps.key || resolvedProps.src;\n        if (typeof key !== 'string') {\n            return false;\n        }\n        return `ImageTexture,${key},${resolvedProps.premultiplyAlpha ?? 'true'}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            src: props.src ?? '',\n            premultiplyAlpha: props.premultiplyAlpha ?? true,\n            key: props.key ?? null,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ImageTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn } from '../../../utils.js';\nimport { CoreRenderer, } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { WebGlContextWrapper } from '../../lib/WebGlContextWrapper.js';\nimport { RenderTexture } from '../../textures/RenderTexture.js';\nimport { WebGlCoreCtxRenderTexture } from './WebGlCoreCtxRenderTexture.js';\nimport { ImageTexture } from '../../textures/ImageTexture.js';\nconst WORDS_PER_QUAD = 24;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    glw;\n    system;\n    //// Persistent data\n    quadBuffer;\n    fQuadBuffer;\n    uiQuadBuffer;\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    rttNodes = [];\n    activeRttNode = null;\n    //// Default Shader\n    defShaderCtrl;\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    quadBufferUsage = 0;\n    /**\n     * Whether the renderer is currently rendering to a texture.\n     */\n    renderToTextureActive = false;\n    constructor(options) {\n        super(options);\n        this.quadBuffer = new ArrayBuffer(this.stage.options.quadBufferSize);\n        this.fQuadBuffer = new Float32Array(this.quadBuffer);\n        this.uiQuadBuffer = new Uint32Array(this.quadBuffer);\n        this.mode = 'webgl';\n        const { canvas, clearColor, bufferMemory } = options;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        // Mark the default texture as ALWAYS renderable\n        // This prevents it from ever being cleaned up.\n        // Fixes https://github.com/lightning-js/renderer/issues/262\n        this.defaultTexture.setRenderableOwner(this, true);\n        // When the default texture is loaded, request a render in case the\n        // RAF is paused. Fixes: https://github.com/lightning-js/renderer/issues/123\n        this.defaultTexture.once('loaded', () => {\n            this.stage.requestRender();\n        });\n        const gl = createWebGLContext(canvas, options.contextSpy);\n        const glw = (this.glw = new WebGlContextWrapper(gl));\n        const color = getNormalizedRgbaComponents(clearColor);\n        glw.viewport(0, 0, canvas.width, canvas.height);\n        glw.clearColor(color[0], color[1], color[2], color[3]);\n        glw.setBlend(true);\n        glw.blendFunc(glw.ONE, glw.ONE_MINUS_SRC_ALPHA);\n        createIndexBuffer(glw, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(this.glw),\n            extensions: getWebGlExtensions(this.glw),\n        };\n        this.shManager.renderer = this;\n        this.defShaderCtrl = this.shManager.loadShader('DefaultShader');\n        this.defaultShader = this.defShaderCtrl.shader;\n        const quadBuffer = glw.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: glw.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        const { glw } = this;\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        glw.setScissorTest(false);\n        glw.clear();\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.glw, this.txMemManager, textureSource);\n        }\n        else if (textureSource instanceof RenderTexture) {\n            return new WebGlCoreCtxRenderTexture(this.glw, this.txMemManager, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.glw, this.txMemManager, textureSource);\n    }\n    /**\n     * This function adds a quad (a rectangle composed of two triangles) to the WebGL rendering pipeline.\n     *\n     * It takes a set of options that define the quad's properties, such as its dimensions, colors, texture, shader, and transformation matrix.\n     * The function first updates the shader properties with the current dimensions if necessary, then sets the default texture if none is provided.\n     * It then checks if a new render operation is needed, based on the current shader and clipping rectangle.\n     * If a new render operation is needed, it creates one and updates the current render operation.\n     * The function then adjusts the texture coordinates based on the texture options and adds the texture to the texture manager.\n     *\n     * Finally, it calculates the vertices for the quad, taking into account any transformations, and adds them to the quad buffer.\n     * The function updates the length and number of quads in the current render operation, and updates the current buffer index.\n     */\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, clippingRect, tx, ty, ta, tb, tc, td, renderCoords, rtt: renderToTexture, parentHasRenderTexture, framebufferDimensions, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions that will be used to render the quad.\n         */\n        if (shaderProps && hasOwn(shaderProps, '$dimensions')) {\n            const dimensions = shaderProps.$dimensions;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            dimensions.width = width;\n            dimensions.height = height;\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (!this.reuseRenderOp(params)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        let flipY = textureOptions?.flipY ?? false;\n        // always flip flipY for render textures\n        if (texture instanceof RenderTexture) {\n            flipY = !flipY;\n        }\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        const resizeMode = textureOptions?.resizeMode ?? false;\n        if (texture instanceof ImageTexture) {\n            if (resizeMode && texture.dimensions) {\n                const { width: tw, height: th } = texture.dimensions;\n                if (resizeMode.type === 'cover') {\n                    const scaleX = width / tw;\n                    const scaleY = height / th;\n                    const scale = Math.max(scaleX, scaleY);\n                    const precision = 1 / scale;\n                    // Determine based on width\n                    if (scale && scaleX && scaleX < scale) {\n                        const desiredSize = precision * width;\n                        texCoordX1 = (1 - desiredSize / tw) * (resizeMode.clipX ?? 0.5);\n                        texCoordX2 = texCoordX1 + desiredSize / tw;\n                    }\n                    // Determine based on height\n                    if (scale && scaleY && scaleY < scale) {\n                        const desiredSize = precision * height;\n                        texCoordY1 = (1 - desiredSize / th) * (resizeMode.clipY ?? 0.5);\n                        texCoordY2 = texCoordY1 + desiredSize / th;\n                    }\n                }\n            }\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const ctxTexture = texture.ctxTexture;\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        if (renderCoords) {\n            const { x1, y1, x2, y2, x3, y3, x4, y4 } = renderCoords;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = x1; // vertexX\n            fQuadBuffer[bufferIdx++] = y1; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = x2;\n            fQuadBuffer[bufferIdx++] = y2;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = x4;\n            fQuadBuffer[bufferIdx++] = y4;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = x3;\n            fQuadBuffer[bufferIdx++] = y3;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta;\n            fQuadBuffer[bufferIdx++] = ty + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = tx + width * ta;\n            const rightCornerY = ty + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        const curRenderOp = new WebGlCoreRenderOp(this.glw, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0, // Z-Index is only used for explictly added Render Ops\n        renderToTexture, parentHasRenderTexture, framebufferDimensions);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * Test if the current Render operation can be reused for the specified parameters.\n     * @param params\n     * @returns\n     */\n    reuseRenderOp(params) {\n        const { shader, shaderProps, parentHasRenderTexture, rtt, clippingRect } = params;\n        const targetShader = shader || this.defaultShader;\n        // Switching shader program will require a new render operation\n        if (this.curRenderOp?.shader !== targetShader) {\n            return false;\n        }\n        // Switching clipping rect will require a new render operation\n        if (!compareRect(this.curRenderOp.clippingRect, clippingRect)) {\n            return false;\n        }\n        // Force new render operation if rendering to texture\n        // @todo: This needs to be improved, render operations could also be reused\n        // for rendering to texture\n        if (parentHasRenderTexture || rtt) {\n            return false;\n        }\n        // Check if the shader can batch the shader properties\n        if (this.curRenderOp.shader !== this.defaultShader &&\n            (!shaderProps ||\n                !this.curRenderOp.shader.canBatchShaderProps(this.curRenderOp.shaderProps, shaderProps))) {\n            return false;\n        }\n        // Render operation can be reused\n        return true;\n    }\n    /**\n     * add RenderOp to the render pipeline\n     */\n    addRenderOp(renderable) {\n        this.renderOps.push(renderable);\n        this.curRenderOp = null;\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { glw, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        glw.arrayBufferData(buffer, arr, glw.STATIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('Quads per operation', renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n        this.quadBufferUsage = this.curBufferIdx * arr.BYTES_PER_ELEMENT;\n    }\n    renderToTexture(node) {\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            if (this.rttNodes[i] === node) {\n                return;\n            }\n        }\n        // @todo: Better bottom up rendering order\n        this.rttNodes.unshift(node);\n    }\n    renderRTTNodes() {\n        const { glw } = this;\n        const { txManager } = this.stage;\n        // Render all associated RTT nodes to their textures\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            const node = this.rttNodes[i];\n            // Skip nodes that don't have RTT updates\n            if (!node || !node.hasRTTupdates) {\n                continue;\n            }\n            // Set the active RTT node to the current node\n            // So we can prevent rendering children of nested RTT nodes\n            this.activeRttNode = node;\n            assertTruthy(node.texture, 'RTT node missing texture');\n            const ctxTexture = node.texture.ctxTexture;\n            assertTruthy(ctxTexture instanceof WebGlCoreCtxRenderTexture);\n            this.renderToTextureActive = true;\n            // Bind the the texture's framebuffer\n            glw.bindFramebuffer(ctxTexture.framebuffer);\n            glw.viewport(0, 0, ctxTexture.w, ctxTexture.h);\n            glw.clear();\n            // Render all associated quads to the texture\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (!child) {\n                    continue;\n                }\n                child.update(this.stage.deltaTime, {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                    valid: false,\n                });\n                this.stage.addQuads(child);\n                child.hasRTTupdates = false;\n            }\n            // Render all associated quads to the texture\n            this.render();\n            // Reset render operations\n            this.renderOps.length = 0;\n            node.hasRTTupdates = false;\n        }\n        // Bind the default framebuffer\n        glw.bindFramebuffer(null);\n        glw.viewport(0, 0, this.glw.canvas.width, this.glw.canvas.height);\n        this.renderToTextureActive = false;\n    }\n    removeRTTNode(node) {\n        const index = this.rttNodes.indexOf(node);\n        if (index === -1) {\n            return;\n        }\n        this.rttNodes.splice(index, 1);\n    }\n    getBufferInfo() {\n        const bufferInfo = {\n            totalAvailable: this.stage.options.quadBufferSize,\n            totalUsed: this.quadBufferUsage,\n        };\n        return bufferInfo;\n    }\n    getDefShaderCtr() {\n        return this.defShaderCtrl;\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreAnimation } from './CoreAnimation.js';\nexport class AnimationManager {\n    activeAnimations = new Set();\n    registerAnimation(animation) {\n        this.activeAnimations.add(animation);\n    }\n    unregisterAnimation(animation) {\n        this.activeAnimations.delete(animation);\n    }\n    update(dt) {\n        this.activeAnimations.forEach((animation) => {\n            animation.update(dt);\n        });\n    }\n}\n//# sourceMappingURL=AnimationManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../textures/Texture.js';\n/**\n * Note that, within the createImageWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n *\n * The createImageWorker function is a web worker that fetches an image from a URL and returns an ImageBitmap object.\n * The eslint @typescript rule is disabled for the entire function because the function is converted to a blob and used as the\n * js of the web worker thread, so the typescript syntax is not valid in this context.\n */\n/* eslint-disable */\nfunction createImageWorker() {\n    function hasAlphaChannel(mimeType) {\n        return mimeType.indexOf('image/png') !== -1;\n    }\n    function getImage(src, premultiplyAlpha) {\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', src, true);\n            xhr.responseType = 'blob';\n            xhr.onload = function () {\n                if (xhr.status !== 200) {\n                    return reject(new Error('Failed to load image: ' + xhr.statusText));\n                }\n                var blob = xhr.response;\n                var withAlphaChannel = premultiplyAlpha !== undefined\n                    ? premultiplyAlpha\n                    : hasAlphaChannel(blob.type);\n                createImageBitmap(blob, {\n                    premultiplyAlpha: withAlphaChannel ? 'premultiply' : 'none',\n                    colorSpaceConversion: 'none',\n                    imageOrientation: 'none',\n                })\n                    .then(function (data) {\n                    resolve({ data, premultiplyAlpha: premultiplyAlpha });\n                })\n                    .catch(function (error) {\n                    reject(error);\n                });\n            };\n            xhr.onerror = function () {\n                reject(new Error('Network error occurred while trying to fetch the image.'));\n            };\n            xhr.send();\n        });\n    }\n    self.onmessage = (event) => {\n        var src = event.data.src;\n        var id = event.data.id;\n        var premultiplyAlpha = event.data.premultiplyAlpha;\n        getImage(src, premultiplyAlpha)\n            .then(function (data) {\n            self.postMessage({ id: id, src: src, data: data });\n        })\n            .catch(function (error) {\n            self.postMessage({ id: id, src: src, error: error.message });\n        });\n    };\n}\n/* eslint-enable */\nexport class ImageWorkerManager {\n    imageWorkersEnabled = true;\n    messageManager = {};\n    workers = [];\n    workerIndex = 0;\n    nextId = 0;\n    constructor(numImageWorkers) {\n        this.workers = this.createWorkers(numImageWorkers);\n        this.workers.forEach((worker) => {\n            worker.onmessage = this.handleMessage.bind(this);\n        });\n    }\n    handleMessage(event) {\n        const { id, data, error } = event.data;\n        const msg = this.messageManager[id];\n        if (msg) {\n            const [resolve, reject] = msg;\n            delete this.messageManager[id];\n            if (error) {\n                reject(new Error(error));\n            }\n            else {\n                resolve(data);\n            }\n        }\n    }\n    createWorkers(numWorkers = 1) {\n        const workerCode = `(${createImageWorker.toString()})()`;\n        const blob = new Blob([workerCode.replace('\"use strict\";', '')], {\n            type: 'application/javascript',\n        });\n        const blobURL = (self.URL ? URL : webkitURL).createObjectURL(blob);\n        const workers = [];\n        for (let i = 0; i < numWorkers; i++) {\n            workers.push(new Worker(blobURL));\n        }\n        return workers;\n    }\n    getNextWorker() {\n        const worker = this.workers[this.workerIndex];\n        this.workerIndex = (this.workerIndex + 1) % this.workers.length;\n        return worker;\n    }\n    getImage(src, premultiplyAlpha) {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.workers) {\n                    const id = this.nextId++;\n                    this.messageManager[id] = [resolve, reject];\n                    const nextWorker = this.getNextWorker();\n                    if (nextWorker) {\n                        nextWorker.postMessage({\n                            id,\n                            src: src,\n                            premultiplyAlpha,\n                        });\n                    }\n                }\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n}\n//# sourceMappingURL=ImageWorker.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of a random grid of greyscale pixels\n *\n * @remarks\n * The width and height of the NoiseTexture are defined by it's\n * {@link NoiseTextureProps.width} and {@link NoiseTextureProps.height}\n * properties. The {@link NoiseTextureProps.cacheId} prop can be varied in order\n * to bypass cache and get newly randomized texture data.\n */\nexport class NoiseTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = NoiseTexture.resolveDefaults(props);\n    }\n    async getTextureData() {\n        const { width, height } = this.props;\n        const size = width * height * 4;\n        const pixelData8 = new Uint8ClampedArray(size);\n        for (let i = 0; i < size; i += 4) {\n            const v = Math.floor(Math.random() * 256);\n            pixelData8[i] = v;\n            pixelData8[i + 1] = v;\n            pixelData8[i + 2] = v;\n            pixelData8[i + 3] = 255;\n        }\n        return {\n            data: new ImageData(pixelData8, width, height),\n        };\n    }\n    static makeCacheKey(props) {\n        if (props.cacheId === undefined) {\n            return false;\n        }\n        const resolvedProps = NoiseTexture.resolveDefaults(props);\n        return `NoiseTexture,${resolvedProps.width},${resolvedProps.height},${resolvedProps.cacheId}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 128,\n            height: props.height ?? 128,\n            cacheId: props.cacheId ?? 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=NoiseTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ImageWorkerManager } from './lib/ImageWorker.js';\nimport { ColorTexture } from './textures/ColorTexture.js';\nimport { ImageTexture } from './textures/ImageTexture.js';\nimport { NoiseTexture } from './textures/NoiseTexture.js';\nimport { SubTexture } from './textures/SubTexture.js';\nimport { RenderTexture } from './textures/RenderTexture.js';\nexport class CoreTextureManager {\n    /**\n     * Map of textures by cache key\n     */\n    keyCache = new Map();\n    /**\n     * Map of cache keys by texture\n     */\n    inverseKeyCache = new WeakMap();\n    /**\n     * Map of texture constructors by their type name\n     */\n    txConstructors = {};\n    imageWorkerManager = null;\n    hasCreateImageBitmap = !!self.createImageBitmap;\n    hasWorker = !!self.Worker;\n    /**\n     * Renderer that this texture manager is associated with\n     *\n     * @remarks\n     * This MUST be set before the texture manager is used. Otherwise errors\n     * will occur when using the texture manager.\n     */\n    renderer;\n    /**\n     * The current frame time in milliseconds\n     *\n     * @remarks\n     * This is used to populate the `lastRenderableChangeTime` property of\n     * {@link Texture} instances when their renderable state changes.\n     *\n     * Set by stage via `updateFrameTime` method.\n     */\n    frameTime = 0;\n    constructor(numImageWorkers) {\n        // Register default known texture types\n        if (this.hasCreateImageBitmap && this.hasWorker && numImageWorkers > 0) {\n            this.imageWorkerManager = new ImageWorkerManager(numImageWorkers);\n        }\n        if (!this.hasCreateImageBitmap) {\n            console.warn('[Lightning] createImageBitmap is not supported on this browser. ImageTexture will be slower.');\n        }\n        this.registerTextureType('ImageTexture', ImageTexture);\n        this.registerTextureType('ColorTexture', ColorTexture);\n        this.registerTextureType('NoiseTexture', NoiseTexture);\n        this.registerTextureType('SubTexture', SubTexture);\n        this.registerTextureType('RenderTexture', RenderTexture);\n    }\n    registerTextureType(textureType, textureClass) {\n        this.txConstructors[textureType] = textureClass;\n    }\n    loadTexture(textureType, props) {\n        let texture;\n        const TextureClass = this.txConstructors[textureType];\n        if (!TextureClass) {\n            throw new Error(`Texture type \"${textureType}\" is not registered`);\n        }\n        if (!texture) {\n            const cacheKey = TextureClass.makeCacheKey(props);\n            if (cacheKey && this.keyCache.has(cacheKey)) {\n                // console.log('Getting texture by cache key', cacheKey);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                texture = this.keyCache.get(cacheKey);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n                texture = new TextureClass(this, props);\n                if (cacheKey) {\n                    this.initTextureToCache(texture, cacheKey);\n                }\n            }\n        }\n        return texture;\n    }\n    initTextureToCache(texture, cacheKey) {\n        const { keyCache, inverseKeyCache } = this;\n        keyCache.set(cacheKey, texture);\n        inverseKeyCache.set(texture, cacheKey);\n    }\n    /**\n     * Remove a texture from the cache\n     *\n     * @remarks\n     * Called by Texture Cleanup when a texture is freed.\n     *\n     * @param texture\n     */\n    removeTextureFromCache(texture) {\n        const { inverseKeyCache, keyCache } = this;\n        const cacheKey = inverseKeyCache.get(texture);\n        if (cacheKey) {\n            keyCache.delete(cacheKey);\n        }\n    }\n}\n//# sourceMappingURL=CoreTextureManager.js.map","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport memize from 'memize';\nconst weightConversions = {\n    normal: 400,\n    bold: 700,\n    bolder: 900,\n    lighter: 100,\n};\nconst fontWeightToNumber = (weight) => {\n    if (typeof weight === 'number') {\n        return weight;\n    }\n    return weightConversions[weight] || 400;\n};\nfunction rawResolveFontToUse(familyMapsByPriority, family, weightIn, style, stretch) {\n    let weight = fontWeightToNumber(weightIn);\n    for (const fontFamiles of familyMapsByPriority) {\n        const fontFaces = fontFamiles[family];\n        if (!fontFaces) {\n            continue;\n        }\n        if (fontFaces.size === 1) {\n            // No Exact match found, find nearest weight match\n            console.warn(`TrFontManager: Only one font face found for family: '${family}' - will be used for all weights and styles`);\n            return fontFaces.values().next().value;\n        }\n        const weightMap = new Map();\n        for (const fontFace of fontFaces) {\n            const fontFamilyWeight = fontWeightToNumber(fontFace.descriptors.weight);\n            if (fontFamilyWeight === weight &&\n                fontFace.descriptors.style === style &&\n                fontFace.descriptors.stretch === stretch) {\n                return fontFace;\n            }\n            weightMap.set(fontFamilyWeight, fontFace);\n        }\n        // No Exact match found, find nearest weight match\n        const msg = `TrFontManager: No exact match: '${family} Weight: ${weight} Style: ${style} Stretch: ${stretch}'`;\n        console.error(msg);\n        // Follow the CSS font-weight algorithm to find the nearest weight match\n        // https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#font-matching-algorithm\n        if (weight === 400 && weightMap.has(500)) {\n            return weightMap.get(500);\n        }\n        if (weight === 500 && weightMap.has(400)) {\n            return weightMap.get(400);\n        }\n        if (weight < 400) {\n            while (weight > 0) {\n                if (weightMap.has(weight)) {\n                    return weightMap.get(weight);\n                }\n                weight -= 100;\n            }\n            // reset back for the next loop\n            weight = 600;\n        }\n        while (weight < 1000) {\n            if (weightMap.has(weight)) {\n                return weightMap.get(weight);\n            }\n            weight += 100;\n        }\n        // finally check lower again\n        weight = 500;\n        while (weight > 0) {\n            if (weightMap.has(weight)) {\n                return weightMap.get(weight);\n            }\n            weight -= 100;\n        }\n    }\n    return;\n}\nconst resolveFontToUse = memize(rawResolveFontToUse);\nexport class TrFontManager {\n    textRenderers;\n    constructor(textRenderers) {\n        this.textRenderers = textRenderers;\n        // Intentionally left blank\n    }\n    addFontFace(font) {\n        // All the font face to all of the text renderers that support it\n        for (const trId in this.textRenderers) {\n            const tr = this.textRenderers[trId];\n            if (tr && tr.isFontFaceSupported(font)) {\n                tr.addFontFace(font);\n            }\n        }\n    }\n    /**\n     * Utility method to resolve a single font face from a list of prioritized family maps based on\n     * a set of font properties.\n     *\n     * @remarks\n     * These are to be used by a text renderer to resolve a font face if needed.\n     *\n     * @param familyMapsByPriority\n     * @param props\n     * @returns\n     */\n    static resolveFontFace(familyMapsByPriority, props) {\n        const { fontFamily, fontWeight, fontStyle, fontStretch } = props;\n        return resolveFontToUse(familyMapsByPriority, fontFamily, fontWeight, fontStyle, fontStretch);\n    }\n}\n//# sourceMappingURL=TrFontManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst trPropSetterDefaults = {\n    x: (state, value) => {\n        state.props.x = value;\n    },\n    y: (state, value) => {\n        state.props.y = value;\n    },\n    width: (state, value) => {\n        state.props.width = value;\n    },\n    height: (state, value) => {\n        state.props.height = value;\n    },\n    color: (state, value) => {\n        state.props.color = value;\n    },\n    zIndex: (state, value) => {\n        state.props.zIndex = value;\n    },\n    fontFamily: (state, value) => {\n        state.props.fontFamily = value;\n    },\n    fontWeight: (state, value) => {\n        state.props.fontWeight = value;\n    },\n    fontStyle: (state, value) => {\n        state.props.fontStyle = value;\n    },\n    fontStretch: (state, value) => {\n        state.props.fontStretch = value;\n    },\n    fontSize: (state, value) => {\n        state.props.fontSize = value;\n    },\n    text: (state, value) => {\n        state.props.text = value;\n    },\n    textAlign: (state, value) => {\n        state.props.textAlign = value;\n    },\n    contain: (state, value) => {\n        state.props.contain = value;\n    },\n    offsetY: (state, value) => {\n        state.props.offsetY = value;\n    },\n    scrollable: (state, value) => {\n        state.props.scrollable = value;\n    },\n    scrollY: (state, value) => {\n        state.props.scrollY = value;\n    },\n    letterSpacing: (state, value) => {\n        state.props.letterSpacing = value;\n    },\n    lineHeight: (state, value) => {\n        state.props.lineHeight = value;\n    },\n    maxLines: (state, value) => {\n        state.props.maxLines = value;\n    },\n    textBaseline: (state, value) => {\n        state.props.textBaseline = value;\n    },\n    verticalAlign: (state, value) => {\n        state.props.verticalAlign = value;\n    },\n    overflowSuffix: (state, value) => {\n        state.props.overflowSuffix = value;\n    },\n    debug: (state, value) => {\n        state.props.debug = value;\n    },\n};\nexport class TextRenderer {\n    stage;\n    set;\n    constructor(stage) {\n        this.stage = stage;\n        const propSetters = {\n            ...trPropSetterDefaults,\n            ...this.getPropertySetters(),\n        };\n        // For each prop setter add a wrapper method that checks if the prop is\n        // different before calling the setter\n        this.set = Object.freeze(Object.fromEntries(Object.entries(propSetters).map(([key, setter]) => {\n            return [\n                key,\n                (state, value) => {\n                    if (state.props[key] !== value) {\n                        setter(state, value);\n                        // Assume any prop change will require a render\n                        // This is required because otherwise a paused RAF will result\n                        // in renders when text props are changed.\n                        this.stage.requestRender();\n                    }\n                },\n            ];\n        })));\n    }\n    setStatus(state, status, error) {\n        // Don't emit the same status twice\n        if (state.status === status) {\n            return;\n        }\n        state.status = status;\n        state.emitter.emit(status, error);\n    }\n    /**\n     * Allows the CoreTextNode to communicate changes to the isRenderable state of\n     * the itself.\n     *\n     * @param state\n     * @param renderable\n     */\n    setIsRenderable(state, renderable) {\n        state.isRenderable = renderable;\n    }\n    /**\n     * Destroy/Clean up the state object\n     *\n     * @remarks\n     * Opposite of createState(). Frees any event listeners / resources held by\n     * the state that may not reliably get garbage collected.\n     *\n     * @param state\n     */\n    destroyState(state) {\n        this.setStatus(state, 'destroyed');\n        state.emitter.removeAllListeners();\n    }\n    /**\n     * Schedule a state update via queueMicrotask\n     *\n     * @remarks\n     * This method is used to schedule a state update via queueMicrotask. This\n     * method should be called whenever a state update is needed, and it will\n     * ensure that the state is only updated once per microtask.\n     * @param state\n     * @returns\n     */\n    scheduleUpdateState(state) {\n        if (state.updateScheduled) {\n            return;\n        }\n        state.updateScheduled = true;\n        queueMicrotask(() => {\n            // If the state has been destroyed, don't update it\n            if (state.status === 'destroyed') {\n                return;\n            }\n            state.updateScheduled = false;\n            this.updateState(state);\n        });\n    }\n}\n//# sourceMappingURL=TextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    metrics = null;\n    constructor(options) {\n        super();\n        const { fontFamily, descriptors, metrics } = options;\n        if (metrics) {\n            // Normalize metrics to be in the range of 0 to 1\n            this.metrics = {\n                ascender: metrics.ascender / metrics.unitsPerEm,\n                descender: metrics.descender / metrics.unitsPerEm,\n                lineGap: metrics.lineGap / metrics.unitsPerEm,\n            };\n        }\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    glyphMap;\n    kernings;\n    constructor(data, glyphMap) {\n        super();\n        this.data = data;\n        this.glyphMap = glyphMap;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.glyphMap.get(codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace, } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    /**\n     * Height of the tallest character in the font including the whitespace above it\n     * in SDF/vertex units.\n     */\n    maxCharHeight = 0;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(type, options) {\n        super(options);\n        const { atlasUrl, atlasDataUrl, stage } = options;\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        // Load image\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        });\n        this.texture.on('loaded', () => {\n            this.checkLoaded();\n            // Make sure we mark the stage for a re-render (in case the font's texture was freed and reloaded)\n            stage.requestRender();\n        });\n        // Pre-load it\n        this.texture.ctxTexture.load();\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            assertTruthy(this.data);\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            let maxCharHeight = 0;\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n                const charHeight = glyph.yoffset + glyph.height;\n                if (charHeight > maxCharHeight) {\n                    maxCharHeight = charHeight;\n                }\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.maxCharHeight = maxCharHeight;\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data, this.glyphMap);\n            // If the metrics aren't provided explicitly in the font face options,\n            // Gather them from the metrics added by the msdf-generator tool ()\n            // If they are missing then we throw an error.\n            if (!this.metrics) {\n                if (this.data?.lightningMetrics) {\n                    const { ascender, descender, lineGap, unitsPerEm } = this.data.lightningMetrics;\n                    this.metrics = {\n                        ascender: ascender / unitsPerEm,\n                        descender: descender / unitsPerEm,\n                        lineGap: lineGap / unitsPerEm,\n                    };\n                }\n                else {\n                    throw new Error(`Font metrics not found in ${this.type} font ${this.fontFamily}. ` +\n                        'Make sure you are using the latest version of the Lightning ' +\n                        '3 `msdf-generator` tool to generate your SDF fonts.');\n                }\n            }\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if (this.texture.state === 'loaded' && this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Number of floating point numbers that represent a single glyph in the SDF vertex buffer.\n *\n * @remarks\n * The vertex buffer contains:\n *  - 6 vertex positions\n *  - 6 texture coordinates\n *  - = 12 positions/coordinates per glyph\n *\n * Each vertex position and texture coordinate consist of 2 floating point numbers (x/y).\n * So there are 12 * 2 = 24 floating point numbers that make up a single glyph.\n */\nexport const FLOATS_PER_GLYPH = 24;\n//# sourceMappingURL=constants.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../../../utils.js';\n/**\n * Gets the start conditions for the layout loop.\n *\n * @remarks\n * Returns `undefined` if the layout loop should not be run.\n *\n * @param fontSize\n * @param fontSizeRatio\n * @param sdfLineHeight\n * @param renderWindow\n * @param lineCache\n * @param textH\n * @returns\n */\nexport function getStartConditions(sdfFontSize, sdfLineHeight, fontFace, verticalAlign, offsetY, fontSizeRatio, renderWindow, lineCache, textH) {\n    // State variables\n    const startLineIndex = Math.min(Math.max(renderWindow.firstLineIdx, 0), lineCache.length);\n    const sdfStartX = 0;\n    const { metrics } = fontFace;\n    assertTruthy(metrics, 'Font metrics not loaded');\n    assertTruthy(fontFace.data, 'Font data not loaded');\n    /**\n     * Bare line height is the distance between the ascender and descender of the font.\n     * without the line gap metric.\n     */\n    const sdfBareLineHeight = (metrics.ascender - metrics.descender) * sdfFontSize;\n    let sdfVerticalAlignYOffset = 0;\n    if (verticalAlign === 'middle') {\n        sdfVerticalAlignYOffset = (sdfLineHeight - sdfBareLineHeight) / 2;\n    }\n    else if (verticalAlign === 'bottom') {\n        sdfVerticalAlignYOffset = sdfLineHeight - sdfBareLineHeight;\n    }\n    const sdfOffsetY = offsetY / fontSizeRatio;\n    /**\n     * This is the position from the top of the text drawing line to where the\n     * baseline of the text will be according to the encoded positioning data for\n     * each glyph in the SDF data. This also happens to be the ascender value\n     * that is encoded into the font data.\n     */\n    const sdfEncodedAscender = fontFace.data.common.base;\n    /**\n     * This is the ascender that is configured and overridable in the font face.\n     */\n    const sdfConfiguredAscender = metrics.ascender * sdfFontSize;\n    /**\n     * If the configured ascender is different from the SDF data's encoded\n     * ascender, the offset of the text will be adjusted by the difference.\n     */\n    const sdfAscenderAdjOffset = sdfConfiguredAscender - sdfEncodedAscender;\n    const sdfStartY = sdfOffsetY +\n        sdfAscenderAdjOffset +\n        startLineIndex * sdfLineHeight +\n        sdfVerticalAlignYOffset; // TODO: Figure out what determines the initial y offset of text.\n    // Don't attempt to render anything if we know we're starting past the established end of the text\n    if (textH && sdfStartY >= textH / fontSizeRatio) {\n        return;\n    }\n    return {\n        sdfX: sdfStartX,\n        sdfY: sdfStartY,\n        lineIndex: startLineIndex,\n    };\n}\n//# sourceMappingURL=getStartConditions.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A wrapper Generator class that makes a generator peekable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class PeekableIterator {\n    iterator;\n    peekBuffer = [];\n    _lastIndex;\n    constructor(iterator, indexBase = 0) {\n        this.iterator = iterator;\n        this.iterator = iterator;\n        this._lastIndex = indexBase - 1;\n        this.peekBuffer = [];\n    }\n    next() {\n        const nextResult = this.peekBuffer.length > 0\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this.peekBuffer.pop()\n            : this.iterator.next();\n        if (nextResult.done) {\n            this._lastIndex = -1;\n        }\n        else {\n            this._lastIndex++;\n        }\n        return nextResult;\n    }\n    peek() {\n        if (this.peekBuffer.length > 0) {\n            // We know that the buffer is not empty, so we can safely use the\n            // non-null assertion operator\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.peekBuffer[0];\n        }\n        const result = this.iterator.next();\n        this.peekBuffer.push(result);\n        return result;\n    }\n    get lastIndex() {\n        return this._lastIndex;\n    }\n}\n//# sourceMappingURL=PeekableGenerator.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Reversible Generator Wrapper Class\n/**\n * Generator function that yields each Unicode code point in the given string.\n */\nexport function* getUnicodeCodepoints(text, start = 0) {\n    let i = start;\n    while (i < text.length) {\n        const codePoint = text.codePointAt(i);\n        if (codePoint === undefined) {\n            throw new Error('Invalid Unicode code point');\n        }\n        yield codePoint;\n        i += codePoint <= 0xffff ? 1 : 2;\n    }\n}\n//# sourceMappingURL=getUnicodeCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PeekableIterator } from './PeekableGenerator.js';\nimport { getUnicodeCodepoints } from './getUnicodeCodepoints.js';\n/**\n * Measures a single-line of text width ignoring any unmapped glyphs including line breaks\n *\n * @param text\n * @param shaperProps\n * @param shaper\n * @returns\n */\nexport function measureText(text, shaperProps, shaper) {\n    const glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, 0), 0));\n    let width = 0;\n    for (const glyph of glyphs) {\n        if (glyph.mapped) {\n            width += glyph.xAdvance;\n        }\n    }\n    return width;\n}\n//# sourceMappingURL=measureText.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../../../utils.js';\nimport { PeekableIterator } from './PeekableGenerator.js';\nimport { getUnicodeCodepoints } from './getUnicodeCodepoints.js';\nimport { measureText } from './measureText.js';\nexport function layoutText(curLineIndex, startX, startY, text, textAlign, width, height, fontSize, lineHeight, letterSpacing, \n/**\n * Mutated\n */\nvertexBuffer, contain, \n/**\n * Mutated\n */\nlineCache, rwSdf, trFontFace, forceFullLayoutCalc, scrollable, overflowSuffix, maxLines) {\n    assertTruthy(trFontFace, 'Font face must be loaded');\n    assertTruthy(trFontFace.loaded, 'Font face must be loaded');\n    assertTruthy(trFontFace.data, 'Font face must be loaded');\n    assertTruthy(trFontFace.shaper, 'Font face must be loaded');\n    // Regardless of fontSize (or other scaling properties), we layout the vertices of each glyph\n    // using the fixed coordinate space determined by font size used to produce the atlas.\n    // Scaling for display is handled by shader uniforms inexpensively.\n    // So we have:\n    //  - vertex space: the space in which the vertices of each glyph are laid out\n    //  - screen space: the screen pixel space\n    // Input properties such as x, y, w, fontSize, letterSpacing, etc. are all expressed in screen space.\n    // We convert these to the vertex space by dividing them the `fontSizeRatio` factor.\n    /**\n     * See above\n     */\n    const fontSizeRatio = fontSize / trFontFace.data.info.size;\n    /**\n     * `lineHeight` in vertex coordinates\n     */\n    const vertexLineHeight = lineHeight / fontSizeRatio;\n    /**\n     * `w` in vertex coordinates\n     */\n    const vertexW = width / fontSizeRatio;\n    /**\n     * `letterSpacing` in vertex coordinates\n     */\n    const vertexLSpacing = letterSpacing / fontSizeRatio;\n    const startingLineCacheEntry = lineCache[curLineIndex];\n    const startingCodepointIndex = startingLineCacheEntry?.codepointIndex || 0;\n    const startingMaxX = startingLineCacheEntry?.maxX || 0;\n    const startingMaxY = startingLineCacheEntry?.maxY || 0;\n    let maxX = startingMaxX;\n    let maxY = startingMaxY;\n    let curX = startX;\n    let curY = startY;\n    let bufferOffset = 0;\n    /**\n     * Buffer offset to last word boundry. This is -1 when we aren't in a word boundry.\n     */\n    const lastWord = {\n        codepointIndex: -1,\n        bufferOffset: -1,\n        xStart: -1,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const shaper = trFontFace.shaper;\n    const shaperProps = {\n        letterSpacing: vertexLSpacing,\n    };\n    // Get glyphs\n    let glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, startingCodepointIndex), startingCodepointIndex));\n    let glyphResult;\n    let curLineBufferStart = -1;\n    const bufferLineInfos = [];\n    const vertexTruncateHeight = height / fontSizeRatio;\n    const overflowSuffVertexWidth = measureText(overflowSuffix, shaperProps, shaper);\n    // Line-by-line layout\n    let moreLines = true;\n    while (moreLines) {\n        const nextLineWillFit = (maxLines === 0 || curLineIndex + 1 < maxLines) &&\n            (contain !== 'both' ||\n                scrollable ||\n                curY + vertexLineHeight + trFontFace.maxCharHeight <=\n                    vertexTruncateHeight);\n        const lineVertexW = nextLineWillFit\n            ? vertexW\n            : vertexW - overflowSuffVertexWidth;\n        /**\n         * Vertex X position to the beginning of the last word boundary. This becomes -1 when we start traversing a word.\n         */\n        let xStartLastWordBoundary = 0;\n        const lineIsBelowWindowTop = curY + trFontFace.maxCharHeight >= rwSdf.y1;\n        const lineIsAboveWindowBottom = curY <= rwSdf.y2;\n        const lineIsWithinWindow = lineIsBelowWindowTop && lineIsAboveWindowBottom;\n        // Layout glyphs in this line\n        // Any break statements in this while loop will trigger a line break\n        while ((glyphResult = glyphs.next()) && !glyphResult.done) {\n            const glyph = glyphResult.value;\n            if (curLineIndex === lineCache.length) {\n                lineCache.push({\n                    codepointIndex: glyph.cluster,\n                    maxY,\n                    maxX,\n                });\n            }\n            else if (curLineIndex > lineCache.length) {\n                throw new Error('Unexpected lineCache length');\n            }\n            // If we encounter a word boundary (white space or newline) we invalidate\n            // the lastWord and set the xStartLastWordBoundary if we haven't already.\n            if (glyph.codepoint === 32 || glyph.codepoint === 10) {\n                if (lastWord.codepointIndex !== -1) {\n                    lastWord.codepointIndex = -1;\n                    xStartLastWordBoundary = curX;\n                }\n            }\n            else if (lastWord.codepointIndex === -1) {\n                lastWord.codepointIndex = glyph.cluster;\n                lastWord.bufferOffset = bufferOffset;\n                lastWord.xStart = xStartLastWordBoundary;\n            }\n            if (glyph.mapped) {\n                // Mapped glyph\n                const charEndX = curX + glyph.xOffset + glyph.width;\n                // Word wrap check\n                if (\n                // We are containing the text\n                contain !== 'none' &&\n                    // The current glyph reaches outside the contained width\n                    charEndX >= lineVertexW &&\n                    // There is a last word that we can break to the next line\n                    lastWord.codepointIndex !== -1 &&\n                    // Prevents infinite loop when a single word is longer than the width\n                    lastWord.xStart > 0) {\n                    // The current word is about to go off the edge of the container width\n                    // Reinitialize the iterator starting at the last word\n                    // and proceeding to the next line\n                    if (nextLineWillFit) {\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, lastWord.codepointIndex), lastWord.codepointIndex));\n                        bufferOffset = lastWord.bufferOffset;\n                        break;\n                    }\n                    else {\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(overflowSuffix, 0), 0));\n                        curX = lastWord.xStart;\n                        bufferOffset = lastWord.bufferOffset;\n                        // HACK: For the rest of the line when inserting the overflow suffix,\n                        // set contain = 'none' to prevent an infinite loop.\n                        contain = 'none';\n                    }\n                }\n                else {\n                    // This glyph fits, so we can add it to the buffer\n                    const quadX = curX + glyph.xOffset;\n                    const quadY = curY + glyph.yOffset;\n                    // Only add to buffer for rendering if the line is within the render window\n                    if (lineIsWithinWindow) {\n                        if (curLineBufferStart === -1) {\n                            curLineBufferStart = bufferOffset;\n                        }\n                        const atlasEntry = trFontFace.getAtlasEntry(glyph.glyphId);\n                        // Add texture coordinates\n                        const u = atlasEntry.x / trFontFace.data.common.scaleW;\n                        const v = atlasEntry.y / trFontFace.data.common.scaleH;\n                        const uvWidth = atlasEntry.width / trFontFace.data.common.scaleW;\n                        const uvHeight = atlasEntry.height / trFontFace.data.common.scaleH;\n                        // TODO: (Performance) We can optimize this by using ELEMENT_ARRAY_BUFFER\n                        // eliminating the need to duplicate vertices\n                        // Top-left\n                        vertexBuffer[bufferOffset++] = quadX;\n                        vertexBuffer[bufferOffset++] = quadY;\n                        vertexBuffer[bufferOffset++] = u;\n                        vertexBuffer[bufferOffset++] = v;\n                        // Top-right\n                        vertexBuffer[bufferOffset++] = quadX + glyph.width;\n                        vertexBuffer[bufferOffset++] = quadY;\n                        vertexBuffer[bufferOffset++] = u + uvWidth;\n                        vertexBuffer[bufferOffset++] = v;\n                        // Bottom-left\n                        vertexBuffer[bufferOffset++] = quadX;\n                        vertexBuffer[bufferOffset++] = quadY + glyph.height;\n                        vertexBuffer[bufferOffset++] = u;\n                        vertexBuffer[bufferOffset++] = v + uvHeight;\n                        // Bottom-right\n                        vertexBuffer[bufferOffset++] = quadX + glyph.width;\n                        vertexBuffer[bufferOffset++] = quadY + glyph.height;\n                        vertexBuffer[bufferOffset++] = u + uvWidth;\n                        vertexBuffer[bufferOffset++] = v + uvHeight;\n                    }\n                    maxY = Math.max(maxY, quadY + glyph.height);\n                    maxX = Math.max(maxX, quadX + glyph.width);\n                    curX += glyph.xAdvance;\n                }\n            }\n            else {\n                // Unmapped character\n                // Handle newlines\n                if (glyph.codepoint === 10) {\n                    if (nextLineWillFit) {\n                        // The whole line fit, so we can break to the next line\n                        break;\n                    }\n                    else {\n                        // The whole line won't fit, so we need to add the overflow suffix\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(overflowSuffix, 0), 0));\n                        // HACK: For the rest of the line when inserting the overflow suffix,\n                        // set contain = 'none' to prevent an infinite loop.\n                        contain = 'none';\n                    }\n                }\n            }\n        }\n        // Prepare for the next line...\n        if (curLineBufferStart !== -1) {\n            bufferLineInfos.push({\n                bufferStart: curLineBufferStart,\n                bufferEnd: bufferOffset,\n            });\n            curLineBufferStart = -1;\n        }\n        curX = 0;\n        curY += vertexLineHeight;\n        curLineIndex++;\n        lastWord.codepointIndex = -1;\n        xStartLastWordBoundary = 0;\n        // Figure out if there are any more lines to render...\n        if (!forceFullLayoutCalc && contain === 'both' && curY > rwSdf.y2) {\n            // Stop layout calculation early (for performance purposes) if:\n            // - We're not forcing a full layout calculation (for width/height calculation)\n            // - ...and we're containing the text vertically+horizontally (contain === 'both')\n            // - ...and we have a render window\n            // - ...and the next line is below the bottom of the render window\n            moreLines = false;\n        }\n        else if (glyphResult && glyphResult.done) {\n            // If we've reached the end of the text, we know we're done\n            moreLines = false;\n        }\n        else if (!nextLineWillFit) {\n            // If we're contained vertically+horizontally (contain === 'both')\n            // but not scrollable and the next line won't fit, we're done.\n            moreLines = false;\n        }\n    }\n    // Use textAlign to determine if we need to adjust the x position of the text\n    // in the buffer line by line\n    if (textAlign === 'center') {\n        const vertexTextW = contain === 'none' ? maxX : vertexW;\n        for (let i = 0; i < bufferLineInfos.length; i++) {\n            const line = bufferLineInfos[i];\n            // - 4 = the x position of a rightmost vertex\n            const lineWidth = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            vertexBuffer[line.bufferEnd - 4] - vertexBuffer[line.bufferStart];\n            const xOffset = (vertexTextW - lineWidth) / 2;\n            for (let j = line.bufferStart; j < line.bufferEnd; j += 4) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                vertexBuffer[j] += xOffset;\n            }\n        }\n    }\n    else if (textAlign === 'right') {\n        const vertexTextW = contain === 'none' ? maxX : vertexW;\n        for (let i = 0; i < bufferLineInfos.length; i++) {\n            const line = bufferLineInfos[i];\n            const lineWidth = line.bufferEnd === line.bufferStart\n                ? 0\n                : // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    vertexBuffer[line.bufferEnd - 4] - vertexBuffer[line.bufferStart];\n            const xOffset = vertexTextW - lineWidth;\n            for (let j = line.bufferStart; j < line.bufferEnd; j += 4) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                vertexBuffer[j] += xOffset;\n            }\n        }\n    }\n    assertTruthy(glyphResult);\n    return {\n        bufferNumFloats: bufferOffset,\n        bufferNumQuads: bufferOffset / 16,\n        layoutNumCharacters: glyphResult.done\n            ? text.length - startingCodepointIndex\n            : glyphResult.value.cluster - startingCodepointIndex + 1,\n        fullyProcessed: !!glyphResult.done,\n        maxX,\n        maxY,\n        numLines: lineCache.length,\n    };\n}\n//# sourceMappingURL=layoutText.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Round up to the nearest multiple of the given number.\n *\n * @param value\n * @param multiple\n * @returns\n */\nexport function roundUpToMultiple(value, multiple) {\n    return Math.ceil(value / multiple) * multiple;\n}\n/**\n * Round down to the nearest multiple of the given number.\n *\n * @param value\n * @param multiple\n * @returns\n */\nexport function roundDownToMultiple(value, multiple) {\n    return Math.floor(value / multiple) * multiple;\n}\n//# sourceMappingURL=util.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isBoundPositive } from '../../../../lib/utils.js';\nimport { roundDownToMultiple, roundUpToMultiple } from './util.js';\n/**\n * Create a render window from the given parameters.\n *\n * @remarks\n * The render window is a rectangle that defines the area of the text that\n * should be rendered. It is used to skip rendering parts of the text that\n * are outside of the render window. The render window is relative to the\n * text's top left corner of the overrall text.\n *\n * @param x The x coordinate of the text element's top left corner relative to the screen.\n * @param y The y coordinate of the text element's top left corner relative to the screen.\n * @param scrollY The amount of pixels to scroll the text vertically.\n * @param lineHeight The number of extra lines to render above and below the visible window.\n * @param visibleWindow The visible window of the text element relative to the screen\n * @returns\n */\nexport function setRenderWindow(outRenderWindow, x, y, scrollY, lineHeight, bufferMargin, visibleWindow, fontSizeRatio) {\n    const { screen, sdf } = outRenderWindow;\n    if (!isBoundPositive(visibleWindow)) {\n        screen.x1 = 0;\n        screen.y1 = 0;\n        screen.x2 = 0;\n        screen.y2 = 0;\n        sdf.x1 = 0;\n        sdf.y1 = 0;\n        sdf.x2 = 0;\n        sdf.y2 = 0;\n        outRenderWindow.numLines = 0;\n        outRenderWindow.firstLineIdx = 0;\n    }\n    else {\n        const x1 = visibleWindow.x1 - x;\n        const x2 = x1 + (visibleWindow.x2 - visibleWindow.x1);\n        const y1Base = visibleWindow.y1 - y + scrollY;\n        const y1 = roundDownToMultiple(y1Base - bufferMargin, lineHeight || 1);\n        const y2 = roundUpToMultiple(y1Base + (visibleWindow.y2 - visibleWindow.y1) + bufferMargin, lineHeight || 1);\n        screen.x1 = x1;\n        screen.y1 = y1;\n        screen.x2 = x2;\n        screen.y2 = y2;\n        sdf.x1 = x1 / fontSizeRatio;\n        sdf.y1 = y1 / fontSizeRatio;\n        sdf.x2 = x2 / fontSizeRatio;\n        sdf.y2 = y2 / fontSizeRatio;\n        outRenderWindow.numLines = Math.ceil((y2 - y1) / lineHeight);\n        outRenderWindow.firstLineIdx = lineHeight ? Math.floor(y1 / lineHeight) : 0;\n    }\n    outRenderWindow.valid = true;\n}\n//# sourceMappingURL=setRenderWindow.js.map","/**\n * Calculate the default line height given normalized font metrics\n *\n * @remarks\n * This method may be used for both the WebTrFontFace and SdfTrFontFace font types.\n *\n * @param metrics\n * @param fontSize\n * @returns\n */\nexport function calcDefaultLineHeight(metrics, fontSize) {\n    return fontSize * (metrics.ascender - metrics.descender + metrics.lineGap);\n}\n//# sourceMappingURL=TextRenderingUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createBound, intersectRect, copyRect, boundsOverlap, convertBoundToRect, } from '../../../lib/utils.js';\nimport { TextRenderer, } from '../TextRenderer.js';\nimport { SdfTrFontFace } from '../../font-face-types/SdfTrFontFace/SdfTrFontFace.js';\nimport { FLOATS_PER_GLYPH } from './internal/constants.js';\nimport { getStartConditions } from './internal/getStartConditions.js';\nimport { layoutText } from './internal/layoutText.js';\nimport { setRenderWindow, } from './internal/setRenderWindow.js';\nimport { TrFontManager } from '../../TrFontManager.js';\nimport { assertTruthy, mergeColorAlpha } from '../../../../utils.js';\nimport { WebGlCoreRenderOp } from '../../../renderers/webgl/WebGlCoreRenderOp.js';\nimport { BufferCollection } from '../../../renderers/webgl/internal/BufferCollection.js';\nimport { EventEmitter } from '../../../../common/EventEmitter.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { calcDefaultLineHeight } from '../../TextRenderingUtils.js';\n/**\n * Ephemeral rect object used for calculations\n */\nconst tmpRect = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n};\n/**\n * Singleton class for rendering text using signed distance fields.\n *\n * @remarks\n * SdfTextRenderer supports both single-channel and multi-channel signed distance fields.\n */\nexport class SdfTextRenderer extends TextRenderer {\n    /**\n     * Map of font family names to a set of font faces.\n     */\n    ssdfFontFamilies = {};\n    msdfFontFamilies = {};\n    fontFamilyArray = [\n        this.ssdfFontFamilies,\n        this.msdfFontFamilies,\n    ];\n    sdfShader;\n    rendererBounds;\n    constructor(stage) {\n        super(stage);\n        this.sdfShader = this.stage.shManager.loadShader('SdfShader').shader;\n        this.rendererBounds = {\n            x1: 0,\n            y1: 0,\n            x2: this.stage.options.appWidth,\n            y2: this.stage.options.appHeight,\n        };\n    }\n    //#region Overrides\n    getPropertySetters() {\n        return {\n            fontFamily: (state, value) => {\n                state.props.fontFamily = value;\n                this.releaseFontFace(state);\n                this.invalidateLayoutCache(state);\n            },\n            fontWeight: (state, value) => {\n                state.props.fontWeight = value;\n                this.releaseFontFace(state);\n                this.invalidateLayoutCache(state);\n            },\n            fontStyle: (state, value) => {\n                state.props.fontStyle = value;\n                this.releaseFontFace(state);\n                this.invalidateLayoutCache(state);\n            },\n            fontStretch: (state, value) => {\n                state.props.fontStretch = value;\n                this.releaseFontFace(state);\n                this.invalidateLayoutCache(state);\n            },\n            fontSize: (state, value) => {\n                state.props.fontSize = value;\n                this.invalidateLayoutCache(state);\n            },\n            text: (state, value) => {\n                state.props.text = value;\n                this.invalidateLayoutCache(state);\n            },\n            textAlign: (state, value) => {\n                state.props.textAlign = value;\n                this.invalidateLayoutCache(state);\n            },\n            color: (state, value) => {\n                state.props.color = value;\n            },\n            x: (state, value) => {\n                state.props.x = value;\n                if (state.elementBounds.valid) {\n                    this.setElementBoundsX(state);\n                    // Only schedule an update if the text is not already rendered\n                    // (renderWindow is invalid) and the element possibly overlaps the screen\n                    // This is to avoid unnecessary updates when we know text is off-screen\n                    if (!state.renderWindow.valid &&\n                        boundsOverlap(state.elementBounds, this.rendererBounds)) {\n                        this.scheduleUpdateState(state);\n                    }\n                }\n            },\n            y: (state, value) => {\n                state.props.y = value;\n                if (state.elementBounds.valid) {\n                    this.setElementBoundsY(state);\n                    // See x() for explanation\n                    if (!state.renderWindow.valid &&\n                        boundsOverlap(state.elementBounds, this.rendererBounds)) {\n                        this.scheduleUpdateState(state);\n                    }\n                }\n            },\n            contain: (state, value) => {\n                state.props.contain = value;\n                this.invalidateLayoutCache(state);\n            },\n            width: (state, value) => {\n                state.props.width = value;\n                // Only invalidate layout cache if we're containing in the horizontal direction\n                if (state.props.contain !== 'none') {\n                    this.invalidateLayoutCache(state);\n                }\n            },\n            height: (state, value) => {\n                state.props.height = value;\n                // Only invalidate layout cache if we're containing in the vertical direction\n                if (state.props.contain === 'both') {\n                    this.invalidateLayoutCache(state);\n                }\n            },\n            offsetY: (state, value) => {\n                state.props.offsetY = value;\n                this.invalidateLayoutCache(state);\n            },\n            scrollable: (state, value) => {\n                state.props.scrollable = value;\n                this.invalidateLayoutCache(state);\n            },\n            scrollY: (state, value) => {\n                state.props.scrollY = value;\n                // Scrolling doesn't need to invalidate any caches, but it does need to\n                // schedule an update\n                this.scheduleUpdateState(state);\n            },\n            letterSpacing: (state, value) => {\n                state.props.letterSpacing = value;\n                this.invalidateLayoutCache(state);\n            },\n            lineHeight: (state, value) => {\n                state.props.lineHeight = value;\n                state.resLineHeight = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            maxLines: (state, value) => {\n                state.props.maxLines = value;\n                this.invalidateLayoutCache(state);\n            },\n            textBaseline: (state, value) => {\n                state.props.textBaseline = value;\n                this.invalidateLayoutCache(state);\n            },\n            verticalAlign: (state, value) => {\n                state.props.verticalAlign = value;\n                this.invalidateLayoutCache(state);\n            },\n            overflowSuffix: (state, value) => {\n                state.props.overflowSuffix = value;\n                this.invalidateLayoutCache(state);\n            },\n            debug: (state, value) => {\n                state.props.debug = value;\n            },\n        };\n    }\n    canRenderFont(props) {\n        // TODO: Support matching on font stretch, weight and style (if/when needed)\n        // For now we just match on the font family name\n        // '$$SDF_FAILURE_TEST$$' is used to test the 'failure' event coming from text\n        const { fontFamily } = props;\n        return (fontFamily in this.ssdfFontFamilies ||\n            fontFamily in this.msdfFontFamilies ||\n            fontFamily === '$$SDF_FAILURE_TEST$$');\n    }\n    isFontFaceSupported(fontFace) {\n        return fontFace instanceof SdfTrFontFace;\n    }\n    addFontFace(fontFace) {\n        // Make sure the font face is an SDF font face (it should have already passed\n        // the `isFontFaceSupported` check)\n        assertTruthy(fontFace instanceof SdfTrFontFace);\n        const familyName = fontFace.fontFamily;\n        const fontFamiles = fontFace.type === 'ssdf'\n            ? this.ssdfFontFamilies\n            : fontFace.type === 'msdf'\n                ? this.msdfFontFamilies\n                : undefined;\n        if (!fontFamiles) {\n            console.warn(`Invalid font face type: ${fontFace.type}`);\n            return;\n        }\n        let faceSet = fontFamiles[familyName];\n        if (!faceSet) {\n            faceSet = new Set();\n            fontFamiles[familyName] = faceSet;\n        }\n        faceSet.add(fontFace);\n    }\n    createState(props) {\n        return {\n            props,\n            status: 'initialState',\n            updateScheduled: false,\n            emitter: new EventEmitter(),\n            lineCache: [],\n            forceFullLayoutCalc: false,\n            renderWindow: {\n                screen: {\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0,\n                },\n                sdf: {\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0,\n                },\n                firstLineIdx: 0,\n                numLines: 0,\n                valid: false,\n            },\n            elementBounds: {\n                x1: 0,\n                y1: 0,\n                x2: 0,\n                y2: 0,\n                valid: false,\n            },\n            clippingRect: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n                valid: false,\n            },\n            bufferNumFloats: 0,\n            bufferNumQuads: 0,\n            vertexBuffer: undefined,\n            webGlBuffers: null,\n            bufferUploaded: false,\n            textH: undefined,\n            textW: undefined,\n            distanceRange: 0,\n            trFontFace: undefined,\n            isRenderable: false,\n            resLineHeight: undefined,\n            debugData: {\n                updateCount: 0,\n                layoutCount: 0,\n                lastLayoutNumCharacters: 0,\n                layoutSum: 0,\n                drawSum: 0,\n                drawCount: 0,\n                bufferSize: 0,\n            },\n        };\n    }\n    updateState(state) {\n        let { trFontFace } = state;\n        const { textH, lineCache, debugData, forceFullLayoutCalc } = state;\n        debugData.updateCount++;\n        // On the first update call we need to set the status to loading\n        if (state.status === 'initialState') {\n            this.setStatus(state, 'loading');\n        }\n        // Resolve font face if we haven't yet\n        if (!trFontFace) {\n            trFontFace = this.resolveFontFace(state.props);\n            state.trFontFace = trFontFace;\n            if (!trFontFace) {\n                const msg = `SdfTextRenderer: Could not resolve font face for family: '${state.props.fontFamily}'`;\n                console.error(msg);\n                this.setStatus(state, 'failed', new Error(msg));\n                return;\n            }\n            trFontFace.texture.setRenderableOwner(state, true);\n        }\n        // If the font hasn't been loaded yet, stop here.\n        // Listen for the 'loaded' event and forward fontLoaded event\n        if (!trFontFace.loaded) {\n            trFontFace.once('loaded', () => {\n                this.scheduleUpdateState(state);\n            });\n            return;\n        }\n        // If the font is loaded then so should the data\n        assertTruthy(trFontFace.data, 'Font face data should be loaded');\n        assertTruthy(trFontFace.metrics, 'Font face metrics should be loaded');\n        const { text, fontSize, x, y, contain, width, height, verticalAlign, scrollable, overflowSuffix, maxLines, } = state.props;\n        // scrollY only has an effect when contain === 'both' and scrollable === true\n        const scrollY = contain === 'both' && scrollable ? state.props.scrollY : 0;\n        const { renderWindow } = state;\n        /**\n         * The font size of the SDF font face (the basis for SDF space units)\n         */\n        const sdfFontSize = trFontFace.data.info.size;\n        /**\n         * Divide screen space units by this to get the SDF space units\n         * Mulitple SDF space units by this to get screen space units\n         */\n        const fontSizeRatio = fontSize / sdfFontSize;\n        // If not already resolved, resolve the line height and store it in the state\n        let resLineHeight = state.resLineHeight;\n        if (resLineHeight === undefined) {\n            const lineHeight = state.props.lineHeight;\n            // If lineHeight is undefined, use the maxCharHeight from the font face\n            if (lineHeight === undefined) {\n                resLineHeight = calcDefaultLineHeight(trFontFace.metrics, fontSize);\n            }\n            else {\n                resLineHeight = lineHeight;\n            }\n            state.resLineHeight = resLineHeight;\n        }\n        // Needed in renderWindow calculation\n        const sdfLineHeight = resLineHeight / fontSizeRatio;\n        state.distanceRange =\n            fontSizeRatio * trFontFace.data.distanceField.distanceRange;\n        // Allocate buffers if needed\n        const neededLength = text.length * FLOATS_PER_GLYPH;\n        let vertexBuffer = state.vertexBuffer;\n        if (!vertexBuffer || vertexBuffer.length < neededLength) {\n            vertexBuffer = new Float32Array(neededLength * 2);\n        }\n        const elementBounds = state.elementBounds;\n        if (!elementBounds.valid) {\n            this.setElementBoundsX(state);\n            this.setElementBoundsY(state);\n            elementBounds.valid = true;\n        }\n        // Return early if we're still viewing inside the established render window\n        // No need to re-render what we've already rendered\n        // (Only if there's an established renderWindow and we're not suppressing early exit)\n        if (!forceFullLayoutCalc && renderWindow.valid) {\n            const rwScreen = renderWindow.screen;\n            if (x + rwScreen.x1 <= elementBounds.x1 &&\n                x + rwScreen.x2 >= elementBounds.x2 &&\n                y - scrollY + rwScreen.y1 <= elementBounds.y1 &&\n                y - scrollY + rwScreen.y2 >= elementBounds.y2) {\n                this.setStatus(state, 'loaded');\n                return;\n            }\n            // Otherwise invalidate the renderWindow so it can be redone\n            renderWindow.valid = false;\n            this.setStatus(state, 'loading');\n        }\n        const { offsetY, textAlign } = state.props;\n        // Create a new renderWindow if needed\n        if (!renderWindow.valid) {\n            const isPossiblyOnScreen = boundsOverlap(elementBounds, this.rendererBounds);\n            if (!isPossiblyOnScreen) {\n                // If the element is not possibly on screen, we can skip the layout and rendering completely\n                return;\n            }\n            setRenderWindow(renderWindow, x, y, scrollY, resLineHeight, contain === 'both' ? elementBounds.y2 - elementBounds.y1 : 0, elementBounds, fontSizeRatio);\n            // console.log('newRenderWindow', renderWindow);\n        }\n        const start = getStartConditions(sdfFontSize, sdfLineHeight, trFontFace, verticalAlign, offsetY, fontSizeRatio, renderWindow, lineCache, textH);\n        if (!start) {\n            // Nothing to render, return early, but still mark as loaded (since the text is just scrolled\n            // out of view)\n            this.setStatus(state, 'loaded');\n            return;\n        }\n        const { letterSpacing } = state.props;\n        const out2 = layoutText(start.lineIndex, start.sdfX, start.sdfY, text, textAlign, width, height, fontSize, resLineHeight, letterSpacing, vertexBuffer, contain, lineCache, renderWindow.sdf, trFontFace, forceFullLayoutCalc, scrollable, overflowSuffix, maxLines);\n        state.bufferUploaded = false;\n        state.bufferNumFloats = out2.bufferNumFloats;\n        state.bufferNumQuads = out2.bufferNumQuads;\n        state.vertexBuffer = vertexBuffer;\n        state.renderWindow = renderWindow;\n        debugData.lastLayoutNumCharacters = out2.layoutNumCharacters;\n        debugData.bufferSize = vertexBuffer.byteLength;\n        // If we didn't exit early, we know we have completely computed w/h\n        if (out2.fullyProcessed) {\n            state.textW = out2.maxX * fontSizeRatio;\n            state.textH = out2.numLines * sdfLineHeight * fontSizeRatio;\n        }\n        // if (state.props.debug.printLayoutTime) {\n        //   debugData.layoutSum += performance.now() - updateStartTime;\n        //   debugData.layoutCount++;\n        // }\n        this.setStatus(state, 'loaded');\n    }\n    renderQuads(state, transform, clippingRect, alpha, parentHasRenderTexture, framebufferDimensions) {\n        if (!state.vertexBuffer) {\n            // Nothing to draw\n            return;\n        }\n        const renderer = this.stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer);\n        const { fontSize, color, contain, scrollable, zIndex, debug } = state.props;\n        // scrollY only has an effect when contain === 'both' and scrollable === true\n        const scrollY = contain === 'both' && scrollable ? state.props.scrollY : 0;\n        const { textW = 0, textH = 0, distanceRange, vertexBuffer, bufferUploaded, trFontFace, elementBounds, } = state;\n        let { webGlBuffers } = state;\n        if (!webGlBuffers) {\n            const glw = renderer.glw;\n            const stride = 4 * Float32Array.BYTES_PER_ELEMENT;\n            const webGlBuffer = glw.createBuffer();\n            assertTruthy(webGlBuffer);\n            state.webGlBuffers = new BufferCollection([\n                {\n                    buffer: webGlBuffer,\n                    attributes: {\n                        a_position: {\n                            name: 'a_position',\n                            size: 2,\n                            type: glw.FLOAT,\n                            normalized: false,\n                            stride,\n                            offset: 0, // start at the beginning of the buffer\n                        },\n                        a_textureCoordinate: {\n                            name: 'a_textureCoordinate',\n                            size: 2,\n                            type: glw.FLOAT,\n                            normalized: false,\n                            stride,\n                            offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                        },\n                    },\n                },\n            ]);\n            state.bufferUploaded = false;\n            assertTruthy(state.webGlBuffers);\n            webGlBuffers = state.webGlBuffers;\n        }\n        if (!bufferUploaded) {\n            const glw = renderer.glw;\n            const buffer = webGlBuffers?.getBuffer('a_textureCoordinate') ?? null;\n            glw.arrayBufferData(buffer, vertexBuffer, glw.STATIC_DRAW);\n            state.bufferUploaded = true;\n        }\n        assertTruthy(trFontFace);\n        if (scrollable && contain === 'both') {\n            assertTruthy(elementBounds.valid);\n            const elementRect = convertBoundToRect(elementBounds, tmpRect);\n            if (clippingRect.valid) {\n                state.clippingRect.valid = true;\n                clippingRect = intersectRect(clippingRect, elementRect, state.clippingRect);\n            }\n            else {\n                state.clippingRect.valid = true;\n                clippingRect = copyRect(elementRect, state.clippingRect);\n            }\n        }\n        const renderOp = new WebGlCoreRenderOp(renderer.glw, renderer.options, webGlBuffers, this.sdfShader, {\n            transform: transform.getFloatArr(),\n            // IMPORTANT: The SDF Shader expects the color NOT to be premultiplied\n            // for the best blending results. Which is why we use `mergeColorAlpha`\n            // instead of `mergeColorAlphaPremultiplied` here.\n            color: mergeColorAlpha(color, alpha),\n            size: fontSize / (trFontFace.data?.info.size || 0),\n            scrollY,\n            distanceRange,\n            debug: debug.sdfShaderDebug,\n        }, alpha, clippingRect, { height: textH, width: textW }, 0, zIndex, false, parentHasRenderTexture, framebufferDimensions);\n        const texture = state.trFontFace?.texture;\n        assertTruthy(texture);\n        const ctxTexture = texture.ctxTexture;\n        renderOp.addTexture(ctxTexture);\n        renderOp.length = state.bufferNumFloats;\n        renderOp.numQuads = state.bufferNumQuads;\n        renderer.addRenderOp(renderOp);\n        // if (!debug.disableScissor) {\n        //   renderer.enableScissor(\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // Draw the arrays\n        // gl.drawArrays(\n        //   gl.TRIANGLES, // Primitive type\n        //   0,\n        //   bufferNumVertices, // Number of verticies\n        // );\n        // renderer.disableScissor();\n        // if (debug.showElementRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Blue,\n        //     elementRect.x,\n        //     elementRect.y,\n        //     elementRect.w,\n        //     elementRect.h,\n        //   );\n        // }\n        // if (debug.showVisibleRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Green,\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // if (debug.showRenderWindow && renderWindow) {\n        //   this.renderer.drawBorder(\n        //     Colors.Red,\n        //     x + renderWindow.x1,\n        //     y + renderWindow.y1 - scrollY,\n        //     x + renderWindow.x2 - (x + renderWindow.x1),\n        //     y + renderWindow.y2 - scrollY - (y + renderWindow.y1 - scrollY),\n        //   );\n        // }\n        // if (debug.printLayoutTime) {\n        //   debugData.drawSum += performance.now() - drawStartTime;\n        //   debugData.drawCount++;\n        // }\n    }\n    setIsRenderable(state, renderable) {\n        super.setIsRenderable(state, renderable);\n        state.trFontFace?.texture.setRenderableOwner(state, renderable);\n    }\n    destroyState(state) {\n        super.destroyState(state);\n        // If there's a Font Face assigned we must free the owner relation to its texture\n        state.trFontFace?.texture.setRenderableOwner(state, false);\n    }\n    //#endregion Overrides\n    resolveFontFace(props) {\n        return TrFontManager.resolveFontFace(this.fontFamilyArray, props);\n    }\n    /**\n     * Release the loaded SDF font face\n     *\n     * @param state\n     */\n    releaseFontFace(state) {\n        state.resLineHeight = undefined;\n        if (state.trFontFace) {\n            state.trFontFace.texture.setRenderableOwner(state, false);\n            state.trFontFace = undefined;\n        }\n    }\n    /**\n     * Invalidate the layout cache stored in the state. This will cause the text\n     * to be re-layed out on the next update.\n     *\n     * @remarks\n     * This also invalidates the visible window cache.\n     *\n     * @param state\n     */\n    invalidateLayoutCache(state) {\n        state.renderWindow.valid = false;\n        state.elementBounds.valid = false;\n        state.textH = undefined;\n        state.textW = undefined;\n        state.lineCache = [];\n        this.setStatus(state, 'loading');\n        this.scheduleUpdateState(state);\n    }\n    setElementBoundsX(state) {\n        const { x, contain, width } = state.props;\n        const { elementBounds } = state;\n        elementBounds.x1 = x;\n        elementBounds.x2 = contain !== 'none' ? x + width : Infinity;\n    }\n    setElementBoundsY(state) {\n        const { y, contain, height } = state.props;\n        const { elementBounds } = state;\n        elementBounds.y1 = y;\n        elementBounds.y2 = contain === 'both' ? y + height : Infinity;\n    }\n}\n//# sourceMappingURL=SdfTextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TrFontFace, } from './TrFontFace.js';\nexport class WebTrFontFace extends TrFontFace {\n    fontFace;\n    fontUrl;\n    constructor(options) {\n        super(options);\n        const { fontFamily, fontUrl } = options;\n        // Filter out parentheses from fontUrl\n        const fontUrlWithoutParentheses = fontUrl.replace(/\\(|\\)/g, '');\n        // Defaults for descriptors resolved in the super constructor\n        const determinedDescriptors = this.descriptors;\n        // Convert TrFontFaceDescriptors to CSS FontFaceDescriptors\n        const cssDescriptors = {\n            style: determinedDescriptors.style,\n            weight: typeof determinedDescriptors.weight === 'number'\n                ? `${determinedDescriptors.weight}`\n                : determinedDescriptors.weight,\n            stretch: determinedDescriptors.stretch,\n            unicodeRange: determinedDescriptors.unicodeRange,\n            featureSettings: determinedDescriptors.featureSettings,\n            display: determinedDescriptors.display,\n        };\n        const fontFace = new FontFace(fontFamily, `url(${fontUrlWithoutParentheses})`, cssDescriptors);\n        fontFace\n            .load()\n            .then(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.loaded = true;\n            this.emit('loaded');\n        })\n            .catch(console.error);\n        this.fontFace = fontFace;\n        this.fontUrl = fontUrl;\n    }\n}\n//# sourceMappingURL=WebTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @param fontFace\n * @param fontStyle\n * @param fontSize\n * @param precision\n * @param defaultFontFace\n * @returns\n */\nexport function getFontSetting(fontFace, fontStyle, fontSize, precision, defaultFontFace) {\n    let ff = fontFace;\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n    const ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null || curFf === undefined) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === 'serif' || curFf === 'sans-serif') {\n            ffs.push(curFf);\n        }\n        else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(',')}`;\n}\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param space\n */\nexport function isZeroWidthSpace(space) {\n    return space === '' || space === '\\u200B';\n}\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param space\n */\nexport function isSpace(space) {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param tokenRegex\n * @param text\n */\nexport function tokenizeString(tokenRegex, text) {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n    const final = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i], delimeters[i]);\n    }\n    final.pop();\n    return final.filter((word) => word != '');\n}\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param context\n * @param word\n * @param space\n */\nexport function measureText(context, word, space = 0) {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n/**\n * Get the font metrics for a font face.\n *\n * @remarks\n * This function will attempt to grab the explicitly defined metrics from the\n * font face first. If the font face does not have metrics defined, it will\n * attempt to calculate the metrics using the browser's measureText method.\n *\n * If the browser does not support the font metrics API, it will use some\n * default values.\n *\n * @param context\n * @param fontFace\n * @param fontSize\n * @returns\n */\nexport function getWebFontMetrics(context, fontFace, fontSize) {\n    if (fontFace.metrics) {\n        return fontFace.metrics;\n    }\n    // If the font face doesn't have metrics defined, we fallback to using the\n    // browser's measureText method to calculate take a best guess at the font\n    // actual font's metrics.\n    // - fontBoundingBox[Ascent|Descent] is the best estimate but only supported\n    //   in Chrome 87+ (2020), Firefox 116+ (2023), and Safari 11.1+ (2018).\n    //   - It is an estimate as it can vary between browsers.\n    // - actualBoundingBox[Ascent|Descent] is less accurate and supported in\n    //   Chrome 77+ (2019), Firefox 74+ (2020), and Safari 11.1+ (2018).\n    // - If neither are supported, we'll use some default values which will\n    //   get text on the screen but likely not be great.\n    // NOTE: It's been decided not to rely on fontBoundingBox[Ascent|Descent]\n    // as it's browser support is limited and it also tends to produce higher than\n    // expected values. It is instead HIGHLY RECOMMENDED that developers provide\n    // explicit metrics in the font face definition.\n    const browserMetrics = context.measureText('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');\n    console.warn(`Font metrics not provided for Canvas Web font ${fontFace.fontFamily}. ` +\n        'Using fallback values. It is HIGHLY recommended you use the latest ' +\n        'version of the Lightning 3 `msdf-generator` tool to extract the default ' +\n        'metrics for the font and provide them in the Canvas Web font definition.');\n    let metrics;\n    if (browserMetrics.actualBoundingBoxDescent &&\n        browserMetrics.actualBoundingBoxAscent) {\n        metrics = {\n            ascender: browserMetrics.actualBoundingBoxAscent / fontSize,\n            descender: -browserMetrics.actualBoundingBoxDescent / fontSize,\n            lineGap: 0.2,\n        };\n    }\n    else {\n        // If the browser doesn't support the font metrics API, we'll use some\n        // default values.\n        metrics = {\n            ascender: 0.8,\n            descender: -0.2,\n            lineGap: 0.2,\n        };\n    }\n    // Save the calculated metrics to the font face for future use.\n    fontFace.metrics = metrics;\n    return metrics;\n}\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param context\n * @param text\n * @param wordWrapWidth\n * @param letterSpacing\n * @param indent\n */\nexport function wrapText(context, text, wordWrapWidth, letterSpacing, indent) {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    const lines = text.split(/\\r?\\n/g);\n    let allLines = [];\n    const realNewlines = [];\n    for (let i = 0; i < lines.length; i++) {\n        const resultLines = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        const words = lines[i].split(spaceRegex);\n        const spaces = lines[i].match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j];\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n        resultLines.push(result);\n        result = '';\n        allLines = allLines.concat(resultLines);\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n    return { l: allLines, n: realNewlines };\n}\n//# sourceMappingURL=TextTextureRendererUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { assertTruthy } from '../../../utils.js';\nimport { getRgbaString } from '../../lib/utils.js';\nimport { calcDefaultLineHeight } from '../TextRenderingUtils.js';\nimport { getWebFontMetrics } from '../TextTextureRendererUtils.js';\nconst MAX_TEXTURE_DIMENSION = 2048;\n/**\n * Calculate height for the canvas\n *\n * @param textBaseline\n * @param fontSize\n * @param lineHeight\n * @param numLines\n * @param offsetY\n * @returns\n */\nfunction calcHeight(textBaseline, fontSize, lineHeight, numLines, offsetY) {\n    const baselineOffset = textBaseline !== 'bottom' ? 0.5 * fontSize : 0;\n    return (lineHeight * (numLines - 1) +\n        baselineOffset +\n        Math.max(lineHeight, fontSize) +\n        (offsetY || 0));\n}\nexport class LightningTextTextureRenderer {\n    _canvas;\n    _context;\n    _settings;\n    constructor(canvas, context) {\n        this._canvas = canvas;\n        this._context = context;\n        this._settings = this.mergeDefaults({});\n    }\n    set settings(v) {\n        this._settings = this.mergeDefaults(v);\n    }\n    get settings() {\n        return this._settings;\n    }\n    getPrecision() {\n        return this._settings.precision;\n    }\n    setFontProperties() {\n        this._context.font = this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    }\n    _getFontSetting() {\n        const ff = [this._settings.fontFamily];\n        const ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === 'serif' || ff[i] === 'sans-serif') {\n                ffs.push(ff[i]);\n            }\n            else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(',')}`;\n    }\n    _load() {\n        if (true && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts\n                        .load(fontSetting, this._settings.text)\n                        .catch((err) => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    })\n                        .then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            }\n            catch (e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n    calculateRenderInfo() {\n        const renderInfo = {};\n        const precision = this.getPrecision();\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null\n            ? null\n            : this._settings.offsetY * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n        const trFontFace = this._settings.trFontFace;\n        // Set font properties.\n        this.setFontProperties();\n        assertTruthy(trFontFace);\n        const metrics = getWebFontMetrics(this._context, trFontFace, fontSize);\n        const defLineHeight = calcDefaultLineHeight(metrics, fontSize) * precision;\n        const lineHeight = this._settings.lineHeight !== null\n            ? this._settings.lineHeight * precision\n            : defLineHeight;\n        const maxHeight = this._settings.maxHeight;\n        const containedMaxLines = maxHeight !== null && lineHeight > 0\n            ? Math.floor(maxHeight / lineHeight)\n            : 0;\n        const setMaxLines = this._settings.maxLines;\n        const calcMaxLines = containedMaxLines > 0 && setMaxLines > 0\n            ? Math.min(containedMaxLines, setMaxLines)\n            : Math.max(containedMaxLines, setMaxLines);\n        // Total width.\n        let width = w || 2048 / this.getPrecision();\n        // Inner width.\n        let innerWidth = width - paddingLeft;\n        if (innerWidth < 10) {\n            width += 10 - innerWidth;\n            innerWidth = 10;\n        }\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth;\n        }\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.overflowSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix);\n        }\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        }\n        else {\n            linesInfo = { l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: [] };\n            const n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n        if (calcMaxLines && lines.length > calcMaxLines) {\n            const usedLines = lines.slice(0, calcMaxLines);\n            let otherLines = null;\n            if (this._settings.overflowSuffix) {\n                // Wrap again with max lines suffix enabled.\n                const w = this._settings.overflowSuffix\n                    ? this.measureText(this._settings.overflowSuffix)\n                    : 0;\n                const al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = `${al.l[0]}${this._settings.overflowSuffix}`;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            }\n            else {\n                otherLines = [''];\n            }\n            // Re-assemble the remaining text.\n            let i;\n            const n = lines.length;\n            let j = 0;\n            const m = linesInfo.n.length;\n            for (i = calcMaxLines; i < n; i++) {\n                otherLines[j] += `${otherLines[j] ? ' ' : ''}${lines[i]}`;\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n            renderInfo.remainingText = otherLines.join('\\n');\n            renderInfo.moreTextLines = true;\n            lines = usedLines;\n        }\n        else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = '';\n        }\n        // calculate text width\n        let maxLineWidth = 0;\n        const lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            const lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n        renderInfo.lineWidths = lineWidths;\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n        let height;\n        if (h) {\n            height = h;\n        }\n        else {\n            height = calcHeight(this._settings.textBaseline, fontSize, lineHeight, lines.length, offsetY);\n        }\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.defLineHeight = defLineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n        renderInfo.metrics = metrics;\n        return renderInfo;\n    }\n    draw(renderInfo, linesOverride) {\n        const precision = this.getPrecision();\n        // Allow lines to be overriden for partial rendering.\n        const lines = linesOverride?.lines || renderInfo.lines;\n        const lineWidths = linesOverride?.lineWidths || renderInfo.lineWidths;\n        const height = linesOverride\n            ? calcHeight(this._settings.textBaseline, renderInfo.fontSize, renderInfo.lineHeight, linesOverride.lines.length, this._settings.offsetY === null\n                ? null\n                : this._settings.offsetY * precision)\n            : renderInfo.height;\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.min(Math.ceil(renderInfo.width + this._settings.textRenderIssueMargin), MAX_TEXTURE_DIMENSION);\n        this._canvas.height = Math.min(Math.ceil(height), MAX_TEXTURE_DIMENSION);\n        // Canvas context has been reset.\n        this.setFontProperties();\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n        let linePositionX;\n        let linePositionY;\n        const drawLines = [];\n        const { metrics } = renderInfo;\n        /**\n         * Ascender (in pixels)\n         */\n        const ascenderPx = metrics\n            ? metrics.ascender * renderInfo.fontSize\n            : renderInfo.fontSize;\n        /**\n         * Bare line height is the distance between the ascender and descender of the font.\n         * without the line gap metric.\n         */\n        const bareLineHeightPx = (metrics.ascender - metrics.descender) * renderInfo.fontSize;\n        // Draw lines line by line.\n        for (let i = 0, n = lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n            // By default, text is aligned to top\n            linePositionY = i * renderInfo.lineHeight + ascenderPx;\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - bareLineHeightPx) / 2;\n            }\n            else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - bareLineHeightPx;\n            }\n            if (this._settings.textAlign === 'right') {\n                linePositionX += renderInfo.innerWidth - lineWidths[i];\n            }\n            else if (this._settings.textAlign === 'center') {\n                linePositionX += (renderInfo.innerWidth - lineWidths[i]) / 2;\n            }\n            linePositionX += renderInfo.paddingLeft;\n            drawLines.push({\n                text: lines[i],\n                x: linePositionX,\n                y: linePositionY,\n                w: lineWidths[i],\n            });\n        }\n        // Highlight.\n        if (this._settings.highlight) {\n            const color = this._settings.highlightColor;\n            const hlHeight = this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5;\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = this._settings.highlightPaddingLeft !== null\n                ? this._settings.highlightPaddingLeft * precision\n                : renderInfo.paddingLeft;\n            const hlPaddingRight = this._settings.highlightPaddingRight !== null\n                ? this._settings.highlightPaddingRight * precision\n                : renderInfo.paddingRight;\n            this._context.fillStyle = getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                const drawLine = drawLines[i];\n                this._context.fillRect(drawLine.x - hlPaddingLeft, drawLine.y - renderInfo.offsetY + offset, drawLine.w + hlPaddingRight + hlPaddingLeft, hlHeight);\n            }\n        }\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [\n                this._context.shadowColor,\n                this._context.shadowOffsetX,\n                this._context.shadowOffsetY,\n                this._context.shadowBlur,\n            ];\n            this._context.shadowColor = getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n        this._context.fillStyle = getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            const drawLine = drawLines[i];\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            }\n            else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n    }\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length;\n        const wordWidth = this._context.measureText(word).width;\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width +\n            suffixWidth;\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth =\n                    this._context.measureText(word.substring(0, cutoffIndex)).width +\n                        suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                }\n                else {\n                    break;\n                }\n            }\n            /* In case guess was underestimated, extend it letter by letter. */\n        }\n        else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth =\n                    this._context.measureText(word.substring(0, cutoffIndex)).width +\n                        suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                }\n                else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -= 1;\n                    break;\n                }\n            }\n        }\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return (word.substring(0, cutoffIndex) +\n            (wordWrapWidth >= suffixWidth ? suffix : ''));\n    }\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        const lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        const realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            const resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            const words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ', letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ` ${words[j]}`;\n                }\n            }\n            resultLines.push(result);\n            result = '';\n            allLines = allLines.concat(resultLines);\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n        return { l: allLines, n: realNewlines };\n    }\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    mergeDefaults(settings) {\n        return {\n            text: '',\n            w: 0,\n            h: 0,\n            fontStyle: 'normal',\n            fontSize: 40,\n            fontFamily: null,\n            trFontFace: null,\n            wordWrap: true,\n            wordWrapWidth: 0,\n            wordBreak: false,\n            textOverflow: '',\n            lineHeight: null,\n            textBaseline: 'alphabetic',\n            textAlign: 'left',\n            verticalAlign: 'top',\n            offsetY: null,\n            maxLines: 0,\n            maxHeight: null,\n            overflowSuffix: '...',\n            textColor: [1.0, 1.0, 1.0, 1.0],\n            paddingLeft: 0,\n            paddingRight: 0,\n            shadow: false,\n            shadowColor: [0.0, 0.0, 0.0, 1.0],\n            shadowOffsetX: 0,\n            shadowOffsetY: 0,\n            shadowBlur: 5,\n            highlight: false,\n            highlightHeight: 0,\n            highlightColor: [0.0, 0.0, 0.0, 1.0],\n            highlightOffset: 0,\n            highlightPaddingLeft: 0,\n            highlightPaddingRight: 0,\n            letterSpacing: 0,\n            textIndent: 0,\n            cutSx: 0,\n            cutEx: 0,\n            cutSy: 0,\n            cutEy: 0,\n            advancedRenderer: false,\n            fontBaselineRatio: 0,\n            precision: 1,\n            textRenderIssueMargin: 0,\n            ...settings,\n        };\n    }\n}\n//# sourceMappingURL=LightningTextTextureRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nimport { assertTruthy } from '../../../utils.js';\nimport { getNormalizedRgbaComponents, getNormalizedAlphaComponent, } from '../../lib/utils.js';\nimport { TrFontManager } from '../TrFontManager.js';\nimport { WebTrFontFace } from '../font-face-types/WebTrFontFace.js';\nimport { LightningTextTextureRenderer, } from './LightningTextTextureRenderer.js';\nimport { TextRenderer, } from './TextRenderer.js';\nconst resolvedGlobal = typeof self === 'undefined' ? globalThis : self;\n/**\n * Global font set regardless of if run in the main thread or a web worker\n */\nconst globalFontSet = (resolvedGlobal.document?.fonts ||\n    resolvedGlobal.fonts);\nfunction getFontCssString(props) {\n    const { fontFamily, fontStyle, fontWeight, fontStretch, fontSize } = props;\n    return [fontStyle, fontWeight, fontStretch, `${fontSize}px`, fontFamily].join(' ');\n}\nexport class CanvasTextRenderer extends TextRenderer {\n    canvas;\n    context;\n    /**\n     * Font family map used to store web font faces that were added to the\n     * canvas text renderer.\n     */\n    fontFamilies = {};\n    fontFamilyArray = [this.fontFamilies];\n    constructor(stage) {\n        super(stage);\n        if (typeof OffscreenCanvas !== 'undefined') {\n            this.canvas = new OffscreenCanvas(0, 0);\n        }\n        else {\n            this.canvas = document.createElement('canvas');\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n        let context = this.canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n        if (!context) {\n            // A browser may appear to support OffscreenCanvas but not actually support the Canvas '2d' context\n            // Here we try getting the context again after falling back to an HTMLCanvasElement.\n            // See: https://github.com/lightning-js/renderer/issues/26#issuecomment-1750438486\n            this.canvas = document.createElement('canvas');\n            context = this.canvas.getContext('2d', {\n                willReadFrequently: true,\n            });\n        }\n        assertTruthy(context);\n        this.context = context;\n        // Install the default 'san-serif' font face\n        this.addFontFace(new WebTrFontFace({\n            fontFamily: 'sans-serif',\n            descriptors: {},\n            fontUrl: '',\n        }));\n    }\n    //#region Overrides\n    getPropertySetters() {\n        return {\n            fontFamily: (state, value) => {\n                state.props.fontFamily = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontWeight: (state, value) => {\n                state.props.fontWeight = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontStyle: (state, value) => {\n                state.props.fontStyle = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontStretch: (state, value) => {\n                state.props.fontStretch = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontSize: (state, value) => {\n                state.props.fontSize = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            text: (state, value) => {\n                state.props.text = value;\n                this.invalidateLayoutCache(state);\n            },\n            textAlign: (state, value) => {\n                state.props.textAlign = value;\n                this.invalidateLayoutCache(state);\n            },\n            color: (state, value) => {\n                state.props.color = value;\n                this.invalidateLayoutCache(state);\n            },\n            x: (state, value) => {\n                state.props.x = value;\n            },\n            y: (state, value) => {\n                state.props.y = value;\n            },\n            contain: (state, value) => {\n                state.props.contain = value;\n                this.invalidateLayoutCache(state);\n            },\n            width: (state, value) => {\n                state.props.width = value;\n                // Only invalidate layout cache if we're containing in the horizontal direction\n                if (state.props.contain !== 'none') {\n                    this.invalidateLayoutCache(state);\n                }\n            },\n            height: (state, value) => {\n                state.props.height = value;\n                // Only invalidate layout cache if we're containing in the vertical direction\n                if (state.props.contain === 'both') {\n                    this.invalidateLayoutCache(state);\n                }\n            },\n            offsetY: (state, value) => {\n                state.props.offsetY = value;\n                this.invalidateLayoutCache(state);\n            },\n            scrollY: (state, value) => {\n                state.props.scrollY = value;\n            },\n            letterSpacing: (state, value) => {\n                state.props.letterSpacing = value;\n                this.invalidateLayoutCache(state);\n            },\n            lineHeight: (state, value) => {\n                state.props.lineHeight = value;\n                this.invalidateLayoutCache(state);\n            },\n            maxLines: (state, value) => {\n                state.props.maxLines = value;\n                this.invalidateLayoutCache(state);\n            },\n            textBaseline: (state, value) => {\n                state.props.textBaseline = value;\n                this.invalidateLayoutCache(state);\n            },\n            verticalAlign: (state, value) => {\n                state.props.verticalAlign = value;\n                this.invalidateLayoutCache(state);\n            },\n            overflowSuffix: (state, value) => {\n                state.props.overflowSuffix = value;\n                this.invalidateLayoutCache(state);\n            },\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    canRenderFont(props) {\n        // The canvas renderer can render any font because it automatically\n        // falls back to system fonts. The CanvasTextRenderer should be\n        // checked last if other renderers are preferred.\n        return true;\n    }\n    isFontFaceSupported(fontFace) {\n        return fontFace instanceof WebTrFontFace;\n    }\n    addFontFace(fontFace) {\n        // Make sure the font face is an Canvas font face (it should have already passed\n        // the `isFontFaceSupported` check)\n        assertTruthy(fontFace instanceof WebTrFontFace);\n        // Add the font face to the document\n        // Except for the 'sans-serif' font family, which the Renderer provides\n        // as a special default fallback.\n        if (fontFace.fontFamily !== 'sans-serif') {\n            // @ts-expect-error `add()` method should be available from a FontFaceSet\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            globalFontSet.add(fontFace.fontFace);\n        }\n        const { fontFamilies } = this;\n        const familyName = fontFace.fontFace.family;\n        let faceSet = fontFamilies[familyName];\n        if (!faceSet) {\n            faceSet = new Set();\n            fontFamilies[familyName] = faceSet;\n        }\n        faceSet.add(fontFace);\n    }\n    createState(props, node) {\n        return {\n            node,\n            props,\n            status: 'initialState',\n            updateScheduled: false,\n            emitter: new EventEmitter(),\n            textureNode: undefined,\n            lightning2TextRenderer: new LightningTextTextureRenderer(this.canvas, this.context),\n            renderInfo: undefined,\n            forceFullLayoutCalc: false,\n            textW: 0,\n            textH: 0,\n            fontInfo: undefined,\n            isRenderable: false,\n            debugData: {\n                updateCount: 0,\n                layoutCount: 0,\n                drawCount: 0,\n                lastLayoutNumCharacters: 0,\n                layoutSum: 0,\n                drawSum: 0,\n                bufferSize: 0,\n            },\n        };\n    }\n    updateState(state) {\n        // On the first update call we need to set the status to loading\n        if (state.status === 'initialState') {\n            this.setStatus(state, 'loading');\n            // check if we're on screen\n            // if (this.isValidOnScreen(state) === true) {\n            //   this.setStatus(state, 'loading');\n            // }\n        }\n        if (state.status === 'loaded') {\n            // If we're loaded, we don't need to do anything\n            return;\n        }\n        // If fontInfo is invalid, we need to establish it\n        if (!state.fontInfo) {\n            return this.loadFont(state);\n        }\n        // If we're waiting for a font face to load, don't render anything\n        if (!state.fontInfo.loaded) {\n            return;\n        }\n        if (!state.renderInfo) {\n            state.renderInfo = this.calculateRenderInfo(state);\n            state.textH = state.renderInfo.lineHeight * state.renderInfo.lines.length;\n            state.textW = state.renderInfo.width;\n            this.renderSingleCanvasPage(state);\n        }\n        // handle scrollable text !!!\n        // if (state.isScrollable === true) {\n        //   return this.renderScrollableCanvasPages(state);\n        // }\n        // handle single page text\n    }\n    renderSingleCanvasPage(state) {\n        assertTruthy(state.renderInfo);\n        const node = state.node;\n        const texture = this.stage.txManager.loadTexture('ImageTexture', {\n            src: function (lightning2TextRenderer, renderInfo) {\n                // load the canvas texture\n                assertTruthy(renderInfo);\n                lightning2TextRenderer.draw(renderInfo, {\n                    lines: renderInfo.lines,\n                    lineWidths: renderInfo.lineWidths,\n                });\n                if (this.canvas.width === 0 || this.canvas.height === 0) {\n                    return null;\n                }\n                return this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n            }.bind(this, state.lightning2TextRenderer, state.renderInfo),\n        });\n        if (state.textureNode) {\n            // Use the existing texture node\n            state.textureNode.texture = texture;\n        }\n        else {\n            // Create a new texture node\n            const textureNode = this.stage.createNode({\n                parent: node,\n                texture,\n                autosize: true,\n                // The alpha channel of the color is ignored when rasterizing the text\n                // texture so we need to pass it directly to the texture node.\n                alpha: getNormalizedAlphaComponent(state.props.color),\n            });\n            state.textureNode = textureNode;\n        }\n        this.setStatus(state, 'loaded');\n    }\n    loadFont = (state) => {\n        const cssString = getFontCssString(state.props);\n        const trFontFace = TrFontManager.resolveFontFace(this.fontFamilyArray, state.props);\n        assertTruthy(trFontFace, `Could not resolve font face for ${cssString}`);\n        state.fontInfo = {\n            fontFace: trFontFace,\n            cssString: cssString,\n            // TODO: For efficiency we would use this here but it's not reliable on WPE -> document.fonts.check(cssString),\n            loaded: false,\n        };\n        // If font is not loaded, set up a handler to update the font info when the font loads\n        if (!state.fontInfo.loaded) {\n            globalFontSet\n                .load(cssString)\n                .then(this.onFontLoaded.bind(this, state, cssString))\n                .catch(this.onFontLoadError.bind(this, state, cssString));\n            return;\n        }\n    };\n    calculateRenderInfo(state) {\n        state.lightning2TextRenderer.settings = {\n            text: state.props.text,\n            textAlign: state.props.textAlign,\n            fontFamily: state.props.fontFamily,\n            trFontFace: state.fontInfo?.fontFace,\n            fontSize: state.props.fontSize,\n            fontStyle: [\n                state.props.fontStretch,\n                state.props.fontStyle,\n                state.props.fontWeight,\n            ].join(' '),\n            textColor: getNormalizedRgbaComponents(state.props.color),\n            offsetY: state.props.offsetY,\n            wordWrap: state.props.contain !== 'none',\n            wordWrapWidth: state.props.contain === 'none' ? undefined : state.props.width,\n            letterSpacing: state.props.letterSpacing,\n            lineHeight: state.props.lineHeight ?? null,\n            maxLines: state.props.maxLines,\n            maxHeight: state.props.contain === 'both'\n                ? state.props.height - state.props.offsetY\n                : null,\n            textBaseline: state.props.textBaseline,\n            verticalAlign: state.props.verticalAlign,\n            overflowSuffix: state.props.overflowSuffix,\n            w: state.props.contain !== 'none' ? state.props.width : undefined,\n        };\n        state.renderInfo = state.lightning2TextRenderer.calculateRenderInfo();\n        return state.renderInfo;\n    }\n    renderQuads() {\n        // Do nothing. The renderer will render the child node(s) that were created\n        // in the state update.\n        return;\n    }\n    destroyState(state) {\n        if (state.status === 'destroyed') {\n            return;\n        }\n        super.destroyState(state);\n        if (state.textureNode) {\n            state.textureNode.destroy();\n            delete state.textureNode;\n        }\n        delete state.renderInfo;\n    }\n    //#endregion Overrides\n    /**\n     * Invalidate the layout cache stored in the state. This will cause the text\n     * to be re-rendered on the next update.\n     *\n     * @remarks\n     * This also invalidates the visible window cache.\n     *\n     * @param state\n     */\n    invalidateLayoutCache(state) {\n        state.renderInfo = undefined;\n        this.setStatus(state, 'loading');\n        this.scheduleUpdateState(state);\n    }\n    onFontLoaded(state, cssString) {\n        if (cssString !== state.fontInfo?.cssString || !state.fontInfo) {\n            return;\n        }\n        state.fontInfo.loaded = true;\n        this.scheduleUpdateState(state);\n    }\n    onFontLoadError(state, cssString, error) {\n        if (cssString !== state.fontInfo?.cssString || !state.fontInfo) {\n            return;\n        }\n        // Font didn't actually load, but we'll log the error and mark it as loaded\n        // because the browser can still render with a fallback font.\n        state.fontInfo.loaded = true;\n        console.error(`CanvasTextRenderer: Error loading font '${state.fontInfo.cssString}'`, error);\n        this.scheduleUpdateState(state);\n    }\n}\n//# sourceMappingURL=CanvasTextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class that keeps track of the invocations of Context methods when\n * the `enableContextSpy` renderer option is enabled.\n */\nexport class ContextSpy {\n    data = {};\n    reset() {\n        this.data = {};\n    }\n    increment(name) {\n        if (!this.data[name]) {\n            this.data[name] = 0;\n        }\n        this.data[name]++;\n    }\n    getData() {\n        return { ...this.data };\n    }\n}\n//# sourceMappingURL=ContextSpy.js.map","import { bytesToMb } from './utils.js';\n/**\n * LRU (Least Recently Used) style memory manager for textures\n *\n * @remarks\n * This class is responsible for managing the memory usage of textures\n * in the Renderer. It keeps track of the memory used by each texture\n * and triggers a cleanup when the memory usage exceeds a critical\n * threshold (`criticalThreshold`).\n *\n * The cleanup process will free up non-renderable textures until the\n * memory usage is below a target threshold (`targetThresholdLevel`).\n *\n * The memory manager's clean up process will also be triggered when the\n * scene is idle for a certain amount of time (`cleanupInterval`).\n */\nexport class TextureMemoryManager {\n    stage;\n    memUsed = 0;\n    loadedTextures = new Map();\n    criticalThreshold;\n    targetThreshold;\n    cleanupInterval;\n    debugLogging;\n    lastCleanupTime = 0;\n    criticalCleanupRequested = false;\n    /**\n     * The current frame time in milliseconds\n     *\n     * @remarks\n     * This is used to determine when to perform Idle Texture Cleanups.\n     *\n     * Set by stage via `updateFrameTime` method.\n     */\n    frameTime = 0;\n    constructor(stage, settings) {\n        this.stage = stage;\n        const { criticalThreshold } = settings;\n        this.criticalThreshold = Math.round(criticalThreshold);\n        const targetFraction = Math.max(0, Math.min(1, settings.targetThresholdLevel));\n        this.targetThreshold = Math.round(criticalThreshold * targetFraction);\n        this.cleanupInterval = settings.cleanupInterval;\n        this.debugLogging = settings.debugLogging;\n        if (settings.debugLogging) {\n            let lastMemUse = 0;\n            setInterval(() => {\n                if (lastMemUse !== this.memUsed) {\n                    lastMemUse = this.memUsed;\n                    console.log(`[TextureMemoryManager] Memory used: ${bytesToMb(this.memUsed)} mb / ${bytesToMb(this.criticalThreshold)} mb (${((this.memUsed / this.criticalThreshold) *\n                        100).toFixed(1)}%)`);\n                }\n            }, 1000);\n        }\n        // If the threshold is 0, we disable the memory manager by replacing the\n        // setTextureMemUse method with a no-op function.\n        if (criticalThreshold === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            this.setTextureMemUse = () => { };\n        }\n    }\n    setTextureMemUse(texture, byteSize) {\n        if (this.loadedTextures.has(texture)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.memUsed -= this.loadedTextures.get(texture);\n        }\n        if (byteSize === 0) {\n            this.loadedTextures.delete(texture);\n            return;\n        }\n        else {\n            this.memUsed += byteSize;\n            this.loadedTextures.set(texture, byteSize);\n        }\n        if (this.memUsed > this.criticalThreshold) {\n            this.criticalCleanupRequested = true;\n        }\n    }\n    checkCleanup() {\n        return (this.criticalCleanupRequested ||\n            (this.memUsed > this.targetThreshold &&\n                this.frameTime - this.lastCleanupTime >= this.cleanupInterval));\n    }\n    cleanup() {\n        const critical = this.criticalCleanupRequested;\n        this.lastCleanupTime = this.frameTime;\n        this.criticalCleanupRequested = false;\n        if (critical) {\n            this.stage.queueFrameEvent('criticalCleanup', {\n                memUsed: this.memUsed,\n                criticalThreshold: this.criticalThreshold,\n            });\n        }\n        if (this.debugLogging) {\n            console.log(`[TextureMemoryManager] Cleaning up textures. Critical: ${critical}`);\n        }\n        /**\n         * Sort the loaded textures by renderability, then by last touch time.\n         *\n         * This will ensure that the array is ordered by the following:\n         * - Non-renderable textures, starting at the least recently rendered\n         * - Renderable textures, starting at the least recently rendered\n         */\n        const textures = [...this.loadedTextures.keys()].sort((textureA, textureB) => {\n            const txARenderable = textureA.renderable;\n            const txBRenderable = textureB.renderable;\n            if (txARenderable === txBRenderable) {\n                return (textureA.lastRenderableChangeTime -\n                    textureB.lastRenderableChangeTime);\n            }\n            else if (txARenderable) {\n                return 1;\n            }\n            else if (txBRenderable) {\n                return -1;\n            }\n            return 0;\n        });\n        // Free non-renderable textures until we reach the target threshold\n        const memTarget = this.targetThreshold;\n        const txManager = this.stage.txManager;\n        for (const texture of textures) {\n            if (texture.renderable) {\n                // Stop at the first renderable texture (The rest are renderable because of the sort above)\n                // We don't want to free renderable textures because they will just likely be reloaded in the next frame\n                break;\n            }\n            texture.ctxTexture.free();\n            txManager.removeTextureFromCache(texture);\n            if (this.memUsed <= memTarget) {\n                // Stop once we've freed enough textures to reach under the target threshold\n                break;\n            }\n        }\n        if (this.memUsed >= this.criticalThreshold) {\n            this.stage.queueFrameEvent('criticalCleanupFailed', {\n                memUsed: this.memUsed,\n                criticalThreshold: this.criticalThreshold,\n            });\n            console.warn(`[TextureMemoryManager] Memory usage above critical threshold after cleanup: ${this.memUsed}`);\n        }\n    }\n    /**\n     * Get the current texture memory usage information\n     *\n     * @remarks\n     * This method is for debugging purposes and returns information about the\n     * current memory usage of the textures in the Renderer.\n     */\n    getMemoryInfo() {\n        let renderableTexturesLoaded = 0;\n        const renderableMemUsed = [...this.loadedTextures.keys()].reduce(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        (acc, texture) => {\n            renderableTexturesLoaded += texture.renderable ? 1 : 0;\n            return (acc + (texture.renderable ? this.loadedTextures.get(texture) : 0));\n        }, 0);\n        return {\n            criticalThreshold: this.criticalThreshold,\n            targetThreshold: this.targetThreshold,\n            renderableMemUsed,\n            memUsed: this.memUsed,\n            renderableTexturesLoaded,\n            loadedTextures: this.loadedTextures.size,\n        };\n    }\n}\n//# sourceMappingURL=TextureMemoryManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst WHITE = {\n    isWhite: true,\n    a: 1,\n    r: 0xff,\n    g: 0xff,\n    b: 0xff,\n};\n/**\n * Extract color components\n */\nexport function parseColor(abgr) {\n    if (abgr === 0xffffffff) {\n        return WHITE;\n    }\n    const a = ((abgr >>> 24) & 0xff) / 255;\n    const b = (abgr >>> 16) & 0xff & 0xff;\n    const g = (abgr >>> 8) & 0xff & 0xff;\n    const r = abgr & 0xff & 0xff;\n    return { isWhite: false, a, r, g, b };\n}\n/**\n * Format a parsed color into a rgba CSS color\n */\nexport function formatRgba({ a, r, g, b }) {\n    return `rgba(${r},${g},${b},${a})`;\n}\n//# sourceMappingURL=ColorUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { formatRgba } from './internal/ColorUtils.js';\nexport class CanvasCoreTexture extends CoreContextTexture {\n    image;\n    tintCache;\n    load() {\n        if (this.textureSource.state !== 'freed') {\n            return;\n        }\n        this.textureSource.setState('loading');\n        this.onLoadRequest()\n            .then((size) => {\n            this.textureSource.setState('loaded', size);\n            this.updateMemSize();\n        })\n            .catch((err) => {\n            this.textureSource.setState('failed', err);\n        });\n    }\n    free() {\n        this.image = undefined;\n        this.tintCache = undefined;\n        this.textureSource.setState('freed');\n        this.setTextureMemUse(0);\n    }\n    updateMemSize() {\n        // Counting memory usage for:\n        // - main image\n        // - tinted image\n        const mult = this.tintCache ? 8 : 4;\n        if (this.textureSource.dimensions) {\n            const { width, height } = this.textureSource.dimensions;\n            this.setTextureMemUse(width * height * mult);\n        }\n    }\n    hasImage() {\n        return this.image !== undefined;\n    }\n    getImage(color) {\n        const image = this.image;\n        assertTruthy(image, 'Attempt to get unloaded image texture');\n        if (color.isWhite) {\n            if (this.tintCache) {\n                this.tintCache = undefined;\n                this.updateMemSize();\n            }\n            return image;\n        }\n        const key = formatRgba(color);\n        if (this.tintCache?.key === key) {\n            return this.tintCache.image;\n        }\n        const tintedImage = this.tintTexture(image, key);\n        this.tintCache = {\n            key,\n            image: tintedImage,\n        };\n        this.updateMemSize();\n        return tintedImage;\n    }\n    tintTexture(source, color) {\n        const { width, height } = source;\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            // fill with target color\n            ctx.fillStyle = color;\n            ctx.globalCompositeOperation = 'copy';\n            ctx.fillRect(0, 0, width, height);\n            // multiply with image, resulting in non-transparent tinted image\n            ctx.globalCompositeOperation = 'multiply';\n            ctx.drawImage(source, 0, 0, width, height, 0, 0, width, height);\n            // apply original image alpha\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(source, 0, 0, width, height, 0, 0, width, height);\n        }\n        return canvas;\n    }\n    async onLoadRequest() {\n        const { data } = await this.textureSource.getTextureData();\n        // TODO: canvas from text renderer should be able to provide the canvas directly\n        // instead of having to re-draw it into a new canvas...\n        if (data instanceof ImageData) {\n            const canvas = document.createElement('canvas');\n            canvas.width = data.width;\n            canvas.height = data.height;\n            const ctx = canvas.getContext('2d');\n            if (ctx)\n                ctx.putImageData(data, 0, 0);\n            this.image = canvas;\n            return { width: data.width, height: data.height };\n        }\n        else if (data instanceof ImageBitmap) {\n            this.image = data;\n            return { width: data.width, height: data.height };\n        }\n        return { width: 0, height: 0 };\n    }\n}\n//# sourceMappingURL=CanvasCoreTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ROUNDED_RECTANGLE_SHADER_TYPE, UnsupportedShader, } from '../shaders/UnsupportedShader.js';\n/**\n * Extract `RoundedRectangle` shader radius to apply as a clipping\n */\nexport function getRadius(quad) {\n    if (quad.shader instanceof UnsupportedShader) {\n        const shType = quad.shader.shType;\n        if (shType === ROUNDED_RECTANGLE_SHADER_TYPE) {\n            return quad.shaderProps?.radius ?? 0;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=C2DShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getRgbaComponents } from '../../lib/utils.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { CoreRenderer, } from '../CoreRenderer.js';\nimport { CanvasCoreTexture } from './CanvasCoreTexture.js';\nimport { getRadius } from './internal/C2DShaderUtils.js';\nimport { formatRgba, parseColor, } from './internal/ColorUtils.js';\nimport { UnsupportedShader } from './shaders/UnsupportedShader.js';\nexport class CanvasCoreRenderer extends CoreRenderer {\n    context;\n    canvas;\n    pixelRatio;\n    clearColor;\n    renderToTextureActive = false;\n    activeRttNode = null;\n    defShaderCtr;\n    constructor(options) {\n        super(options);\n        this.mode = 'canvas';\n        this.shManager.renderer = this;\n        const { canvas, pixelRatio, clearColor } = options;\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.pixelRatio = pixelRatio;\n        this.clearColor = clearColor ? getRgbaComponents(clearColor) : undefined;\n        // Stub for default shader controller since the canvas renderer does not\n        // (really) support the concept of a shader (yet)\n        this.defShaderCtr = {\n            type: 'DefaultShader',\n            props: {},\n            shader: new UnsupportedShader('DefaultShader'),\n            getResolvedProps: () => () => {\n                return {};\n            },\n        };\n    }\n    reset() {\n        // eslint-disable-next-line no-self-assign\n        this.canvas.width = this.canvas.width; // quick reset canvas\n        const ctx = this.context;\n        if (this.clearColor) {\n            const [r, g, b, a] = this.clearColor;\n            ctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${a / 255})`;\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        ctx.scale(this.pixelRatio, this.pixelRatio);\n    }\n    render() {\n        // noop\n    }\n    addQuad(quad) {\n        const ctx = this.context;\n        const { tx, ty, width, height, alpha, colorTl, colorTr, colorBr, ta, tb, tc, td, clippingRect, } = quad;\n        let texture = quad.texture;\n        let ctxTexture = undefined;\n        let frame;\n        if (texture) {\n            if (texture instanceof SubTexture) {\n                frame = texture.props;\n                texture = texture.parentTexture;\n            }\n            ctxTexture = texture.ctxTexture;\n            if (texture.state === 'freed') {\n                ctxTexture.load();\n                return;\n            }\n            if (texture.state !== 'loaded' || !ctxTexture.hasImage()) {\n                return;\n            }\n        }\n        const color = parseColor(colorTl);\n        const hasTransform = ta !== 1;\n        const hasClipping = clippingRect.width !== 0 && clippingRect.height !== 0;\n        const hasGradient = colorTl !== colorTr || colorTl !== colorBr;\n        const radius = quad.shader ? getRadius(quad) : 0;\n        if (hasTransform || hasClipping || radius) {\n            ctx.save();\n        }\n        if (hasClipping) {\n            const path = new Path2D();\n            const { x, y, width, height } = clippingRect;\n            path.rect(x, y, width, height);\n            ctx.clip(path);\n        }\n        if (hasTransform) {\n            // Quad transform:\n            // | ta tb tx |\n            // | tc td ty |\n            // | 0  0  1  |\n            // C2D transform:\n            // | a  c  e  |\n            // | b  d  f  |\n            // | 0  0  1  |\n            const scale = this.pixelRatio;\n            ctx.setTransform(ta, tc, tb, td, tx * scale, ty * scale);\n            ctx.scale(scale, scale);\n            ctx.translate(-tx, -ty);\n        }\n        if (radius) {\n            const path = new Path2D();\n            path.roundRect(tx, ty, width, height, radius);\n            ctx.clip(path);\n        }\n        if (ctxTexture) {\n            const image = ctxTexture.getImage(color);\n            ctx.globalAlpha = alpha;\n            if (frame) {\n                ctx.drawImage(image, frame.x, frame.y, frame.width, frame.height, tx, ty, width, height);\n            }\n            else {\n                ctx.drawImage(image, tx, ty, width, height);\n            }\n            ctx.globalAlpha = 1;\n        }\n        else if (hasGradient) {\n            let endX = tx;\n            let endY = ty;\n            let endColor;\n            if (colorTl === colorTr) {\n                // vertical\n                endX = tx;\n                endY = ty + height;\n                endColor = parseColor(colorBr);\n            }\n            else {\n                // horizontal\n                endX = tx + width;\n                endY = ty;\n                endColor = parseColor(colorTr);\n            }\n            const gradient = ctx.createLinearGradient(tx, ty, endX, endY);\n            gradient.addColorStop(0, formatRgba(color));\n            gradient.addColorStop(1, formatRgba(endColor));\n            ctx.fillStyle = gradient;\n            ctx.fillRect(tx, ty, width, height);\n        }\n        else {\n            ctx.fillStyle = formatRgba(color);\n            ctx.fillRect(tx, ty, width, height);\n        }\n        if (hasTransform || hasClipping || radius) {\n            ctx.restore();\n        }\n    }\n    createCtxTexture(textureSource) {\n        return new CanvasCoreTexture(this.txMemManager, textureSource);\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    getDefShaderCtr() {\n        return this.defShaderCtr;\n    }\n    renderRTTNodes() {\n        // noop\n    }\n    removeRTTNode(node) {\n        // noop\n    }\n    renderToTexture(node) {\n        // noop\n    }\n    getBufferInfo() {\n        return null;\n    }\n}\n//# sourceMappingURL=CanvasCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreNode, UpdateType } from './CoreNode.js';\nimport { assertTruthy } from '../utils.js';\nimport { Matrix3d } from './lib/Matrix3d.js';\n/**\n * An CoreNode in the Renderer scene graph that renders text.\n *\n * @remarks\n * A Text Node is the second graphical building block of the Renderer scene\n * graph. It renders text using a specific text renderer that is automatically\n * chosen based on the font requested and what type of fonts are installed\n * into an app.\n *\n * The text renderer can be overridden by setting the `textRendererOverride`\n *\n * The `texture` and `shader` properties are managed by loaded text renderer and\n * should not be set directly.\n *\n * For non-text rendering, see {@link CoreNode}.\n */\nexport class CoreTextNode extends CoreNode {\n    textRenderer;\n    trState;\n    _textRendererOverride = null;\n    constructor(stage, props) {\n        super(stage, props);\n        this._textRendererOverride = props.textRendererOverride;\n        const { resolvedTextRenderer, textRendererState } = this.resolveTextRendererAndState({\n            x: this.absX,\n            y: this.absY,\n            width: props.width,\n            height: props.height,\n            textAlign: props.textAlign,\n            color: props.color,\n            zIndex: props.zIndex,\n            contain: props.contain,\n            scrollable: props.scrollable,\n            scrollY: props.scrollY,\n            offsetY: props.offsetY,\n            letterSpacing: props.letterSpacing,\n            debug: props.debug,\n            fontFamily: props.fontFamily,\n            fontSize: props.fontSize,\n            fontStretch: props.fontStretch,\n            fontStyle: props.fontStyle,\n            fontWeight: props.fontWeight,\n            text: props.text,\n            lineHeight: props.lineHeight,\n            maxLines: props.maxLines,\n            textBaseline: props.textBaseline,\n            verticalAlign: props.verticalAlign,\n            overflowSuffix: props.overflowSuffix,\n        });\n        this.textRenderer = resolvedTextRenderer;\n        this.trState = textRendererState;\n    }\n    onTextLoaded = () => {\n        const { contain } = this;\n        const setWidth = this.trState.props.width;\n        const setHeight = this.trState.props.height;\n        const calcWidth = this.trState.textW || 0;\n        const calcHeight = this.trState.textH || 0;\n        if (contain === 'both') {\n            this.props.width = setWidth;\n            this.props.height = setHeight;\n        }\n        else if (contain === 'width') {\n            this.props.width = setWidth;\n            this.props.height = calcHeight;\n        }\n        else if (contain === 'none') {\n            this.props.width = calcWidth;\n            this.props.height = calcHeight;\n        }\n        this.updateLocalTransform();\n        // Incase the RAF loop has been stopped already before text was loaded,\n        // we request a render so it can be drawn.\n        this.stage.requestRender();\n        this.emit('loaded', {\n            type: 'text',\n            dimensions: {\n                width: this.trState.textW || 0,\n                height: this.trState.textH || 0,\n            },\n        });\n    };\n    onTextFailed = (target, error) => {\n        this.emit('failed', {\n            type: 'text',\n            error,\n        });\n    };\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        this.props.width = value;\n        this.textRenderer.set.width(this.trState, value);\n        // If not containing, we must update the local transform to account for the\n        // new width\n        if (this.contain === 'none') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        this.props.height = value;\n        this.textRenderer.set.height(this.trState, value);\n        // If not containing in the horizontal direction, we must update the local\n        // transform to account for the new height\n        if (this.contain !== 'both') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get color() {\n        return this.trState.props.color;\n    }\n    set color(value) {\n        this.textRenderer.set.color(this.trState, value);\n    }\n    get text() {\n        return this.trState.props.text;\n    }\n    set text(value) {\n        this.textRenderer.set.text(this.trState, value);\n    }\n    get textRendererOverride() {\n        return this._textRendererOverride;\n    }\n    set textRendererOverride(value) {\n        this._textRendererOverride = value;\n        this.textRenderer.destroyState(this.trState);\n        const { resolvedTextRenderer, textRendererState } = this.resolveTextRendererAndState(this.trState.props);\n        this.textRenderer = resolvedTextRenderer;\n        this.trState = textRendererState;\n    }\n    get fontSize() {\n        return this.trState.props.fontSize;\n    }\n    set fontSize(value) {\n        this.textRenderer.set.fontSize(this.trState, value);\n    }\n    get fontFamily() {\n        return this.trState.props.fontFamily;\n    }\n    set fontFamily(value) {\n        this.textRenderer.set.fontFamily(this.trState, value);\n    }\n    get fontStretch() {\n        return this.trState.props.fontStretch;\n    }\n    set fontStretch(value) {\n        this.textRenderer.set.fontStretch(this.trState, value);\n    }\n    get fontStyle() {\n        return this.trState.props.fontStyle;\n    }\n    set fontStyle(value) {\n        this.textRenderer.set.fontStyle(this.trState, value);\n    }\n    get fontWeight() {\n        return this.trState.props.fontWeight;\n    }\n    set fontWeight(value) {\n        this.textRenderer.set.fontWeight(this.trState, value);\n    }\n    get textAlign() {\n        return this.trState.props.textAlign;\n    }\n    set textAlign(value) {\n        this.textRenderer.set.textAlign(this.trState, value);\n    }\n    get contain() {\n        return this.trState.props.contain;\n    }\n    set contain(value) {\n        this.textRenderer.set.contain(this.trState, value);\n    }\n    get scrollable() {\n        return this.trState.props.scrollable;\n    }\n    set scrollable(value) {\n        this.textRenderer.set.scrollable(this.trState, value);\n    }\n    get scrollY() {\n        return this.trState.props.scrollY;\n    }\n    set scrollY(value) {\n        this.textRenderer.set.scrollY(this.trState, value);\n    }\n    get offsetY() {\n        return this.trState.props.offsetY;\n    }\n    set offsetY(value) {\n        this.textRenderer.set.offsetY(this.trState, value);\n    }\n    get letterSpacing() {\n        return this.trState.props.letterSpacing;\n    }\n    set letterSpacing(value) {\n        this.textRenderer.set.letterSpacing(this.trState, value);\n    }\n    get lineHeight() {\n        return this.trState.props.lineHeight;\n    }\n    set lineHeight(value) {\n        if (this.textRenderer.set.lineHeight) {\n            this.textRenderer.set.lineHeight(this.trState, value);\n        }\n    }\n    get maxLines() {\n        return this.trState.props.maxLines;\n    }\n    set maxLines(value) {\n        if (this.textRenderer.set.maxLines) {\n            this.textRenderer.set.maxLines(this.trState, value);\n        }\n    }\n    get textBaseline() {\n        return this.trState.props.textBaseline;\n    }\n    set textBaseline(value) {\n        if (this.textRenderer.set.textBaseline) {\n            this.textRenderer.set.textBaseline(this.trState, value);\n        }\n    }\n    get verticalAlign() {\n        return this.trState.props.verticalAlign;\n    }\n    set verticalAlign(value) {\n        if (this.textRenderer.set.verticalAlign) {\n            this.textRenderer.set.verticalAlign(this.trState, value);\n        }\n    }\n    get overflowSuffix() {\n        return this.trState.props.overflowSuffix;\n    }\n    set overflowSuffix(value) {\n        if (this.textRenderer.set.overflowSuffix) {\n            this.textRenderer.set.overflowSuffix(this.trState, value);\n        }\n    }\n    get debug() {\n        return this.trState.props.debug;\n    }\n    set debug(value) {\n        this.textRenderer.set.debug(this.trState, value);\n    }\n    update(delta, parentClippingRect) {\n        super.update(delta, parentClippingRect);\n        assertTruthy(this.globalTransform);\n        // globalTransform is updated in super.update(delta)\n        this.textRenderer.set.x(this.trState, this.globalTransform.tx);\n        this.textRenderer.set.y(this.trState, this.globalTransform.ty);\n    }\n    checkRenderProps() {\n        if (this.trState.props.text !== '') {\n            return true;\n        }\n        return super.checkRenderProps();\n    }\n    onChangeIsRenderable(isRenderable) {\n        super.onChangeIsRenderable(isRenderable);\n        this.textRenderer.setIsRenderable(this.trState, isRenderable);\n    }\n    renderQuads(renderer) {\n        assertTruthy(this.globalTransform);\n        // If the text renderer does not support rendering quads, fallback to the\n        // default renderQuads method\n        if (!this.textRenderer.renderQuads) {\n            super.renderQuads(renderer);\n            return;\n        }\n        // If the text renderer does support rendering quads, use it...\n        // Prevent quad rendering if parent has a render texture\n        // and this node is not the render texture\n        if (this.parentHasRenderTexture) {\n            if (!renderer.renderToTextureActive) {\n                return;\n            }\n            // Prevent quad rendering if parent render texture is not the active render texture\n            if (this.parentRenderTexture !== renderer.activeRttNode) {\n                return;\n            }\n        }\n        if (this.parentHasRenderTexture && this.props.parent?.rtt) {\n            this.globalTransform = Matrix3d.identity();\n            if (this.localTransform) {\n                this.globalTransform.multiply(this.localTransform);\n            }\n        }\n        assertTruthy(this.globalTransform);\n        this.textRenderer.renderQuads(this.trState, this.globalTransform, this.clippingRect, this.worldAlpha, this.parentHasRenderTexture, this.framebufferDimensions);\n    }\n    /**\n     * Destroy the node and cleanup all resources\n     */\n    destroy() {\n        super.destroy();\n        this.textRenderer.destroyState(this.trState);\n    }\n    /**\n     * Resolve a text renderer and a new state based on the current text renderer props provided\n     * @param props\n     * @returns\n     */\n    resolveTextRendererAndState(props) {\n        const resolvedTextRenderer = this.stage.resolveTextRenderer(props, this._textRendererOverride);\n        const textRendererState = resolvedTextRenderer.createState(props, this);\n        textRendererState.emitter.on('loaded', this.onTextLoaded);\n        textRendererState.emitter.on('failed', this.onTextFailed);\n        resolvedTextRenderer.scheduleUpdateState(textRendererState);\n        return {\n            resolvedTextRenderer,\n            textRendererState,\n        };\n    }\n}\n//# sourceMappingURL=CoreTextNode.js.map","export function santizeCustomDataMap(d) {\n    const validTypes = {\n        boolean: true,\n        string: true,\n        number: true,\n        undefined: true,\n    };\n    const keys = Object.keys(d);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!key) {\n            continue;\n        }\n        const value = d[key];\n        const valueType = typeof value;\n        // Typescript doesn't understand the above const valueType ¯\\_(ツ)_/¯\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore-next-line\n        if (valueType === 'string' && value.length > 2048) {\n            console.warn(`Custom Data value for ${key} is too long, it will be truncated to 2048 characters`);\n            // same here, see above comment, this can only be a string at this point\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore-next-line\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n            d[key] = value.substring(0, 2048);\n        }\n        if (!validTypes[valueType]) {\n            console.warn(`Custom Data value for ${key} is not a boolean, string, or number, it will be ignored`);\n            delete d[key];\n        }\n    }\n    return d;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { startLoop, getTimeStamp } from './platform.js';\nimport { WebGlCoreRenderer } from './renderers/webgl/WebGlCoreRenderer.js';\nimport { assertTruthy, setPremultiplyMode } from '../utils.js';\nimport { AnimationManager } from './animations/AnimationManager.js';\nimport { CoreNode } from './CoreNode.js';\nimport { CoreTextureManager } from './CoreTextureManager.js';\nimport { TrFontManager } from './text-rendering/TrFontManager.js';\nimport { CoreShaderManager } from './CoreShaderManager.js';\nimport { SdfTextRenderer } from './text-rendering/renderers/SdfTextRenderer/SdfTextRenderer.js';\nimport { CanvasTextRenderer } from './text-rendering/renderers/CanvasTextRenderer.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { ContextSpy } from './lib/ContextSpy.js';\nimport { TextureMemoryManager, } from './TextureMemoryManager.js';\nimport { CanvasCoreRenderer } from './renderers/canvas/CanvasCoreRenderer.js';\nimport { CoreTextNode } from './CoreTextNode.js';\nimport { santizeCustomDataMap } from '../main-api/utils.js';\nconst bufferMemory = 2e6;\nconst autoStart = true;\nexport class Stage {\n    options;\n    /// Module Instances\n    animationManager;\n    txManager;\n    txMemManager;\n    fontManager;\n    textRenderers;\n    shManager;\n    renderer;\n    root;\n    boundsMargin;\n    defShaderCtr;\n    /**\n     * Renderer Event Bus for the Stage to emit events onto\n     *\n     * @remarks\n     * In reality this is just the RendererMain instance, which is an EventEmitter.\n     * this allows us to directly emit events from the Stage to RendererMain\n     * without having to set up forwarding handlers.\n     */\n    eventBus;\n    /// State\n    deltaTime = 0;\n    lastFrameTime = 0;\n    currentFrameTime = 0;\n    fpsNumFrames = 0;\n    fpsElapsedTime = 0;\n    renderRequested = false;\n    frameEventQueue = [];\n    /// Debug data\n    contextSpy = null;\n    /**\n     * Stage constructor\n     */\n    constructor(options) {\n        this.options = options;\n        const { canvas, clearColor, appWidth, appHeight, boundsMargin, enableContextSpy, numImageWorkers, textureMemory, renderMode, } = options;\n        this.eventBus = options.eventBus;\n        this.txManager = new CoreTextureManager(numImageWorkers);\n        this.txMemManager = new TextureMemoryManager(this, textureMemory);\n        this.shManager = new CoreShaderManager();\n        this.animationManager = new AnimationManager();\n        this.contextSpy = enableContextSpy ? new ContextSpy() : null;\n        let bm = [0, 0, 0, 0];\n        if (boundsMargin) {\n            bm = Array.isArray(boundsMargin)\n                ? boundsMargin\n                : [boundsMargin, boundsMargin, boundsMargin, boundsMargin];\n        }\n        this.boundsMargin = bm;\n        const rendererOptions = {\n            stage: this,\n            canvas,\n            pixelRatio: options.devicePhysicalPixelRatio * options.deviceLogicalPixelRatio,\n            clearColor: clearColor ?? 0xff000000,\n            bufferMemory,\n            txManager: this.txManager,\n            txMemManager: this.txMemManager,\n            shManager: this.shManager,\n            contextSpy: this.contextSpy,\n        };\n        if (renderMode === 'canvas') {\n            this.renderer = new CanvasCoreRenderer(rendererOptions);\n        }\n        else {\n            this.renderer = new WebGlCoreRenderer(rendererOptions);\n        }\n        this.defShaderCtr = this.renderer.getDefShaderCtr();\n        setPremultiplyMode(renderMode);\n        // Must do this after renderer is created\n        this.txManager.renderer = this.renderer;\n        this.textRenderers =\n            renderMode === 'webgl'\n                ? {\n                    canvas: new CanvasTextRenderer(this),\n                    sdf: new SdfTextRenderer(this),\n                }\n                : {\n                    canvas: new CanvasTextRenderer(this),\n                };\n        this.fontManager = new TrFontManager(this.textRenderers);\n        // create root node\n        const rootNode = new CoreNode(this, {\n            x: 0,\n            y: 0,\n            width: appWidth,\n            height: appHeight,\n            alpha: 1,\n            autosize: false,\n            clipping: false,\n            color: 0x00000000,\n            colorTop: 0x00000000,\n            colorBottom: 0x00000000,\n            colorLeft: 0x00000000,\n            colorRight: 0x00000000,\n            colorTl: 0x00000000,\n            colorTr: 0x00000000,\n            colorBl: 0x00000000,\n            colorBr: 0x00000000,\n            zIndex: 0,\n            zIndexLocked: 0,\n            scaleX: 1,\n            scaleY: 1,\n            mountX: 0,\n            mountY: 0,\n            mount: 0,\n            pivot: 0.5,\n            pivotX: 0.5,\n            pivotY: 0.5,\n            rotation: 0,\n            parent: null,\n            texture: null,\n            textureOptions: {},\n            shader: this.defShaderCtr,\n            rtt: false,\n            src: null,\n            scale: 1,\n        });\n        this.root = rootNode;\n        // execute platform start loop\n        if (autoStart) {\n            startLoop(this);\n        }\n    }\n    updateFrameTime() {\n        const newFrameTime = getTimeStamp();\n        this.lastFrameTime = this.currentFrameTime;\n        this.currentFrameTime = newFrameTime;\n        this.deltaTime = !this.lastFrameTime\n            ? 100 / 6\n            : newFrameTime - this.lastFrameTime;\n        this.txManager.frameTime = newFrameTime;\n        this.txMemManager.frameTime = newFrameTime;\n        // This event is emitted at the beginning of the frame (before any updates\n        // or rendering), so no need to to use `stage.queueFrameEvent` here.\n        this.eventBus.emit('frameTick', {\n            time: this.currentFrameTime,\n            delta: this.deltaTime,\n        });\n    }\n    /**\n     * Update animations\n     */\n    updateAnimations() {\n        const { animationManager } = this;\n        if (!this.root) {\n            return;\n        }\n        // step animation\n        animationManager.update(this.deltaTime);\n    }\n    /**\n     * Check if the scene has updates\n     */\n    hasSceneUpdates() {\n        return !!this.root.updateType || this.renderRequested;\n    }\n    /**\n     * Start a new frame draw\n     */\n    drawFrame() {\n        const { renderer, renderRequested } = this;\n        assertTruthy(renderer);\n        // Update tree if needed\n        if (this.root.updateType !== 0) {\n            this.root.update(this.deltaTime, this.root.clippingRect);\n        }\n        // Reset render operations and clear the canvas\n        renderer.reset();\n        // Check if we need to cleanup textures\n        if (this.txMemManager.criticalCleanupRequested) {\n            this.txMemManager.cleanup();\n        }\n        // If we have RTT nodes draw them first\n        // So we can use them as textures in the main scene\n        if (renderer.rttNodes.length > 0) {\n            renderer.renderRTTNodes();\n        }\n        // Fill quads buffer\n        this.addQuads(this.root);\n        // Perform render pass\n        renderer?.render();\n        this.calculateFps();\n        // Reset renderRequested flag if it was set\n        if (renderRequested) {\n            this.renderRequested = false;\n        }\n    }\n    /**\n     * Queue an event to be emitted after the current/next frame is rendered\n     *\n     * @remarks\n     * When we are operating in the context of the render loop, we may want to\n     * emit events that are related to the current frame. However, we generally do\n     * NOT want to emit events directly in the middle of the render loop, since\n     * this could enable event handlers to modify the scene graph and cause\n     * unexpected behavior. Instead, we queue up events to be emitted and then\n     * flush the queue after the frame has been rendered.\n     *\n     * @param name\n     * @param data\n     */\n    queueFrameEvent(name, data) {\n        this.frameEventQueue.push([name, data]);\n    }\n    /**\n     * Emit all queued frame events\n     *\n     * @remarks\n     * This method should be called after the frame has been rendered to emit\n     * all events that were queued during the frame.\n     *\n     * See {@link queueFrameEvent} for more information.\n     */\n    flushFrameEvents() {\n        for (const [name, data] of this.frameEventQueue) {\n            this.eventBus.emit(name, data);\n        }\n        this.frameEventQueue = [];\n    }\n    calculateFps() {\n        // If there's an FPS update interval, emit the FPS update event\n        // when the specified interval has elapsed.\n        const { fpsUpdateInterval } = this.options;\n        if (fpsUpdateInterval) {\n            this.fpsNumFrames++;\n            this.fpsElapsedTime += this.deltaTime;\n            if (this.fpsElapsedTime >= fpsUpdateInterval) {\n                const fps = Math.round((this.fpsNumFrames * 1000) / this.fpsElapsedTime);\n                this.fpsNumFrames = 0;\n                this.fpsElapsedTime = 0;\n                this.queueFrameEvent('fpsUpdate', {\n                    fps,\n                    contextSpyData: this.contextSpy?.getData() ?? null,\n                });\n                this.contextSpy?.reset();\n            }\n        }\n    }\n    addQuads(node) {\n        assertTruthy(this.renderer && node.globalTransform);\n        if (node.isRenderable) {\n            node.renderQuads(this.renderer);\n        }\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            if (!child) {\n                continue;\n            }\n            if (child?.worldAlpha === 0) {\n                continue;\n            }\n            this.addQuads(child);\n        }\n    }\n    /**\n     * Request a render pass without forcing an update\n     */\n    requestRender() {\n        this.renderRequested = true;\n    }\n    /**\n     * Given a font name, and possible renderer override, return the best compatible text renderer.\n     *\n     * @remarks\n     * Will always return at least a canvas renderer if no other suitable renderer can be resolved.\n     *\n     * @param fontFamily\n     * @param textRendererOverride\n     * @returns\n     */\n    resolveTextRenderer(trProps, textRendererOverride = null) {\n        let rendererId = textRendererOverride;\n        let overrideFallback = false;\n        // Check if the override is valid (if one is provided)\n        if (rendererId) {\n            const possibleRenderer = this.textRenderers[rendererId];\n            if (!possibleRenderer) {\n                console.warn(`Text renderer override '${rendererId}' not found.`);\n                rendererId = null;\n                overrideFallback = true;\n            }\n            else if (!possibleRenderer.canRenderFont(trProps)) {\n                console.warn(`Cannot use override text renderer '${rendererId}' for font`, trProps);\n                rendererId = null;\n                overrideFallback = true;\n            }\n        }\n        if (!rendererId) {\n            // Iterate through the text renderers and find the first one that can render the font\n            for (const [trId, tr] of Object.entries(this.textRenderers)) {\n                if (trId === 'canvas') {\n                    // Canvas is always a fallback\n                    continue;\n                }\n                if (tr.canRenderFont(trProps)) {\n                    rendererId = trId;\n                    break;\n                }\n            }\n            if (!rendererId) {\n                // If no renderer can be found, use the canvas renderer\n                rendererId = 'canvas';\n            }\n        }\n        if (overrideFallback) {\n            console.warn(`Falling back to text renderer ${String(rendererId)}`);\n        }\n        // By now we are guaranteed to have a valid rendererId (at least Canvas);\n        const resolvedTextRenderer = this.textRenderers[rendererId];\n        assertTruthy(resolvedTextRenderer, 'resolvedTextRenderer undefined');\n        // Need to explicitly cast to TextRenderer because TS doesn't like\n        // the covariant state argument in the setter method map\n        return resolvedTextRenderer;\n    }\n    /**\n     * Create a shader controller instance\n     *\n     * @param type\n     * @param props\n     * @returns\n     */\n    createShaderCtr(type, props) {\n        return this.shManager.loadShader(type, props);\n    }\n    createNode(props) {\n        const resolvedProps = this.resolveNodeDefaults(props);\n        return new CoreNode(this, resolvedProps);\n    }\n    createTextNode(props) {\n        const fontSize = props.fontSize ?? 16;\n        const resolvedProps = {\n            ...this.resolveNodeDefaults(props),\n            text: props.text ?? '',\n            textRendererOverride: props.textRendererOverride ?? null,\n            fontSize,\n            fontFamily: props.fontFamily ?? 'sans-serif',\n            fontStyle: props.fontStyle ?? 'normal',\n            fontWeight: props.fontWeight ?? 'normal',\n            fontStretch: props.fontStretch ?? 'normal',\n            textAlign: props.textAlign ?? 'left',\n            contain: props.contain ?? 'none',\n            scrollable: props.scrollable ?? false,\n            scrollY: props.scrollY ?? 0,\n            offsetY: props.offsetY ?? 0,\n            letterSpacing: props.letterSpacing ?? 0,\n            lineHeight: props.lineHeight,\n            maxLines: props.maxLines ?? 0,\n            textBaseline: props.textBaseline ?? 'alphabetic',\n            verticalAlign: props.verticalAlign ?? 'middle',\n            overflowSuffix: props.overflowSuffix ?? '...',\n            debug: props.debug ?? {},\n            shaderProps: null,\n        };\n        return new CoreTextNode(this, resolvedProps);\n    }\n    /**\n     * Resolves the default property values for a Node\n     *\n     * @remarks\n     * This method is used internally by the RendererMain to resolve the default\n     * property values for a Node. It is exposed publicly so that it can be used\n     * by Core Driver implementations.\n     *\n     * @param props\n     * @returns\n     */\n    resolveNodeDefaults(props) {\n        const color = props.color ?? 0xffffffff;\n        const colorTl = props.colorTl ?? props.colorTop ?? props.colorLeft ?? color;\n        const colorTr = props.colorTr ?? props.colorTop ?? props.colorRight ?? color;\n        const colorBl = props.colorBl ?? props.colorBottom ?? props.colorLeft ?? color;\n        const colorBr = props.colorBr ?? props.colorBottom ?? props.colorRight ?? color;\n        const data = santizeCustomDataMap(props.data ?? {});\n        return {\n            x: props.x ?? 0,\n            y: props.y ?? 0,\n            width: props.width ?? 0,\n            height: props.height ?? 0,\n            alpha: props.alpha ?? 1,\n            autosize: props.autosize ?? false,\n            clipping: props.clipping ?? false,\n            color,\n            colorTop: props.colorTop ?? color,\n            colorBottom: props.colorBottom ?? color,\n            colorLeft: props.colorLeft ?? color,\n            colorRight: props.colorRight ?? color,\n            colorBl,\n            colorBr,\n            colorTl,\n            colorTr,\n            zIndex: props.zIndex ?? 0,\n            zIndexLocked: props.zIndexLocked ?? 0,\n            parent: props.parent ?? null,\n            texture: props.texture ?? null,\n            textureOptions: props.textureOptions ?? {},\n            shader: props.shader ?? this.defShaderCtr,\n            // Since setting the `src` will trigger a texture load, we need to set it after\n            // we set the texture. Otherwise, problems happen.\n            src: props.src ?? null,\n            scale: props.scale ?? null,\n            scaleX: props.scaleX ?? props.scale ?? 1,\n            scaleY: props.scaleY ?? props.scale ?? 1,\n            mount: props.mount ?? 0,\n            mountX: props.mountX ?? props.mount ?? 0,\n            mountY: props.mountY ?? props.mount ?? 0,\n            pivot: props.pivot ?? 0.5,\n            pivotX: props.pivotX ?? props.pivot ?? 0.5,\n            pivotY: props.pivotY ?? props.pivot ?? 0.5,\n            rotation: props.rotation ?? 0,\n            rtt: props.rtt ?? false,\n            data: data,\n        };\n    }\n}\n//# sourceMappingURL=Stage.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { Inspector } from './Inspector.js';\nimport { assertTruthy, isProductionEnvironment } from '../utils.js';\nimport { Stage } from '../core/Stage.js';\nimport { CoreNode } from '../core/CoreNode.js';\nimport {} from '../core/CoreTextNode.js';\n/**\n * The Renderer Main API\n *\n * @remarks\n * This is the primary class used to configure and operate the Renderer.\n *\n * It is used to create and destroy Nodes, as well as Texture and Shader\n * references.\n *\n * Example:\n * ```ts\n * import { RendererMain, MainCoreDriver } from '@lightningjs/renderer';\n *\n * // Initialize the Renderer\n * const renderer = new RendererMain(\n *   {\n *     appWidth: 1920,\n *     appHeight: 1080\n *   },\n *   'app',\n *   new MainCoreDriver(),\n * );\n * ```\n *\n * ## Events\n * - `fpsUpdate`\n *   - Emitted every `fpsUpdateInterval` milliseconds with the current FPS\n * - `frameTick`\n *   - Emitted every frame tick\n * - `idle`\n *   - Emitted when the renderer is idle (no changes to the scene\n *     graph/animations running)\n * - `criticalCleanup`\n *  - Emitted when the Texture Memory Manager Cleanup process is triggered\n *  - Payload: { memUsed: number, criticalThreshold: number }\n *    - `memUsed` - The amount of memory (in bytes) used by textures before the\n *       cleanup process\n *    - `criticalThreshold` - The critical threshold (in bytes)\n * - `criticalCleanupFailed`\n *   - Emitted when the Texture Memory Manager Cleanup process is unable to free\n *     up enough texture memory to reach below the critical threshold.\n *     This can happen when there is not enough non-renderable textures to\n *     free up.\n *   - Payload (object with keys):\n *     - `memUsed` - The amount of memory (in bytes) used by textures after\n *       the cleanup process\n *     - `criticalThreshold` - The critical threshold (in bytes)\n */\nexport class RendererMain extends EventEmitter {\n    root;\n    canvas;\n    settings;\n    stage;\n    inspector = null;\n    /**\n     * Constructs a new Renderer instance\n     *\n     * @param settings Renderer settings\n     * @param target Element ID or HTMLElement to insert the canvas into\n     * @param driver Core Driver to use\n     */\n    constructor(settings, target) {\n        super();\n        const resolvedTxSettings = {\n            criticalThreshold: settings.textureMemory?.criticalThreshold || 124e6,\n            targetThresholdLevel: settings.textureMemory?.targetThresholdLevel || 0.5,\n            cleanupInterval: settings.textureMemory?.cleanupInterval || 30000,\n            debugLogging: settings.textureMemory?.debugLogging || false,\n        };\n        const resolvedSettings = {\n            appWidth: settings.appWidth || 1920,\n            appHeight: settings.appHeight || 1080,\n            textureMemory: resolvedTxSettings,\n            boundsMargin: settings.boundsMargin || 0,\n            deviceLogicalPixelRatio: settings.deviceLogicalPixelRatio || 1,\n            devicePhysicalPixelRatio: settings.devicePhysicalPixelRatio || window.devicePixelRatio,\n            clearColor: settings.clearColor ?? 0x00000000,\n            fpsUpdateInterval: settings.fpsUpdateInterval || 0,\n            numImageWorkers: settings.numImageWorkers !== undefined ? settings.numImageWorkers : 2,\n            enableContextSpy: settings.enableContextSpy ?? false,\n            enableInspector: settings.enableInspector ?? false,\n            renderMode: settings.renderMode ?? 'webgl',\n            quadBufferSize: settings.quadBufferSize ?? 4 * 1024 * 1024,\n        };\n        this.settings = resolvedSettings;\n        const { appWidth, appHeight, deviceLogicalPixelRatio, devicePhysicalPixelRatio, enableInspector, } = resolvedSettings;\n        const deviceLogicalWidth = appWidth * deviceLogicalPixelRatio;\n        const deviceLogicalHeight = appHeight * deviceLogicalPixelRatio;\n        const canvas = document.createElement('canvas');\n        this.canvas = canvas;\n        canvas.width = deviceLogicalWidth * devicePhysicalPixelRatio;\n        canvas.height = deviceLogicalHeight * devicePhysicalPixelRatio;\n        canvas.style.width = `${deviceLogicalWidth}px`;\n        canvas.style.height = `${deviceLogicalHeight}px`;\n        // Initialize the stage\n        this.stage = new Stage({\n            appWidth: this.settings.appWidth,\n            appHeight: this.settings.appHeight,\n            boundsMargin: this.settings.boundsMargin,\n            clearColor: this.settings.clearColor,\n            canvas: this.canvas,\n            deviceLogicalPixelRatio: this.settings.deviceLogicalPixelRatio,\n            devicePhysicalPixelRatio: this.settings.devicePhysicalPixelRatio,\n            enableContextSpy: this.settings.enableContextSpy,\n            fpsUpdateInterval: this.settings.fpsUpdateInterval,\n            numImageWorkers: this.settings.numImageWorkers,\n            renderMode: this.settings.renderMode,\n            textureMemory: resolvedTxSettings,\n            eventBus: this,\n            quadBufferSize: this.settings.quadBufferSize,\n        });\n        // Extract the root node\n        this.root = this.stage.root;\n        // Get the target element and attach the canvas to it\n        let targetEl;\n        if (typeof target === 'string') {\n            targetEl = document.getElementById(target);\n        }\n        else {\n            targetEl = target;\n        }\n        if (!targetEl) {\n            throw new Error('Could not find target element');\n        }\n        targetEl.appendChild(canvas);\n        // Initialize inspector (if enabled)\n        if (enableInspector && !isProductionEnvironment()) {\n            this.inspector = new Inspector(canvas, resolvedSettings);\n        }\n    }\n    /**\n     * Create a new scene graph node\n     *\n     * @remarks\n     * A node is the main graphical building block of the Renderer scene graph. It\n     * can be a container for other nodes, or it can be a leaf node that renders a\n     * solid color, gradient, image, or specific texture, using a specific shader.\n     *\n     * To create a text node, see {@link createTextNode}.\n     *\n     * See {@link CoreNode} for more details.\n     *\n     * @param props\n     * @returns\n     */\n    createNode(props) {\n        assertTruthy(this.stage, 'Stage is not initialized');\n        const node = this.stage.createNode(props);\n        if (this.inspector) {\n            return this.inspector.createNode(node);\n        }\n        // FIXME onDestroy event? node.once('beforeDestroy'\n        // FIXME onCreate event?\n        return node;\n    }\n    /**\n     * Create a new scene graph text node\n     *\n     * @remarks\n     * A text node is the second graphical building block of the Renderer scene\n     * graph. It renders text using a specific text renderer that is automatically\n     * chosen based on the font requested and what type of fonts are installed\n     * into an app.\n     *\n     * See {@link ITextNode} for more details.\n     *\n     * @param props\n     * @returns\n     */\n    createTextNode(props) {\n        const textNode = this.stage.createTextNode(props);\n        if (this.inspector) {\n            return this.inspector.createTextNode(textNode);\n        }\n        return textNode;\n    }\n    /**\n     * Destroy a node\n     *\n     * @remarks\n     * This method destroys a node\n     *\n     * @param node\n     * @returns\n     */\n    destroyNode(node) {\n        if (this.inspector) {\n            this.inspector.destroyNode(node.id);\n        }\n        return node.destroy();\n    }\n    /**\n     * Create a new texture reference\n     *\n     * @remarks\n     * This method creates a new reference to a texture. The texture is not\n     * loaded until it is used on a node.\n     *\n     * It can be assigned to a node's `texture` property, or it can be used\n     * when creating a SubTexture.\n     *\n     * @param textureType\n     * @param props\n     * @param options\n     * @returns\n     */\n    createTexture(textureType, props) {\n        return this.stage.txManager.loadTexture(textureType, props);\n    }\n    /**\n     * Create a new shader controller for a shader type\n     *\n     * @remarks\n     * This method creates a new Shader Controller for a specific shader type.\n     *\n     * If the shader has not been loaded yet, it will be loaded. Otherwise, the\n     * existing shader will be reused.\n     *\n     * It can be assigned to a Node's `shader` property.\n     *\n     * @param shaderType\n     * @param props\n     * @returns\n     */\n    createShader(shaderType, props) {\n        return this.stage.shManager.loadShader(shaderType, props);\n    }\n    /**\n     * Create a new Dynamic Shader controller\n     *\n     * @remarks\n     * A Dynamic Shader is a shader that can be composed of an array of mulitple\n     * effects. Each effect can be animated or changed after creation (provided\n     * the effect is given a name).\n     *\n     * Example:\n     * ```ts\n     * renderer.createNode({\n     *   shader: renderer.createDynamicShader([\n     *     renderer.createEffect('radius', {\n     *       radius: 0\n     *     }, 'effect1'),\n     *     renderer.createEffect('border', {\n     *       color: 0xff00ffff,\n     *       width: 10,\n     *     }, 'effect2'),\n     *   ]),\n     * });\n     * ```\n     *\n     * @param effects\n     * @returns\n     */\n    createDynamicShader(effects) {\n        return this.stage.shManager.loadDynamicShader({\n            effects: effects,\n        });\n    }\n    /**\n     * Create an effect to be used in a Dynamic Shader\n     *\n     * @remark\n     * The {name} parameter is optional but required if you want to animate the effect\n     * or change the effect's properties after creation.\n     *\n     * See {@link createDynamicShader} for an example.\n     *\n     * @param type\n     * @param props\n     * @param name\n     * @returns\n     */\n    createEffect(type, props, name) {\n        return {\n            name,\n            type,\n            props,\n        };\n    }\n    /**\n     * Get a Node by its ID\n     *\n     * @param id\n     * @returns\n     */\n    getNodeById(id) {\n        const root = this.stage?.root;\n        if (!root) {\n            return null;\n        }\n        const findNode = (node) => {\n            if (node.id === id) {\n                return node;\n            }\n            for (const child of node.children) {\n                const found = findNode(child);\n                if (found) {\n                    return found;\n                }\n            }\n            return null;\n        };\n        return findNode(root);\n    }\n    toggleFreeze() {\n        throw new Error('Not implemented');\n    }\n    advanceFrame() {\n        throw new Error('Not implemented');\n    }\n    getBufferInfo() {\n        return this.stage.renderer.getBufferInfo();\n    }\n    /**\n     * Re-render the current frame without advancing any running animations.\n     *\n     * @remarks\n     * Any state changes will be reflected in the re-rendered frame. Useful for\n     * debugging.\n     *\n     * May not do anything if the render loop is running on a separate worker.\n     */\n    rerender() {\n        throw new Error('Not implemented');\n    }\n}\n//# sourceMappingURL=Renderer.js.map","import { RendererMain } from '@lightningjs/renderer';\nexport let renderer;\nexport let createShader;\nexport const getRenderer = () => renderer;\nexport function startLightningRenderer(options = {}, rootId = 'app') {\n    renderer = new RendererMain(options, rootId);\n    createShader = renderer.createShader.bind(renderer);\n    return renderer;\n}\n//# sourceMappingURL=lightningInit.js.map","function isDevEnv() {\n    return !!(import.meta.env && import.meta.env.DEV);\n}\nexport const isDev = isDevEnv() || false;\nexport const Config = {\n    debug: false,\n    animationsEnabled: true,\n    animationSettings: {\n        duration: 250,\n        easing: 'ease-in-out',\n    },\n    fontSettings: {\n        fontFamily: 'Ubuntu',\n        fontSize: 100,\n    },\n    setActiveElement: () => { },\n};\n//# sourceMappingURL=config.js.map","import { Config, isDev } from './config.js';\nimport { ElementNode } from './elementNode.js';\nfunction hasDebug(node) {\n    return isObject(node) && node.debug;\n}\nexport function log(msg, node, ...args) {\n    if (isDev) {\n        if (Config.debug || hasDebug(node) || hasDebug(args[0])) {\n            console.log(msg, node, ...args);\n        }\n    }\n}\nexport const isFunc = (obj) => obj instanceof Function;\nexport function isObject(item) {\n    return typeof item === 'object';\n}\nexport function isArray(item) {\n    return Array.isArray(item);\n}\nexport function isString(item) {\n    return typeof item === 'string';\n}\nexport function isNumber(item) {\n    return typeof item === 'number';\n}\nexport function isInteger(item) {\n    return Number.isInteger(item);\n}\nexport function isINode(node) {\n    return 'destroy' in node && typeof node.destroy === 'function';\n}\nexport function isElementNode(node) {\n    return node instanceof ElementNode;\n}\nexport function keyExists(obj, keys) {\n    for (const key of keys) {\n        if (key in obj) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function flattenStyles(obj, result = {}) {\n    if (isArray(obj)) {\n        obj.forEach((item) => {\n            flattenStyles(item, result);\n        });\n    }\n    else if (obj) {\n        // handle the case where the object is not an array\n        for (const key in obj) {\n            // be careful of 0 values\n            if (result[key] === undefined) {\n                result[key] = obj[key];\n            }\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=utils.js.map","import { isArray, isString } from './utils.js';\nexport default class States extends Array {\n    onChange;\n    constructor(callback, initialState = {}) {\n        if (isArray(initialState)) {\n            super(...initialState);\n        }\n        else if (isString(initialState)) {\n            super(initialState);\n        }\n        else {\n            super(...Object.entries(initialState)\n                .filter(([_key, value]) => value)\n                .map(([key]) => key));\n        }\n        this.onChange = callback;\n        return this;\n    }\n    has(state) {\n        return this.indexOf(state) >= 0;\n    }\n    is(state) {\n        return this.indexOf(state) >= 0;\n    }\n    add(state) {\n        if (this.has(state)) {\n            return;\n        }\n        this.push(state);\n        this.onChange();\n    }\n    toggle(state, force) {\n        if (force === true) {\n            this.add(state);\n        }\n        else if (force === false) {\n            this.remove(state);\n        }\n        else {\n            if (this.has(state)) {\n                this.remove(state);\n            }\n            else {\n                this.add(state);\n            }\n        }\n    }\n    merge(newStates) {\n        if (isArray(newStates)) {\n            this.length = 0; // Clear the current states\n            this.push(...newStates);\n        }\n        else if (isString(newStates)) {\n            this.length = 0; // Clear the current states\n            this.push(newStates);\n        }\n        else {\n            for (const state in newStates) {\n                this.toggle(state, newStates[state]);\n            }\n        }\n        return this;\n    }\n    remove(state) {\n        const stateIndexToRemove = this.indexOf(state);\n        if (stateIndexToRemove >= 0) {\n            this.splice(stateIndexToRemove, 1);\n            this.onChange();\n        }\n    }\n}\n//# sourceMappingURL=states.js.map","export const NodeType = {\n    Element: 'element',\n    TextNode: 'textNode',\n    Text: 'text',\n};\n//# sourceMappingURL=nodeTypes.js.map","import { NodeType } from './nodeTypes.js';\nexport default function (node) {\n    const children = [];\n    let hasOrder = false;\n    let growSize = 0;\n    for (let i = 0; i < node.children.length; i++) {\n        const c = node.children[i];\n        // Filter empty text nodes which are place holders for <Show> and elements missing dimensions\n        if (c._type === NodeType.Text) {\n            continue;\n        }\n        // Skip layout for non flex items\n        if (c.flexItem === false) {\n            continue;\n        }\n        // text node hasnt loaded yet - skip layout\n        if (c._type === NodeType.TextNode && c.text && !(c.width || c.height)) {\n            return false;\n        }\n        if (c.flexOrder !== undefined) {\n            hasOrder = true;\n        }\n        if (c.flexGrow !== undefined) {\n            growSize += c.flexGrow;\n        }\n        children.push(c);\n    }\n    if (hasOrder) {\n        children.sort((a, b) => (a.flexOrder || 0) - (b.flexOrder || 0));\n    }\n    const numChildren = children.length;\n    const direction = node.flexDirection || 'row';\n    const isRow = direction === 'row';\n    const dimension = isRow ? 'width' : 'height';\n    const crossDimension = isRow ? 'height' : 'width';\n    const marginOne = isRow ? 'marginLeft' : 'marginTop';\n    const marginTwo = isRow ? 'marginRight' : 'marginBottom';\n    const prop = isRow ? 'x' : 'y';\n    const crossProp = isRow ? 'y' : 'x';\n    const containerSize = node[dimension] || 0;\n    const containerCrossSize = node[crossDimension] || 0;\n    const gap = node.gap || 0;\n    const justify = node.justifyContent || 'flexStart';\n    const align = node.alignItems;\n    if (growSize) {\n        const flexBasis = children.reduce((prev, c) => prev +\n            (c.flexGrow ? 0 : c[dimension] || 0) +\n            (c[marginOne] || 0) +\n            (c[marginTwo] || 0), 0);\n        const growFactor = (containerSize - flexBasis - gap * (numChildren - 1)) / growSize;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            if (c.flexGrow !== undefined && c.flexGrow > 0) {\n                c[dimension] = c.flexGrow * growFactor;\n            }\n        }\n    }\n    let itemSize = 0;\n    if (['center', 'spaceBetween', 'spaceEvenly'].includes(justify)) {\n        itemSize = children.reduce((prev, c) => prev + (c[dimension] || 0) + (c[marginOne] || 0) + (c[marginTwo] || 0), 0);\n    }\n    // Only align children if container has a cross size\n    const crossAlignChild = containerCrossSize && align\n        ? (c) => {\n            if (align === 'flexStart') {\n                c[crossProp] = 0;\n            }\n            else if (align === 'center') {\n                c[crossProp] = (containerCrossSize - (c[crossDimension] || 0)) / 2;\n            }\n            else if (align === 'flexEnd') {\n                c[crossProp] = containerCrossSize - (c[crossDimension] || 0);\n            }\n        }\n        : (c) => c;\n    if (justify === 'flexStart') {\n        let start = 0;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n        // Update container size\n        if (node.flexBoundary !== 'fixed') {\n            const calculatedSize = start - gap;\n            if (calculatedSize !== node[dimension]) {\n                node[dimension] = calculatedSize;\n                return true;\n            }\n        }\n    }\n    else if (justify === 'flexEnd') {\n        let start = containerSize;\n        for (let i = numChildren - 1; i >= 0; i--) {\n            const c = children[i];\n            c[prop] = start - (c[dimension] || 0) - (c[marginTwo] || 0);\n            start -=\n                (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n        // Update container size\n        if (node.flexBoundary !== 'fixed') {\n            const calculatedSize = start - gap;\n            if (calculatedSize !== node[dimension]) {\n                node[dimension] = calculatedSize;\n                return true;\n            }\n        }\n    }\n    else if (justify === 'center') {\n        let start = (containerSize - (itemSize + gap * (numChildren - 1))) / 2;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    else if (justify === 'spaceBetween') {\n        const toPad = (containerSize - itemSize) / (numChildren - 1);\n        let start = 0;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + toPad + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    else if (justify === 'spaceEvenly') {\n        const toPad = (containerSize - itemSize) / (numChildren + 1);\n        let start = toPad;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + toPad + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    // Container was not updated\n    return false;\n}\n//# sourceMappingURL=flex.js.map","import { Config } from './config.js';\nconst keyMapEntries = {\n    ArrowLeft: 'Left',\n    ArrowRight: 'Right',\n    ArrowUp: 'Up',\n    ArrowDown: 'Down',\n    Enter: 'Enter',\n    l: 'Last',\n    ' ': 'Space',\n    Backspace: 'Back',\n    Escape: 'Escape',\n};\nconst keyHoldMapEntries = {\n    Enter: 'EnterHold',\n};\nconst flattenKeyMap = (keyMap, targetMap) => {\n    for (const [key, value] of Object.entries(keyMap)) {\n        if (value == null)\n            continue;\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                targetMap[v] = key;\n            });\n        }\n        else {\n            targetMap[value] = key;\n        }\n    }\n};\nlet activeElement;\nexport const setActiveElement = (elm) => {\n    updateFocusPath(elm, activeElement);\n    activeElement = elm;\n    // Callback for libraries to use signals / refs\n    Config.setActiveElement(elm);\n};\nlet focusPath = [];\nconst updateFocusPath = (currentFocusedElm, prevFocusedElm) => {\n    let current = currentFocusedElm;\n    const fp = [];\n    while (current) {\n        if (!current.states.has('focus') || current === currentFocusedElm) {\n            current.states.add('focus');\n            current.onFocus?.call(current, currentFocusedElm, prevFocusedElm);\n            current.onFocusChanged?.call(current, true, currentFocusedElm, prevFocusedElm);\n        }\n        fp.push(current);\n        current = current.parent;\n    }\n    focusPath.forEach((elm) => {\n        if (!fp.includes(elm)) {\n            elm.states.remove('focus');\n            elm.onBlur?.call(elm, currentFocusedElm, prevFocusedElm);\n            elm.onFocusChanged?.call(elm, false, currentFocusedElm, prevFocusedElm);\n        }\n    });\n    focusPath = fp;\n    return fp;\n};\nconst propagateKeyDown = (e, mappedEvent, isHold) => {\n    let finalFocusElm = undefined;\n    for (const elm of focusPath) {\n        finalFocusElm = finalFocusElm || elm;\n        if (mappedEvent) {\n            const onKeyHandler = elm[`on${mappedEvent}`];\n            if (onKeyHandler?.call(elm, e, elm, finalFocusElm) === true) {\n                break;\n            }\n        }\n        else {\n            console.log(`Unhandled key event: ${e.key || e.keyCode}`);\n        }\n        const fallbackFunction = isHold ? elm.onKeyHold : elm.onKeyPress;\n        if (fallbackFunction?.call(elm, e, mappedEvent, elm, finalFocusElm) === true) {\n            break;\n        }\n    }\n    return false;\n};\nconst DEFAULT_KEY_HOLD_THRESHOLD = 150; // ms\nconst keyHoldTimeouts = {};\nconst keyHoldCallback = (e, mappedKeyHoldEvent) => {\n    delete keyHoldTimeouts[e.key || e.keyCode];\n    propagateKeyDown(e, mappedKeyHoldEvent, true);\n};\nconst handleKeyEvents = (delay, keypress, keyup) => {\n    if (keypress) {\n        const key = keypress.key || keypress.keyCode;\n        const mappedKeyHoldEvent = keyHoldMapEntries[key];\n        const mappedKeyEvent = keyMapEntries[key];\n        if (!mappedKeyHoldEvent) {\n            propagateKeyDown(keypress, mappedKeyEvent, false);\n        }\n        else {\n            if (keyHoldTimeouts[key]) {\n                clearTimeout(keyHoldTimeouts[key]);\n            }\n            keyHoldTimeouts[key] = window.setTimeout(() => keyHoldCallback(keypress, mappedKeyHoldEvent), delay);\n        }\n    }\n    if (keyup) {\n        const key = keyup.key || keyup.keyCode;\n        const mappedKeyEvent = keyMapEntries[key];\n        if (keyHoldTimeouts[key]) {\n            clearTimeout(keyHoldTimeouts[key]);\n            delete keyHoldTimeouts[key];\n            propagateKeyDown(keyup, mappedKeyEvent, false);\n        }\n    }\n};\nexport const useFocusManager = ({ userKeyMap, keyHoldOptions, ownerContext = (cb) => {\n    cb();\n}, } = {}) => {\n    if (userKeyMap) {\n        flattenKeyMap(userKeyMap, keyMapEntries);\n    }\n    if (keyHoldOptions?.userKeyHoldMap) {\n        flattenKeyMap(keyHoldOptions.userKeyHoldMap, keyHoldMapEntries);\n    }\n    const delay = keyHoldOptions?.holdThreshold || DEFAULT_KEY_HOLD_THRESHOLD;\n    const runKeyEvent = handleKeyEvents.bind(null, delay);\n    // Owner context is for frameworks that need effects\n    const keyPressHandler = (event) => ownerContext(() => {\n        runKeyEvent(event, undefined);\n    });\n    const keyUpHandler = (event) => ownerContext(() => {\n        runKeyEvent(undefined, event);\n    });\n    document.addEventListener('keyup', keyUpHandler);\n    document.addEventListener('keydown', keyPressHandler);\n    return {\n        cleanup: () => {\n            document.removeEventListener('keydown', keyPressHandler);\n            document.removeEventListener('keyup', keyUpHandler);\n            for (const [_, timeout] of Object.entries(keyHoldTimeouts)) {\n                if (timeout)\n                    clearTimeout(timeout);\n            }\n        },\n        focusPath: () => focusPath,\n    };\n};\n//# sourceMappingURL=focusManager.js.map","import { renderer, createShader } from './lightningInit.js';\nimport States from './states.js';\nimport calculateFlex from './flex.js';\nimport { log, isArray, isNumber, isFunc, keyExists, flattenStyles, isINode, isElementNode, } from './utils.js';\nimport { Config } from './config.js';\nimport { assertTruthy } from '@lightningjs/renderer/utils';\nimport { NodeType } from './nodeTypes.js';\nimport { setActiveElement } from './focusManager.js';\nconst layoutQueue = new Set();\nlet queueLayout = true;\nfunction convertEffectsToShader(styleEffects) {\n    const effects = [];\n    let index = 0;\n    for (const [type, props] of Object.entries(styleEffects)) {\n        effects.push({ name: `effect${index}`, type, props });\n        index++;\n    }\n    return createShader('DynamicShader', { effects });\n}\nfunction borderAccessor(direction = '') {\n    return {\n        set(value) {\n            // Format: width || { width, color }\n            if (isNumber(value)) {\n                value = { width: value, color: 0x000000ff };\n            }\n            this.effects = this.effects\n                ? {\n                    ...(this.effects || {}),\n                    ...{ [`border${direction}`]: value },\n                }\n                : { [`border${direction}`]: value };\n        },\n        get() {\n            return this.effects?.[`border${direction}`];\n        },\n    };\n}\nconst LightningRendererNumberProps = [\n    'alpha',\n    'color',\n    'colorTop',\n    'colorRight',\n    'colorLeft',\n    'colorBottom',\n    'colorTl',\n    'colorTr',\n    'colorBl',\n    'colorBr',\n    'height',\n    'fontSize',\n    'lineHeight',\n    'mount',\n    'mountX',\n    'mountY',\n    'pivot',\n    'pivotX',\n    'pivotY',\n    'rotation',\n    'scale',\n    'scaleX',\n    'scaleY',\n    'width',\n    'worldX',\n    'worldY',\n    'x',\n    'y',\n    'zIndex',\n    'zIndexLocked',\n];\nconst LightningRendererNonAnimatingProps = [\n    'absX',\n    'absY',\n    'autosize',\n    'clipping',\n    'contain',\n    'data',\n    'fontFamily',\n    'fontStretch',\n    'fontStyle',\n    'fontWeight',\n    'letterSpacing',\n    'maxLines',\n    'offsetY',\n    'overflowSuffix',\n    'rtt',\n    'scrollable',\n    'scrollY',\n    'src',\n    'text',\n    'textAlign',\n    'textBaseline',\n    'textOverflow',\n    'texture',\n    'textureOptions',\n    'verticalAlign',\n    'wordWrap',\n];\nexport class ElementNode extends Object {\n    constructor(name) {\n        super();\n        this._type = name === 'text' ? NodeType.TextNode : NodeType.Element;\n        this.rendered = false;\n        this.lng = {};\n        this.children = [];\n    }\n    get effects() {\n        return this._effects;\n    }\n    set effects(v) {\n        this._effects = v;\n        if (this.rendered) {\n            this.shader = convertEffectsToShader(v);\n        }\n    }\n    get parent() {\n        return this._parent;\n    }\n    set parent(p) {\n        this._parent = p;\n        if (this.rendered) {\n            this.lng.parent = p?.lng ?? null;\n        }\n    }\n    insertChild(node, beforeNode) {\n        node.parent = this;\n        if (beforeNode) {\n            // SolidJS can move nodes around in the children array.\n            // We need to insert following DOM insertBefore which moves elements.\n            this.removeChild(node);\n            const index = this.children.indexOf(beforeNode);\n            if (index >= 0) {\n                this.children.splice(index, 0, node);\n                return;\n            }\n        }\n        this.children.push(node);\n    }\n    removeChild(node) {\n        const nodeIndexToRemove = this.children.indexOf(node);\n        if (nodeIndexToRemove >= 0) {\n            this.children.splice(nodeIndexToRemove, 1);\n        }\n    }\n    get selectedNode() {\n        const selectedIndex = this.selected || 0;\n        for (let i = selectedIndex; i < this.children.length; i++) {\n            const element = this.children[i];\n            if (isElementNode(element)) {\n                this.selected = i;\n                return element;\n            }\n        }\n        return undefined;\n    }\n    set shader(shaderProps) {\n        let shProps = shaderProps;\n        if (isArray(shaderProps)) {\n            shProps = createShader(...shaderProps);\n        }\n        this.lng.shader = shProps;\n    }\n    _sendToLightningAnimatable(name, value) {\n        if (this.transition &&\n            this.rendered &&\n            Config.animationsEnabled &&\n            (this.transition === true || this.transition[name])) {\n            const animationSettings = this.transition === true || this.transition[name] === true\n                ? undefined\n                : this.transition[name];\n            const animationController = this.animate({ [name]: value }, animationSettings);\n            if (isFunc(this.onAnimationStarted)) {\n                animationController.once('animating', (controller) => {\n                    this.onAnimationStarted?.call(this, controller, name, value);\n                });\n            }\n            if (isFunc(this.onAnimationFinished)) {\n                animationController.once('stopped', (controller) => {\n                    this.onAnimationFinished?.call(this, controller, name, value);\n                });\n            }\n            return animationController.start();\n        }\n        this.lng[name] = value;\n    }\n    animate(props, animationSettings) {\n        assertTruthy(this.rendered, 'Node must be rendered before animating');\n        return this.lng.animate(props, animationSettings || this.animationSettings);\n    }\n    chain(props, animationSettings) {\n        if (this._animationRunning) {\n            this._animationQueue = [];\n            this._animationRunning = false;\n        }\n        if (animationSettings) {\n            this._animationQueueSettings = animationSettings;\n        }\n        else if (!this._animationQueueSettings) {\n            this._animationQueueSettings =\n                animationSettings || this.animationSettings;\n        }\n        animationSettings = animationSettings || this._animationQueueSettings;\n        this._animationQueue = this._animationQueue || [];\n        this._animationQueue.push({ props, animationSettings });\n        return this;\n    }\n    async start() {\n        let animation = this._animationQueue.shift();\n        while (animation) {\n            this._animationRunning = true;\n            await this.animate(animation.props, animation.animationSettings)\n                .start()\n                .waitUntilStopped();\n            animation = this._animationQueue.shift();\n        }\n        this._animationRunning = false;\n        this._animationQueueSettings = undefined;\n    }\n    setFocus() {\n        if (this.skipFocus) {\n            return;\n        }\n        if (this.rendered) {\n            // can be 0\n            if (this.forwardFocus !== undefined) {\n                if (isFunc(this.forwardFocus)) {\n                    if (this.forwardFocus.call(this, this) !== false) {\n                        return;\n                    }\n                }\n                else {\n                    const focusedIndex = typeof this.forwardFocus === 'number' ? this.forwardFocus : null;\n                    const nodes = this.children;\n                    if (focusedIndex !== null && focusedIndex < nodes.length) {\n                        const child = nodes[focusedIndex];\n                        isElementNode(child) && child.setFocus();\n                        return;\n                    }\n                }\n            }\n            // Delay setting focus so children can render (useful for Row + Column)\n            queueMicrotask(() => setActiveElement(this));\n        }\n        else {\n            this._autofocus = true;\n        }\n    }\n    isTextNode() {\n        return this._type === NodeType.TextNode;\n    }\n    _layoutOnLoad() {\n        this.lng.on('loaded', (_node, loadedPayload) => {\n            const { dimensions } = loadedPayload;\n            this.parent.updateLayout(this, dimensions);\n        });\n    }\n    getText() {\n        let result = '';\n        for (let i = 0; i < this.children.length; i++) {\n            result += this.children[i].text;\n        }\n        return result;\n    }\n    destroy() {\n        if (this._queueDelete && isINode(this.lng)) {\n            this.lng.destroy();\n            if (this.parent && this.parent.requiresLayout()) {\n                this.parent.updateLayout();\n            }\n        }\n    }\n    // Must be set before render\n    set onEvents(events) {\n        this._events = events;\n    }\n    get onEvents() {\n        return this._events;\n    }\n    set style(values) {\n        if (isArray(values)) {\n            this._style = flattenStyles(values);\n        }\n        else {\n            this._style = values;\n        }\n        // Keys set in JSX are more important\n        for (const key in this._style) {\n            // be careful of 0 values\n            if (this[key] === undefined) {\n                this[key] = this._style[key];\n            }\n        }\n    }\n    get style() {\n        return this._style;\n    }\n    get hasChildren() {\n        return this.children.length > 0;\n    }\n    getChildById(id) {\n        return this.children.find((c) => c.id === id);\n    }\n    searchChildrenById(id) {\n        // traverse all the childrens children\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children[i];\n            if (isElementNode(child)) {\n                if (child.id === id) {\n                    return child;\n                }\n                const found = child.searchChildrenById(id);\n                if (found) {\n                    return found;\n                }\n            }\n        }\n    }\n    set states(states) {\n        this._states = this._states\n            ? this._states.merge(states)\n            : new States(this._stateChanged.bind(this), states);\n        if (this.rendered) {\n            this._stateChanged();\n        }\n    }\n    get states() {\n        this._states = this._states || new States(this._stateChanged.bind(this));\n        return this._states;\n    }\n    get animationSettings() {\n        return this._animationSettings || Config.animationSettings;\n    }\n    set animationSettings(animationSettings) {\n        this._animationSettings = animationSettings;\n    }\n    set hidden(val) {\n        this.alpha = val ? 0 : 1;\n    }\n    get hidden() {\n        return this.alpha === 0;\n    }\n    set autofocus(val) {\n        this._autofocus = val ? true : false;\n        this._autofocus && this.setFocus();\n    }\n    get autofocus() {\n        return this._autofocus;\n    }\n    requiresLayout() {\n        return this.display === 'flex' || this.onBeforeLayout;\n    }\n    set updateLayoutOn(v) {\n        this.updateLayout();\n    }\n    get updateLayoutOn() {\n        return null;\n    }\n    updateLayout(child, dimensions) {\n        if (this.hasChildren) {\n            log('Layout: ', this);\n            let changedLayout = false;\n            if (isFunc(this.onBeforeLayout)) {\n                changedLayout =\n                    this.onBeforeLayout.call(this, this, child, dimensions) || false;\n            }\n            if (this.display === 'flex') {\n                if (calculateFlex(this) || changedLayout) {\n                    this.parent?.updateLayout();\n                }\n            }\n            else if (changedLayout) {\n                this.parent?.updateLayout();\n            }\n            isFunc(this.onLayout) &&\n                this.onLayout.call(this, this, child, dimensions);\n        }\n    }\n    _stateChanged() {\n        log('State Changed: ', this, this.states);\n        if (this.forwardStates) {\n            // apply states to children first\n            const states = this.states.slice();\n            this.children.forEach((c) => {\n                c.states = states;\n            });\n        }\n        const states = this.states;\n        if (this._undoStyles || (this.style && keyExists(this.style, states))) {\n            this._undoStyles = this._undoStyles || [];\n            const stylesToUndo = {};\n            this._undoStyles.forEach((styleKey) => {\n                stylesToUndo[styleKey] = this.style[styleKey];\n            });\n            const newStyles = states.reduce((acc, state) => {\n                const styles = this.style[state];\n                if (styles) {\n                    acc = {\n                        ...acc,\n                        ...styles,\n                    };\n                }\n                return acc;\n            }, {});\n            this._undoStyles = Object.keys(newStyles);\n            // Apply transition first\n            if (newStyles.transition !== undefined) {\n                this.transition = newStyles.transition;\n            }\n            // Apply the styles\n            Object.assign(this, stylesToUndo, newStyles);\n        }\n    }\n    render() {\n        // Elements are rendered from the outside in, then `insert`ed from the inside out.\n        const node = this;\n        const parent = this.parent;\n        if (!parent) {\n            console.warn('Parent not set - no node created for: ', this);\n            return;\n        }\n        if (!parent.rendered) {\n            console.warn('Parent not rendered yet: ', this);\n            return;\n        }\n        if (parent.requiresLayout() && !layoutQueue.has(parent)) {\n            layoutQueue.add(parent);\n            if (queueLayout) {\n                queueLayout = false;\n                queueMicrotask(() => {\n                    queueLayout = true;\n                    const queue = [...layoutQueue];\n                    layoutQueue.clear();\n                    for (let i = queue.length - 1; i >= 0; i--) {\n                        queue[i].updateLayout();\n                    }\n                });\n            }\n        }\n        if (this.rendered) {\n            // This happens if Array of items is reordered to reuse elements.\n            // We return after layout is queued so the change can trigger layout updates.\n            return;\n        }\n        if (this._states) {\n            this._stateChanged();\n        }\n        const props = node.lng;\n        props.x = props.x || 0;\n        props.y = props.y || 0;\n        if (parent.rendered) {\n            props.parent = parent.lng;\n        }\n        if (node._effects) {\n            props.shader = convertEffectsToShader(node._effects);\n        }\n        if (node.isTextNode()) {\n            const textProps = props;\n            if (Config.fontSettings) {\n                for (const key in Config.fontSettings) {\n                    if (textProps[key] === undefined) {\n                        textProps[key] = Config.fontSettings[key];\n                    }\n                }\n            }\n            textProps.text = textProps.text || node.getText();\n            if (textProps.textAlign && !textProps.contain) {\n                console.warn('Text align requires contain: ', node.getText());\n            }\n            // contain is either width or both\n            if (textProps.contain) {\n                if (!textProps.width) {\n                    textProps.width =\n                        (parent.width || 0) - textProps.x - (textProps.marginRight || 0);\n                }\n                if (textProps.contain === 'both' &&\n                    !textProps.height &&\n                    !textProps.maxLines) {\n                    textProps.height =\n                        (parent.height || 0) - textProps.y - (textProps.marginBottom || 0);\n                }\n                else if (textProps.maxLines === 1) {\n                    textProps.height = (textProps.height ||\n                        textProps.lineHeight ||\n                        textProps.fontSize);\n                }\n            }\n            log('Rendering: ', this, props);\n            node.lng = renderer.createTextNode(props);\n            if (parent.requiresLayout() && (!props.width || !props.height)) {\n                node._layoutOnLoad();\n            }\n        }\n        else {\n            // If its not an image or texture apply some defaults\n            if (!props.texture) {\n                // Set width and height to parent less offset\n                if (isNaN(props.width)) {\n                    props.width = (parent.width || 0) - props.x;\n                }\n                if (isNaN(props.height)) {\n                    props.height = (parent.height || 0) - props.y;\n                }\n                if (props.rtt && !props.color) {\n                    props.color = 0xffffffff;\n                }\n                if (!props.color && !props.src) {\n                    // Default color to transparent - If you later set a src, you'll need\n                    // to set color '#ffffffff'\n                    props.color = 0x00000000;\n                }\n            }\n            log('Rendering: ', this, props);\n            node.lng = renderer.createNode(props);\n        }\n        node.rendered = true;\n        if (node.autosize && parent.requiresLayout()) {\n            node._layoutOnLoad();\n        }\n        if (node.onFail) {\n            node.lng.on('failed', node.onFail);\n        }\n        if (node.onLoad) {\n            node.lng.on('loaded', node.onLoad);\n        }\n        isFunc(this.onCreate) && this.onCreate.call(this, node);\n        node.onEvents &&\n            node.onEvents.forEach(([name, handler]) => {\n                node.lng.on(name, (inode, data) => handler(node, data));\n            });\n        // L3 Inspector adds div to the lng object\n        //@ts-expect-error - div is not in the typings\n        if (node.lng?.div) {\n            //@ts-expect-error - div is not in the typings\n            node.lng.div.element = node;\n        }\n        if (node._type === NodeType.Element) {\n            // only element nodes will have children that need rendering\n            for (let i = 0; i < node.children.length; i++) {\n                const c = node.children[i];\n                assertTruthy(c, 'Child is undefined');\n                if (isElementNode(c)) {\n                    c.render();\n                }\n                else if (c.text && c._type === NodeType.Text) {\n                    // Solid Show uses an empty text node as a placeholder\n                    // Vue uses comment nodes for v-if\n                    console.warn('TextNode outside of <Text>: ', c);\n                }\n            }\n        }\n        node._autofocus && node.setFocus();\n    }\n}\nfor (const key of LightningRendererNumberProps) {\n    Object.defineProperty(ElementNode.prototype, key, {\n        get() {\n            return this.lng[key];\n        },\n        set(v) {\n            this._sendToLightningAnimatable(key, v);\n        },\n    });\n}\nfor (const key of LightningRendererNonAnimatingProps) {\n    Object.defineProperty(ElementNode.prototype, key, {\n        get() {\n            return this.lng[key];\n        },\n        set(v) {\n            this.lng[key] = v;\n        },\n    });\n}\n// Add Border Helpers\nObject.defineProperties(ElementNode.prototype, {\n    borderRadius: {\n        set(radius) {\n            this.effects = this.effects\n                ? {\n                    ...this.effects,\n                    ...{ radius: { radius } },\n                }\n                : { radius: { radius } };\n        },\n        get() {\n            return this.effects?.radius?.radius;\n        },\n    },\n    border: borderAccessor(),\n    borderLeft: borderAccessor('Left'),\n    borderRight: borderAccessor('Right'),\n    borderTop: borderAccessor('Top'),\n    borderBottom: borderAccessor('Bottom'),\n    linearGradient: {\n        set(props = {}) {\n            this.effects = this.effects\n                ? {\n                    ...this.effects,\n                    ...{ linearGradient: props },\n                }\n                : { linearGradient: props };\n        },\n        get() {\n            return this.effects?.linearGradient;\n        },\n    },\n    radialGradient: {\n        set(props = {}) {\n            this.effects = this.effects\n                ? {\n                    ...this.effects,\n                    ...{ radialGradient: props },\n                }\n                : { radialGradient: props };\n        },\n        get() {\n            return this.effects?.radialGradient;\n        },\n    },\n    radialProgress: {\n        set(props = {}) {\n            this.effects = this.effects\n                ? {\n                    ...this.effects,\n                    ...{ radialProgressGradient: props },\n                }\n                : { radialProgressGradient: props };\n        },\n        get() {\n            return this.effects?.radialProgress;\n        },\n    },\n});\n//# sourceMappingURL=elementNode.js.map","let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned ? UNOWNED : {\n      owned: null,\n      cleanups: null,\n      context: current ? current.context : null,\n      owner: current\n    },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = (\"initialValue\" in options),\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    let v;\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v;\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);else loadEnd(pr, undefined, castError(p.value), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, options);\n  updateComputation(node);\n  setDeferred(() => Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined ? value : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const {\n      factory: oldFactory,\n      untrack: oldUntrack\n    } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    } else if (sharedConfig.effects) {\n      queue = [...sharedConfig.effects, ...queue];\n      userLength += sharedConfig.effects.length;\n      delete sharedConfig.effects;\n    }\n    setHydrateContext();\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, owner && owner.owner || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(error, fns, owner);\n    },\n    state: STALE\n  });else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        ...Owner.context,\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get ? {\n          enumerable: true,\n          configurable: true,\n          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])\n        } : desc.value !== undefined ? desc : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if ($PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (false) ;\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => keyed ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return props.when;\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(() => {\n      let conds = conditions();\n      if (!Array.isArray(conds)) conds = [conds];\n      for (let i = 0; i < conds.length; i++) {\n        const c = conds[i].when;\n        if (c) {\n          keyed = !!conds[i].keyed;\n          return [i, c, conds[i]];\n        }\n      }\n      return [-1];\n    }, undefined, {\n      equals\n    });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    return fn ? untrack(() => c(keyed ? when : () => {\n      if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n      return cond.when;\n    })) : c;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load) err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(() => {\n        if (sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      }, err => {\n        error = err;\n        set();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createSignal } from 'solid-js';\nimport { type ElementNode } from '@lightningtv/core';\nexport const [activeElement, setActiveElement] = createSignal<\n  ElementNode | undefined\n>(undefined);\n","import { isInteger } from '@lightningtv/core';\n\n/**\n * Converts a color string to a color number value.\n */\nexport function hexColor(color: string | number = ''): number {\n  if (isInteger(color)) {\n    return color;\n  }\n\n  if (typeof color === 'string') {\n    // Renderer expects RGBA values\n    if (color.startsWith('#')) {\n      return Number(\n        color.replace('#', '0x') + (color.length === 7 ? 'ff' : ''),\n      );\n    }\n\n    if (color.startsWith('0x')) {\n      return Number(color);\n    }\n    return Number('0x' + (color.length === 6 ? color + 'ff' : color));\n  }\n\n  return 0x00000000;\n}\n","import { createRoot, createRenderEffect, mergeProps, createMemo, createComponent, untrack } from 'solid-js';\n\nfunction createRenderer$1({\n  createElement,\n  createTextNode,\n  isTextNode,\n  replaceText,\n  insertNode,\n  removeNode,\n  setProperty,\n  getParentNode,\n  getFirstChild,\n  getNextSibling\n}) {\n  function insert(parent, accessor, marker, initial) {\n    if (marker !== undefined && !initial) initial = [];\n    if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n    createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n  }\n  function insertExpression(parent, value, current, marker, unwrapArray) {\n    while (typeof current === \"function\") current = current();\n    if (value === current) return current;\n    const t = typeof value,\n      multi = marker !== undefined;\n    if (t === \"string\" || t === \"number\") {\n      if (t === \"number\") value = value.toString();\n      if (multi) {\n        let node = current[0];\n        if (node && isTextNode(node)) {\n          replaceText(node, value);\n        } else node = createTextNode(value);\n        current = cleanChildren(parent, current, marker, node);\n      } else {\n        if (current !== \"\" && typeof current === \"string\") {\n          replaceText(getFirstChild(parent), current = value);\n        } else {\n          cleanChildren(parent, current, marker, createTextNode(value));\n          current = value;\n        }\n      }\n    } else if (value == null || t === \"boolean\") {\n      current = cleanChildren(parent, current, marker);\n    } else if (t === \"function\") {\n      createRenderEffect(() => {\n        let v = value();\n        while (typeof v === \"function\") v = v();\n        current = insertExpression(parent, v, current, marker);\n      });\n      return () => current;\n    } else if (Array.isArray(value)) {\n      const array = [];\n      if (normalizeIncomingArray(array, value, unwrapArray)) {\n        createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n        return () => current;\n      }\n      if (array.length === 0) {\n        const replacement = cleanChildren(parent, current, marker);\n        if (multi) return current = replacement;\n      } else {\n        if (Array.isArray(current)) {\n          if (current.length === 0) {\n            appendNodes(parent, array, marker);\n          } else reconcileArrays(parent, current, array);\n        } else if (current == null || current === \"\") {\n          appendNodes(parent, array);\n        } else {\n          reconcileArrays(parent, multi && current || [getFirstChild(parent)], array);\n        }\n      }\n      current = array;\n    } else {\n      if (Array.isArray(current)) {\n        if (multi) return current = cleanChildren(parent, current, marker, value);\n        cleanChildren(parent, current, null, value);\n      } else if (current == null || current === \"\" || !getFirstChild(parent)) {\n        insertNode(parent, value);\n      } else replaceNode(parent, value, getFirstChild(parent));\n      current = value;\n    }\n    return current;\n  }\n  function normalizeIncomingArray(normalized, array, unwrap) {\n    let dynamic = false;\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i],\n        t;\n      if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n        dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n      } else if ((t = typeof item) === \"string\" || t === \"number\") {\n        normalized.push(createTextNode(item));\n      } else if (t === \"function\") {\n        if (unwrap) {\n          while (typeof item === \"function\") item = item();\n          dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n        } else {\n          normalized.push(item);\n          dynamic = true;\n        }\n      } else normalized.push(item);\n    }\n    return dynamic;\n  }\n  function reconcileArrays(parentNode, a, b) {\n    let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = getNextSibling(a[aEnd - 1]),\n      map = null;\n    while (aStart < aEnd || bStart < bEnd) {\n      if (a[aStart] === b[bStart]) {\n        aStart++;\n        bStart++;\n        continue;\n      }\n      while (a[aEnd - 1] === b[bEnd - 1]) {\n        aEnd--;\n        bEnd--;\n      }\n      if (aEnd === aStart) {\n        const node = bEnd < bLength ? bStart ? getNextSibling(b[bStart - 1]) : b[bEnd - bStart] : after;\n        while (bStart < bEnd) insertNode(parentNode, b[bStart++], node);\n      } else if (bEnd === bStart) {\n        while (aStart < aEnd) {\n          if (!map || !map.has(a[aStart])) removeNode(parentNode, a[aStart]);\n          aStart++;\n        }\n      } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n        const node = getNextSibling(a[--aEnd]);\n        insertNode(parentNode, b[bStart++], getNextSibling(a[aStart++]));\n        insertNode(parentNode, b[--bEnd], node);\n        a[aEnd] = b[bEnd];\n      } else {\n        if (!map) {\n          map = new Map();\n          let i = bStart;\n          while (i < bEnd) map.set(b[i], i++);\n        }\n        const index = map.get(a[aStart]);\n        if (index != null) {\n          if (bStart < index && index < bEnd) {\n            let i = aStart,\n              sequence = 1,\n              t;\n            while (++i < aEnd && i < bEnd) {\n              if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n              sequence++;\n            }\n            if (sequence > index - bStart) {\n              const node = a[aStart];\n              while (bStart < index) insertNode(parentNode, b[bStart++], node);\n            } else replaceNode(parentNode, b[bStart++], a[aStart++]);\n          } else aStart++;\n        } else removeNode(parentNode, a[aStart++]);\n      }\n    }\n  }\n  function cleanChildren(parent, current, marker, replacement) {\n    if (marker === undefined) {\n      let removed;\n      while (removed = getFirstChild(parent)) removeNode(parent, removed);\n      replacement && insertNode(parent, replacement);\n      return \"\";\n    }\n    const node = replacement || createTextNode(\"\");\n    if (current.length) {\n      let inserted = false;\n      for (let i = current.length - 1; i >= 0; i--) {\n        const el = current[i];\n        if (node !== el) {\n          const isParent = getParentNode(el) === parent;\n          if (!inserted && !i) isParent ? replaceNode(parent, node, el) : insertNode(parent, node, marker);else isParent && removeNode(parent, el);\n        } else inserted = true;\n      }\n    } else insertNode(parent, node, marker);\n    return [node];\n  }\n  function appendNodes(parent, array, marker) {\n    for (let i = 0, len = array.length; i < len; i++) insertNode(parent, array[i], marker);\n  }\n  function replaceNode(parent, newNode, oldNode) {\n    insertNode(parent, newNode, oldNode);\n    removeNode(parent, oldNode);\n  }\n  function spreadExpression(node, props, prevProps = {}, skipChildren) {\n    props || (props = {});\n    if (!skipChildren) {\n      createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n    }\n    createRenderEffect(() => props.ref && props.ref(node));\n    createRenderEffect(() => {\n      for (const prop in props) {\n        if (prop === \"children\" || prop === \"ref\") continue;\n        const value = props[prop];\n        if (value === prevProps[prop]) continue;\n        setProperty(node, prop, value, prevProps[prop]);\n        prevProps[prop] = value;\n      }\n    });\n    return prevProps;\n  }\n  return {\n    render(code, element) {\n      let disposer;\n      createRoot(dispose => {\n        disposer = dispose;\n        insert(element, code());\n      });\n      return disposer;\n    },\n    insert,\n    spread(node, accessor, skipChildren) {\n      if (typeof accessor === \"function\") {\n        createRenderEffect(current => spreadExpression(node, accessor(), current, skipChildren));\n      } else spreadExpression(node, accessor, undefined, skipChildren);\n    },\n    createElement,\n    createTextNode,\n    insertNode,\n    setProp(node, name, value, prev) {\n      setProperty(node, name, value, prev);\n      return value;\n    },\n    mergeProps,\n    effect: createRenderEffect,\n    memo: createMemo,\n    createComponent,\n    use(fn, element, arg) {\n      return untrack(() => fn(element, arg));\n    }\n  };\n}\n\nfunction createRenderer(options) {\n  const renderer = createRenderer$1(options);\n  renderer.mergeProps = mergeProps;\n  return renderer;\n}\n\nexport { createRenderer };\n","import { assertTruthy } from '@lightningjs/renderer/utils';\nimport {\n  ElementNode,\n  NodeType,\n  log,\n  type ElementText,\n} from '@lightningtv/core';\nimport type { SolidNode, SolidRendererOptions } from './types.js';\n\nexport default {\n  createElement(name: string): ElementNode {\n    return new ElementNode(name);\n  },\n  createTextNode(text: string): ElementText {\n    // A text node is just a string - not the <text> node\n    return { _type: NodeType.Text, text, parent: undefined };\n  },\n  replaceText(node: ElementText, value: string): void {\n    log('Replace Text: ', node, value);\n    node.text = value;\n    const parent = node.parent;\n    assertTruthy(parent);\n    parent.text = parent.getText();\n  },\n  setProperty(node: ElementNode, name: string, value: any = true): void {\n    node[name] = value;\n  },\n  insertNode(parent: ElementNode, node: SolidNode, anchor: SolidNode): void {\n    log('INSERT: ', parent, node, anchor);\n\n    parent.insertChild(node, anchor);\n    node._queueDelete = false;\n\n    if (node instanceof ElementNode) {\n      parent.rendered && node.render();\n    } else if (parent.isTextNode()) {\n      // TextNodes can be placed outside of <text> nodes when <Show> is used as placeholder\n      parent.text = parent.getText();\n    }\n  },\n  isTextNode(node: ElementNode): boolean {\n    return node.isTextNode();\n  },\n  removeNode(parent: ElementNode, node: SolidNode): void {\n    log('REMOVE: ', parent, node);\n    parent.removeChild(node);\n    node._queueDelete = true;\n    if (node instanceof ElementNode) {\n      // Solid replacesNodes to move them (via insert and remove),\n      // so we need to wait for the next microtask to destroy the node\n      // in the event it gets a new parent.\n      queueMicrotask(() => node.destroy());\n    }\n  },\n  getParentNode(node: SolidNode): ElementNode | undefined {\n    return node.parent;\n  },\n  getFirstChild(node: ElementNode): SolidNode | undefined {\n    return node.children[0];\n  },\n  getNextSibling(node: SolidNode): SolidNode | undefined {\n    const children = node.parent!.children || [];\n    const index = children.indexOf(node) + 1;\n    if (index < children.length) {\n      return children[index];\n    }\n    return undefined;\n  },\n} satisfies SolidRendererOptions;\n","import { createRenderer as solidCreateRenderer } from 'solid-js/universal';\nimport {\n  Config,\n  type IntrinsicNodeProps,\n  type IntrinsicTextProps,\n  startLightningRenderer,\n} from '@lightningtv/core';\nimport nodeOpts from './solidOpts.js';\nimport {\n  splitProps,\n  createMemo,\n  untrack,\n  type JSXElement,\n  type ValidComponent,\n} from 'solid-js';\nimport type { RendererMain, RendererMainSettings } from '@lightningjs/renderer';\nimport type { SolidNode } from './types.js';\nimport { setActiveElement } from './activeElement.js';\n\nconst solidRenderer = solidCreateRenderer<SolidNode>(nodeOpts);\n\nlet renderer: RendererMain;\nexport const rootNode = nodeOpts.createElement('App');\n\nconst render = function (code: () => JSXElement) {\n  // @ts-expect-error - code is jsx element and not SolidElement yet\n  return solidRenderer.render(code, rootNode);\n};\n\nexport function createRenderer(\n  rendererOptions: RendererMainSettings | undefined = Config.rendererOptions,\n  node?: HTMLElement | string,\n) {\n  renderer = startLightningRenderer(rendererOptions, node || 'app');\n  //Prevent this from happening automatically\n  Config.setActiveElement = setActiveElement;\n  rootNode.lng = renderer.root!;\n  rootNode.rendered = true;\n  return {\n    renderer,\n    rootNode,\n    render,\n  };\n}\n\nexport const {\n  effect,\n  memo,\n  createComponent,\n  createElement,\n  createTextNode,\n  insertNode,\n  insert,\n  spread,\n  setProp,\n  mergeProps,\n  use,\n} = solidRenderer;\n\n/**\n * renders an arbitrary custom or native component and passes the other props\n * ```typescript\n * <Dynamic component={multiline() ? 'textarea' : 'input'} value={value()} />\n * ```\n * @description https://www.solidjs.com/docs/latest/api#dynamic\n */\nexport function Dynamic<T>(\n  props: T & {\n    component?: ValidComponent;\n  },\n): JSXElement {\n  const [p, others] = splitProps(props, ['component']);\n\n  const cached = createMemo(() => p.component);\n\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case 'function':\n        return untrack(() => component(others));\n\n      case 'string': {\n        const el = createElement(component);\n        spread(el, others);\n        return el;\n      }\n\n      default:\n        break;\n    }\n  }) as unknown as JSXElement;\n}\n\n// Dont use JSX as it creates circular dependencies and causes trouble with the playground.\nexport const View = (props: IntrinsicNodeProps) => {\n  const el = createElement('node');\n  spread(el, props, false);\n  return el as unknown as JSXElement;\n};\n\nexport const Text = (props: IntrinsicTextProps) => {\n  const el = createElement('text');\n  spread(el, props, false);\n  return el as unknown as JSXElement;\n};\n","import { Text, View, hexColor } from '@lightningtv/solid';\nimport { Index, Show, createSignal } from 'solid-js';\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst generateRandomColor = () => '0x' + Math.floor(Math.random() * 16777215).toString(16) + 'FF';\n\nconst HelloWorld = () => {\n  const [blocks, setBlocks] = createSignal([]);\n  let blockContainer;\n\n  const handleTPress = () => {\n    const _blocks = [];\n\n    // To tear down and recreate uncomment next line\n    // setBlocks([]);\n\n    for (let step = 0; step < 1000; step++) {\n      _blocks.push({\n        width: random(50, 100),\n        height: random(50, 100),\n        x: random(0, WIDTH),\n        y: random(0, HEIGHT),\n        borderRadius: random(0, 50),\n        color: generateRandomColor()\n      });\n    }\n\n    setBlocks(_blocks);\n  };\n\n  setInterval(() => {\n    handleTPress();\n  }, 2000);\n\n  return (\n    <View style={{color: hexColor('#f0f0f0')}}>\n      <Show when={blocks().length > 0}>\n        <View ref={blockContainer}>\n            <Index each={blocks()}>{(props) => <node {/*@once*/ ...props} />}</Index>\n        </View>\n      </Show>\n    </View>\n  );\n};\n\nexport default HelloWorld;\n\nconst HEIGHT = 600;\nconst WIDTH = 800;\n\nconst Block = (props) => {\n  return <View {...props} />;\n};\n\nfunction generateRandomHexColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n","import { createRenderer, Config } from '@lightningtv/solid';\nimport HelloWorld from './pages/HelloWorld';\n// import TextPage from './pages/Text';\n// import CounterPage from './pages/Counter';\n// import ButtonsPage from './pages/ButtonsPage';\n// import NotFound from './pages/NotFound';\n\n//import coreExtensionModuleUrl from './AppCoreExtensions.js?importChunkUrl';\n\nConfig.debug = false;\nConfig.fontSettings.fontFamily = 'Ubuntu';\nConfig.fontSettings.color = 0xffffffff;\nConfig.rendererOptions = {\n  //coreExtensionModule: coreExtensionModuleUrl,\n  numImageWorkers: 2,\n  enableInspector: false,\n  // deviceLogicalPixelRatio: 1\n};\n\nconst {render} = createRenderer();\nrender(() =>  (\n  <HelloWorld />\n));\n"],"names":["createWebGLContext","canvas","contextSpy","config","gl","target","prop","value","assertTruthy","condition","message","isProductionEnvironment","mergeColorProgress","rgba1","rgba2","p","r1","g1","b1","a1","r2","g2","b2","a2","r","g","b","a","mergeColorAlpha","rgba","alpha","premultiplyRGB","setPremultiplyMode","mode","mergeColorAlphaPremultiplied","flipEndianess","newAlpha","rgbAlpha","hasOwn","obj","define_import_meta_env_default","nextId","getNewId","EventEmitter","__publicField","event","listener","listeners","index","onceListener","data","PROTOCOL_REGEX","getNormalizedRgbaComponents","getRgbaComponents","getNormalizedAlphaComponent","getRgbaString","color","createBound","x1","y1","x2","y2","out","boundsOverlap","convertBoundToRect","bound","intersectRect","x","y","width","height","copyRect","compareRect","boundInsideBound","bound1","bound2","isBoundPositive","convertUrlToAbsolute","url","path","basePath","baseUrl","Matrix3d","tempMatrix","e0","e1","e2","e3","e4","e5","sx","sy","angle","cos","sin","src","dst","other","rx1","rx2","rx3","rx4","ry1","ry2","ry3","ry4","RenderCoords","entries","x3","y3","x4","y4","isPowerOfTwo","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","t","cbx","cbxd","dx","it","minT","maxT","timingMapping","timingLookup","defaultTiming","parseCubicBezier","str","regex","match","num1","num2","num3","num4","timing","getTimingFunction","lookup","bytesToMb","bytes","CoreAnimation","node","props","settings","key","shaderPropKeys","spLength","j","effectName","effect","effectProps","eLength","k","easing","delay","valueMap","i","dynEntries","dynEntriesL","e","propName","propValue","startValue","endValue","easingProgressValue","dt","duration","loop","stopMethod","delayFor","CoreAnimationController","manager","animation","resolve","CoreNodeRenderState","CoreNodeRenderStateMap","UpdateType","CoreNode","stage","_","dimensions","_b","_a","error","texture","type","parent","rotation","scaleX","scaleY","mountTranslateX","mountTranslateY","pivotTranslateX","pivotTranslateY","resizeModeScaleX","resizeModeScaleY","extraX","extraY","tw","th","txAspectRatio","nodeAspectRatio","scaledTxHeight","scaledTxWidth","delta","parentClippingRect","childUpdateType","child","rectW","rectH","renderM","renderState","previous","newIsRenderable","isRenderable","transform","tx","ty","ta","tb","tc","td","minX","maxX","minY","maxY","renderCoords","clippingRect","gt","clipping","isRotated","z","zIndex","children","renderer","textureOptions","rtt","shader","premultipliedColorTl","premultipliedColorTr","premultipliedColorBl","premultipliedColorBr","worldAlpha","_c","newParent","oldParent","imageUrl","oldTexture","stylePropertyMap","v","w","h","convertColorToRgba","domPropertyMap","Inspector","rect","top","left","id","properties","div","property","receiver","anim","parentId","mappedStyleResponse","domProperty","keyValue","scale","animate","startLoop","isIdle","runLoop","getTimeStamp","CoreContextTexture","memManager","textureSource","byteSize","CoreRenderer","options","CoreRenderOp","CoreShader","createShader","glw","source","createProgram","vertexShader","fragmentShader","program","WebGlCoreShader","webGl2","requiredExtensions","glVersion","extensionName","shaderSources","textureUnits","vertexSource","fragmentSource","vao","attributeName","location","buffer","uniform","attribute","loc","propsA","propsB","renderOp","parentHasRenderTexture","renderToTexture","name","resolvedBuffer","resolvedInfo","textures","WebGlCoreRenderOp","buffers","shaderProps","bufferIdx","framebufferDimensions","maxTextures","existingIdx","newIdx","shManager","quadIdx","pixelRatio","canvasHeight","clipX","clipWidth","clipHeight","clipY","getWebGlParameters","params","getWebGlExtensions","extensions","createIndexBuffer","size","maxQuads","indices","isHTMLImageElement","TRANSPARENT_TEXTURE_DATA","WebGlCoreCtxTexture","err","textureData","mipmaps","glInternalFormat","view","nativeTexture","Texture","txManager","owner","renderable","oldSize","newSize","ctxTexture","state","args","loadedArgs","failedArgs","_ColorTexture","pixelData32","pixelData8","ColorTexture","_SubTexture","parentTx","SubTexture","WebGlCoreCtxSubTexture","DefaultShader","DefaultShaderBatched","samplers","idx","ShaderEffect","ref","uniformInfo","passParameters","declaredUniforms","uniforms","u","unif","uniType","uniformName","define","res","uni","effectCache","getResolvedEffect","effects","effectContructors","resolvedEffects","effectsLength","resolvedEffect","effectConstructor","defaultPropValues","uniformKeys","uniformsLength","result","validatedValue","_DynamicShader","effectsL","propKeys","propsLength","propsEffectsLen","effectA","effectB","effectNameCount","methods","declareUniforms","uFx","baseClass","nr","fxClass","effectMethods","fx","fxProps","remap","m","cm","fxMethod","onShaderMask","onColorize","onEffectMask","reg","methodParameters","pm","sharedMethods","currentMask","drawEffects","current","currentClass","next","effectMethod","methodCollection","increment","DynamicShader","RoundedRectangle","radiusFactor","IDENTITY_MATRIX_3x3","_SdfShader","resolvedProps","components","SdfShader","updateShaderEffectColor","values","floatArray","updateFloat32ArrayLength2","updateFloat32ArrayLength4","updateFloat32ArrayLengthN","len","programValue","validateArrayLength4","isArray","updateWebSafeRadius","storedDimensions","$dimensions","r0","r3","factor","RadiusEffect","BorderEffect","_LinearGradientEffect","colors","stops","colorsL","tmp","rgbas","acc","val","amount","LinearGradientEffect","GrayscaleEffect","BorderRightEffect","BorderTopEffect","BorderBottomEffect","BorderLeftEffect","GlitchEffect","FadeOutEffect","_RadialGradientEffect","RadialGradientEffect","RadialProgressEffect","HolePunchEffect","ROUNDED_RECTANGLE_SHADER_TYPE","UnsupportedShader","shType","ShaderController","keys","l","definedProps","DynamicShaderController","effectConstructors","effectType","definedEffectProps","propEntries","propEntriesLength","CoreShaderManager","shClass","effectClass","ShaderClass","cacheKey","BufferCollection","item","isWebGl2","WebGlContextWrapper","maxTextureUnits","scissorBox","textureUnit","activeTextureUnit","texture2dUnits","pname","param","texture2dParams","activeTexture","textureParams","level","internalFormat","widthOrFormat","heightOrType","borderOrSource","format","pixels","internalformat","border","red","green","blue","enable","scissorEnabled","scissorX","scissorY","scissorWidth","scissorHeight","blend","blendEnabled","blendSrcRgb","blendDstRgb","blendSrcAlpha","blendDstAlpha","framebuffer","attachment","usage","boundArrayBuffer","boundElementArrayBuffer","normalized","stride","offset","curProgram","programUniforms","uniformArgs","compareArrays","count","vertexArray","_RenderTexture","RenderTexture","WebGlCoreCtxRenderTexture","isCompressedTextureContainer","loadCompressedTexture","arrayBuffer","loadKTXData","loadPVRData","littleEndian","imageSize","header","dataOffset","pvrtcData","_ImageTexture","mimeType","premultiplyAlpha","absoluteSrc","blob","hasAlphaChannel","img","reject","ImageTexture","WORDS_PER_QUAD","WebGlCoreRenderer","clearColor","bufferMemory","quadBuffer","fQuadBuffer","uiQuadBuffer","colorTl","colorTr","colorBl","colorBr","curRenderOp","targetDims","targetShader","flipX","flipY","texCoordX1","texCoordY1","texCoordX2","texCoordY2","parentW","parentH","resizeMode","precision","desiredSize","textureIdx","rightCornerX","rightCornerY","recursive","surface","arr","AnimationManager","createImageWorker","getImage","xhr","withAlphaChannel","ImageWorkerManager","numImageWorkers","worker","msg","numWorkers","workerCode","blobURL","workers","nextWorker","_NoiseTexture","NoiseTexture","CoreTextureManager","textureType","textureClass","TextureClass","keyCache","inverseKeyCache","memize","fn","head","tail","memoized","searchCache","weightConversions","fontWeightToNumber","weight","rawResolveFontToUse","familyMapsByPriority","family","weightIn","style","stretch","fontFamiles","fontFaces","weightMap","fontFace","fontFamilyWeight","resolveFontToUse","TrFontManager","textRenderers","font","trId","tr","fontFamily","fontWeight","fontStyle","fontStretch","trPropSetterDefaults","TextRenderer","propSetters","setter","status","TrFontFace","descriptors","metrics","SpecialCodepoints","FontShaper","SdfFontShaper","glyphMap","kernings","kerning","second","firsts","codepoints","codepointResult","lastGlyphId","codepoint","glyph","SdfTrFontFace","atlasUrl","atlasDataUrl","response","maxCharHeight","charHeight","ascender","descender","lineGap","unitsPerEm","glyphId","FLOATS_PER_GLYPH","getStartConditions","sdfFontSize","sdfLineHeight","verticalAlign","offsetY","fontSizeRatio","renderWindow","lineCache","textH","startLineIndex","sdfStartX","sdfBareLineHeight","sdfVerticalAlignYOffset","sdfOffsetY","sdfEncodedAscender","sdfAscenderAdjOffset","sdfStartY","PeekableIterator","iterator","indexBase","nextResult","getUnicodeCodepoints","text","start","codePoint","measureText","shaperProps","shaper","glyphs","layoutText","curLineIndex","startX","startY","textAlign","fontSize","lineHeight","letterSpacing","vertexBuffer","contain","rwSdf","trFontFace","forceFullLayoutCalc","scrollable","overflowSuffix","maxLines","vertexLineHeight","vertexW","vertexLSpacing","startingLineCacheEntry","startingCodepointIndex","startingMaxX","startingMaxY","curX","curY","bufferOffset","lastWord","glyphResult","curLineBufferStart","bufferLineInfos","vertexTruncateHeight","overflowSuffVertexWidth","moreLines","nextLineWillFit","lineVertexW","xStartLastWordBoundary","lineIsBelowWindowTop","lineIsAboveWindowBottom","lineIsWithinWindow","charEndX","quadX","quadY","atlasEntry","uvWidth","uvHeight","vertexTextW","line","lineWidth","xOffset","roundUpToMultiple","multiple","roundDownToMultiple","setRenderWindow","outRenderWindow","scrollY","bufferMargin","visibleWindow","screen","sdf","y1Base","calcDefaultLineHeight","tmpRect","SdfTextRenderer","familyName","faceSet","debugData","resLineHeight","neededLength","elementBounds","rwScreen","out2","debug","textW","distanceRange","bufferUploaded","webGlBuffers","webGlBuffer","elementRect","WebTrFontFace","fontUrl","fontUrlWithoutParentheses","determinedDescriptors","cssDescriptors","getWebFontMetrics","context","browserMetrics","MAX_TEXTURE_DIMENSION","calcHeight","textBaseline","numLines","baselineOffset","LightningTextTextureRenderer","ff","ffs","n","fontSetting","renderInfo","paddingLeft","paddingRight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","textIndent","defLineHeight","maxHeight","containedMaxLines","setMaxLines","calcMaxLines","innerWidth","suffix","linesInfo","lines","usedLines","otherLines","al","maxLineWidth","lineWidths","linesOverride","linePositionX","linePositionY","drawLines","ascenderPx","bareLineHeightPx","hlHeight","hlPaddingLeft","hlPaddingRight","drawLine","prevShadowSettings","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","space","char","resolvedGlobal","globalFontSet","getFontCssString","CanvasTextRenderer","cssString","fontFamilies","lightning2TextRenderer","textureNode","ContextSpy","TextureMemoryManager","criticalThreshold","targetFraction","lastMemUse","critical","textureA","textureB","txARenderable","txBRenderable","memTarget","renderableTexturesLoaded","renderableMemUsed","WHITE","parseColor","abgr","formatRgba","CanvasCoreTexture","mult","image","tintedImage","ctx","getRadius","quad","CanvasCoreRenderer","frame","hasTransform","hasClipping","hasGradient","radius","endX","endY","endColor","gradient","CoreTextNode","setWidth","setHeight","calcWidth","resolvedTextRenderer","textRendererState","santizeCustomDataMap","validTypes","valueType","Stage","appWidth","appHeight","boundsMargin","enableContextSpy","textureMemory","renderMode","bm","rendererOptions","rootNode","newFrameTime","animationManager","renderRequested","fpsUpdateInterval","fps","trProps","textRendererOverride","rendererId","overrideFallback","possibleRenderer","RendererMain","resolvedTxSettings","_d","resolvedSettings","deviceLogicalPixelRatio","devicePhysicalPixelRatio","enableInspector","deviceLogicalWidth","deviceLogicalHeight","targetEl","textNode","shaderType","root","findNode","found","startLightningRenderer","rootId","isDevEnv","isDev","Config","hasDebug","isObject","log","isFunc","isString","isNumber","isInteger","isINode","isElementNode","ElementNode","keyExists","flattenStyles","States","callback","initialState","__super","_key","force","newStates","stateIndexToRemove","NodeType","calculateFlex","hasOrder","growSize","numChildren","isRow","dimension","crossDimension","marginOne","marginTwo","crossProp","containerSize","containerCrossSize","gap","justify","align","flexBasis","prev","growFactor","itemSize","crossAlignChild","calculatedSize","toPad","activeElement","setActiveElement","elm","updateFocusPath","focusPath","currentFocusedElm","prevFocusedElm","fp","layoutQueue","queueLayout","convertEffectsToShader","styleEffects","borderAccessor","direction","LightningRendererNumberProps","LightningRendererNonAnimatingProps","beforeNode","nodeIndexToRemove","selectedIndex","element","shProps","animationSettings","animationController","controller","focusedIndex","nodes","_node","loadedPayload","events","states","changedLayout","stylesToUndo","styleKey","newStyles","styles","queue","textProps","handler","inode","equalFn","$PROXY","$TRACK","signalOptions","runEffects","runQueue","STALE","PENDING","UNOWNED","Owner","Transition","ExternalSourceConfig","Listener","Updates","Effects","ExecCount","createRoot","detachedOwner","unowned","updateFn","untrack","cleanNode","runUpdates","createSignal","s","writeSignal","readSignal","createRenderEffect","createComputation","updateComputation","createMemo","onCleanup","updates","lookUpstream","sSlot","isComp","o","TransitionRunning","markDownstream","runComputation","nextValue","handleError","init","pure","runTop","ancestors","wait","completeUpdates","ignore","obs","castError","FALLBACK","dispose","indexArray","list","mapFn","items","mapped","disposers","signals","newItems","newLen","disposer","mapper","set","createComponent","Comp","trueFn","propTraps","resolveSource","resolveSources","length","mergeProps","sources","proxy","sourcesMap","defined","sourceKeys","desc","definedKeys","narrowedError","Index","fallback","Show","keyed","hexColor","createRenderer$1","createElement","createTextNode","isTextNode","replaceText","insertNode","removeNode","setProperty","getParentNode","getFirstChild","getNextSibling","insert","accessor","marker","initial","insertExpression","unwrapArray","multi","cleanChildren","array","normalizeIncomingArray","replacement","appendNodes","reconcileArrays","replaceNode","unwrap","dynamic","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","map","sequence","removed","inserted","el","isParent","newNode","oldNode","spreadExpression","prevProps","skipChildren","code","arg","createRenderer","nodeOpts","anchor","solidRenderer","solidCreateRenderer","render","memo","spread","setProp","use","View","random","min","max","Math","floor","generateRandomColor","toString","HelloWorld","blocks","setBlocks","blockContainer","handleTPress","_blocks","step","push","WIDTH","HEIGHT","borderRadius","setInterval","_$createComponent","when","r$","_ref$","each","_el$","_$createElement","fontSettings"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105]}