{"version":3,"file":"index-CsmRFF24.js","sources":["../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/textures/Texture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/lib/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/lib/Matrix3d.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/lib/RenderCoords.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimation.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimationController.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/CoreNode.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/platform.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/animations/AnimationManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/lib/ImageWorker.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/textures/ColorTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/lib/textureCompression.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/lib/textureSvg.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/textures/ImageTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/textures/NoiseTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/textures/SubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/textures/RenderTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/CoreTextureManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/TrFontManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShaderBatched.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/ShaderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DynamicShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/RoundedRectangle.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/SdfShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/EffectUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadiusEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/LinearGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GrayscaleEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderRightEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderTopEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderBottomEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderLeftEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GlitchEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/FadeOutEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadialGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadialProgressEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/HolePunchEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/canvas/shaders/UnsupportedShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/main-api/ShaderController.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/main-api/DynamicShaderController.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/CoreShaderManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/TextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/lib/ContextSpy.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/TextureMemoryManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreContextTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/CoreTextNode.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/main-api/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/Stage.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/main-api/Renderer.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/lib/WebGlContextWrapper.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxRenderTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.12.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../node_modules/.pnpm/@lightningtv+core@2.7.6_@lightningjs+renderer@2.12.1/node_modules/@lightningtv/core/dist/src/lightningInit.js","../../node_modules/.pnpm/@lightningtv+core@2.7.6_@lightningjs+renderer@2.12.1/node_modules/@lightningtv/core/dist/src/config.js","../../node_modules/.pnpm/@lightningtv+core@2.7.6_@lightningjs+renderer@2.12.1/node_modules/@lightningtv/core/dist/src/nodeTypes.js","../../node_modules/.pnpm/@lightningtv+core@2.7.6_@lightningjs+renderer@2.12.1/node_modules/@lightningtv/core/dist/src/utils.js","../../node_modules/.pnpm/@lightningtv+core@2.7.6_@lightningjs+renderer@2.12.1/node_modules/@lightningtv/core/dist/src/states.js","../../node_modules/.pnpm/@lightningtv+core@2.7.6_@lightningjs+renderer@2.12.1/node_modules/@lightningtv/core/dist/src/flex.js","../../node_modules/.pnpm/@lightningtv+core@2.7.6_@lightningjs+renderer@2.12.1/node_modules/@lightningtv/core/dist/src/focusManager.js","../../node_modules/.pnpm/@lightningtv+core@2.7.6_@lightningjs+renderer@2.12.1/node_modules/@lightningtv/core/dist/src/elementNode.js","../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/dist/solid.js","../../node_modules/.pnpm/@lightningtv+solid@2.7.12_@lightningjs+renderer@2.12.1_@solidjs+router@0.15.3_solid-js@1.9.5__solid-js@1.9.5/node_modules/@lightningtv/solid/dist/src/activeElement.js","../../node_modules/.pnpm/@lightningtv+solid@2.7.12_@lightningjs+renderer@2.12.1_@solidjs+router@0.15.3_solid-js@1.9.5__solid-js@1.9.5/node_modules/@lightningtv/solid/dist/src/utils.js","../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/universal/dist/universal.js","../../node_modules/.pnpm/@lightningtv+solid@2.7.12_@lightningjs+renderer@2.12.1_@solidjs+router@0.15.3_solid-js@1.9.5__solid-js@1.9.5/node_modules/@lightningtv/solid/dist/src/solidOpts.js","../../node_modules/.pnpm/@lightningtv+solid@2.7.12_@lightningjs+renderer@2.12.1_@solidjs+router@0.15.3_solid-js@1.9.5__solid-js@1.9.5/node_modules/@lightningtv/solid/dist/src/render.js","../../node_modules/.pnpm/@lightningtv+solid@2.7.12_@lightningjs+renderer@2.12.1_@solidjs+router@0.15.3_solid-js@1.9.5__solid-js@1.9.5/node_modules/@lightningtv/solid/dist/src/primitives/useFocusManager.js","../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/web/dist/web.js","../../node_modules/.pnpm/@solidjs+router@0.15.3_solid-js@1.9.5/node_modules/@solidjs/router/dist/lifecycle.js","../../node_modules/.pnpm/@solidjs+router@0.15.3_solid-js@1.9.5/node_modules/@solidjs/router/dist/utils.js","../../node_modules/.pnpm/@solidjs+router@0.15.3_solid-js@1.9.5/node_modules/@solidjs/router/dist/routing.js","../../node_modules/.pnpm/@solidjs+router@0.15.3_solid-js@1.9.5/node_modules/@solidjs/router/dist/routers/components.jsx","../../node_modules/.pnpm/@solidjs+router@0.15.3_solid-js@1.9.5/node_modules/@solidjs/router/dist/routers/createRouter.js","../../node_modules/.pnpm/@lightningtv+solid@2.7.12_@lightningjs+renderer@2.12.1_@solidjs+router@0.15.3_solid-js@1.9.5__solid-js@1.9.5/node_modules/@lightningtv/solid/dist/src/primitives/router.js","../../src/pages/DirectUpdate.jsx","../../src/pages/Tile.jsx","../../src/pages/TileOne.jsx","../../src/pages/Map.jsx","../../src/pages/Index.jsx","../../src/pages/For.jsx","../../src/pages/App.jsx","../../src/index.jsx"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas, forceWebGL2 = false, contextSpy) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        // Disabled because it prevents Visual Regression Tests from working\n        // failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    const gl = \n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext(forceWebGL2 ? 'webgl2' : 'webgl', config) ||\n        canvas.getContext('experimental-webgl', config));\n    if (!gl) {\n        throw new Error('Unable to create WebGL context');\n    }\n    if (contextSpy) {\n        // Proxy the GL context to log all GL calls\n        return new Proxy(gl, {\n            get(target, prop) {\n                const value = target[prop];\n                if (typeof value === 'function') {\n                    contextSpy.increment(String(prop));\n                    return value.bind(target);\n                }\n                return value;\n            },\n        });\n    }\n    return gl;\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (isProductionEnvironment() === true)\n        return;\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\nlet premultiplyRGB = true;\n/**\n * RGB components should not be premultiplied when using Canvas renderer\n * @param mode  Renderer mode\n */\nexport function setPremultiplyMode(mode) {\n    premultiplyRGB = mode === 'webgl';\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * For the webGl renderer, each color channel is premultiplied by the final alpha value.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: Depending on the mode set by {@link setPremultiplyMode}, this method returns\n * a PREMULTIPLIED alpha color which is generally only useful in the context of the\n * internal rendering process. Use {@link mergeColorAlpha} if you need to blend an alpha\n * value into a color in the context of the Renderer's main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const rgbAlpha = premultiplyRGB ? newAlpha : 1;\n    const r = Math.trunc((rgba >>> 24) * rgbAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * rgbAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * rgbAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n/**\n * Returns image aspect ratio\n *\n * @param width\n * @param height\n * @returns\n */\nexport function getImageAspectRatio(width, height) {\n    return width / height;\n}\n/**\n * Checks import.meta if env is production\n *\n * @returns\n */\nexport function isProductionEnvironment() {\n    return import.meta.env && import.meta.env.PROD;\n}\n/**\n * Returns a new unique ID\n */\nlet nextId = 1;\nexport function getNewId() {\n    return nextId++;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport var TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"generic\"] = 0] = \"generic\";\n    TextureType[TextureType[\"color\"] = 1] = \"color\";\n    TextureType[TextureType[\"image\"] = 2] = \"image\";\n    TextureType[TextureType[\"noise\"] = 3] = \"noise\";\n    TextureType[TextureType[\"renderToTexture\"] = 4] = \"renderToTexture\";\n    TextureType[TextureType[\"subTexture\"] = 5] = \"subTexture\";\n})(TextureType || (TextureType = {}));\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    // aggregate state\n    state = 'initial';\n    renderableOwners = new Set();\n    renderable = false;\n    type = TextureType.generic;\n    preventCleanup = false;\n    ctxTexture;\n    textureData = null;\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Add/remove an owner to/from the Texture based on its renderability.\n     *\n     * @remarks\n     * Any object can own a texture, be it a CoreNode or even the state object\n     * from a Text Renderer.\n     *\n     * When the reference to the texture that an owner object holds is replaced\n     * or cleared it must call this with `renderable=false` to release the owner\n     * association.\n     *\n     * @param owner\n     * @param renderable\n     */\n    setRenderableOwner(owner, renderable) {\n        const oldSize = this.renderableOwners.size;\n        if (renderable === true) {\n            if (this.renderableOwners.has(owner) === false) {\n                // Add the owner to the set\n                this.renderableOwners.add(owner);\n            }\n            const newSize = this.renderableOwners.size;\n            if (newSize > oldSize && newSize === 1) {\n                this.renderable = true;\n                this.onChangeIsRenderable?.(true);\n                this.load();\n            }\n        }\n        else {\n            this.renderableOwners.delete(owner);\n            const newSize = this.renderableOwners.size;\n            if (newSize < oldSize && newSize === 0) {\n                this.renderable = false;\n                this.onChangeIsRenderable?.(false);\n                this.txManager.orphanTexture(this);\n            }\n        }\n    }\n    load() {\n        this.txManager.loadTexture(this);\n    }\n    /**\n     * Load the core context texture for this Texture.\n     * The ctxTexture is created by the renderer and lives on the GPU.\n     *\n     * @returns\n     */\n    loadCtxTexture() {\n        if (this.ctxTexture === undefined) {\n            this.ctxTexture = this.txManager.renderer.createCtxTexture(this);\n        }\n        return this.ctxTexture;\n    }\n    /**\n     * Free the core context texture for this Texture.\n     *\n     * @remarks\n     * The ctxTexture is created by the renderer and lives on the GPU.\n     */\n    free() {\n        this.ctxTexture?.free();\n    }\n    /**\n     * Free the source texture data for this Texture.\n     *\n     * @remarks\n     * The texture data is the source data that is used to populate the CoreContextTexture.\n     * e.g. ImageData that is downloaded from a URL.\n     */\n    freeTextureData() {\n        this.textureData = null;\n    }\n    setState(state, errorOrDimensions) {\n        if (this.state === state) {\n            return;\n        }\n        let payload = null;\n        if (state === 'loaded') {\n            this.dimensions = errorOrDimensions;\n            payload = this.dimensions;\n        }\n        else if (state === 'failed') {\n            this.error = errorOrDimensions;\n            payload = this.error;\n        }\n        // emit the new state\n        this.state = state;\n        this.emit(state, payload);\n    }\n    /**\n     * Get the texture data for this texture.\n     *\n     * @remarks\n     * This method is called by the CoreContextTexture when the texture is loaded.\n     * The texture data is then used to populate the CoreContextTexture.\n     *\n     * @returns\n     * The texture data for this texture.\n     */\n    async getTextureData() {\n        if (this.textureData === null) {\n            this.textureData = await this.getTextureSource();\n        }\n        return this.textureData;\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const PROTOCOL_REGEX = /^(data|ftps?|https?):/;\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function createBound(x1, y1, x2, y2, out) {\n    if (out) {\n        out.x1 = x1;\n        out.y1 = y1;\n        out.x2 = x2;\n        out.y2 = y2;\n        return out;\n    }\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\nexport function intersectBound(a, b, out) {\n    const intersection = createBound(Math.max(a.x1, b.x1), Math.max(a.y1, b.y1), Math.min(a.x2, b.x2), Math.min(a.y2, b.y2), out);\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return createBound(0, 0, 0, 0, intersection);\n}\nexport function boundsOverlap(a, b) {\n    return a.x1 < b.x2 && a.x2 > b.x1 && a.y1 < b.y2 && a.y2 > b.y1;\n}\nexport function convertBoundToRect(bound, out) {\n    if (out) {\n        out.x = bound.x1;\n        out.y = bound.y1;\n        out.width = bound.x2 - bound.x1;\n        out.height = bound.y2 - bound.y1;\n        return out;\n    }\n    return {\n        x: bound.x1,\n        y: bound.y1,\n        width: bound.x2 - bound.x1,\n        height: bound.y2 - bound.y1,\n    };\n}\nexport function intersectRect(a, b, out) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        if (out) {\n            out.x = x;\n            out.y = y;\n            out.width = width;\n            out.height = height;\n            return out;\n        }\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    if (out) {\n        out.x = 0;\n        out.y = 0;\n        out.width = 0;\n        out.height = 0;\n        return out;\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function copyRect(a, out) {\n    if (out) {\n        out.x = a.x;\n        out.y = a.y;\n        out.width = a.width;\n        out.height = a.height;\n        return out;\n    }\n    return {\n        x: a.x,\n        y: a.y,\n        width: a.width,\n        height: a.height,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function boundInsideBound(bound1, bound2) {\n    return (bound1.x1 <= bound2.x2 &&\n        bound1.y1 <= bound2.y2 &&\n        bound1.x2 >= bound2.x1 &&\n        bound1.y2 >= bound2.y1);\n}\nexport function boundLargeThanBound(bound1, bound2) {\n    return (bound1.x1 < bound2.x1 &&\n        bound1.x2 > bound2.x2 &&\n        bound1.y1 < bound2.y1 &&\n        bound1.y2 > bound2.y2);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\n/**\n * Create a preload bounds from a strict bound\n *\n * @param strictBound The strict boundary of the node\n * @param boundsMargin Boundary margin to apply to the strictBound\n * @returns\n */\nexport function createPreloadBounds(strictBound, boundsMargin) {\n    return createBound(strictBound.x1 - boundsMargin[3], strictBound.y1 - boundsMargin[0], strictBound.x2 + boundsMargin[1], strictBound.y2 + boundsMargin[2]);\n}\nexport function convertUrlToAbsolute(url) {\n    // handle local file imports if the url isn't remote resource or data blob\n    if (self.location.protocol === 'file:' && !PROTOCOL_REGEX.test(url)) {\n        const path = self.location.pathname.split('/');\n        path.pop();\n        const basePath = path.join('/');\n        const baseUrl = self.location.protocol + '//' + basePath;\n        // check if url has a leading dot\n        if (url.charAt(0) === '.') {\n            url = url.slice(1);\n        }\n        // check if url has a leading slash\n        if (url.charAt(0) === '/') {\n            url = url.slice(1);\n        }\n        return baseUrl + '/' + url;\n    }\n    const absoluteUrl = new URL(url, self.location.href);\n    return absoluteUrl.href;\n}\nexport function isBase64Image(src) {\n    return src.startsWith('data:') === true;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A 3D matrix representing a 2D graphics transformation\n *\n * @remarks\n * For convenience, entries in the first two rows can be accessed by the following\n * properties:\n * | ta tb tx |\n * | tc td ty |\n * | 0  0  1  |\n *\n * This matrix is optimized for 2D transformations and hence the last row will\n * always be considered [0, 0 ,1].\n *\n * To access a column major array for WebGL, use the {@link getFloatArr} method.\n */\nexport class Matrix3d {\n    ta;\n    tb;\n    tx;\n    tc;\n    td;\n    ty;\n    _floatArr = null;\n    /**\n     * Potential Mutation Flag\n     *\n     * @remarks\n     * This flag is set to true whenever the matrix is potentially modified.\n     * We don't waste CPU trying to identify if each operation actually modifies\n     * the matrix. Instead, we set this flag to true whenever we think the matrix\n     * is modified. This signals that the `floatArr` should to be updated.\n     */\n    mutation;\n    /**\n     * Creates a new 3x3 matrix.\n     *\n     * @param entries Row-major 3x3 matrix\n     */\n    constructor() {\n        this.ta = 0;\n        this.tb = 0;\n        this.tx = 0;\n        this.tc = 0;\n        this.td = 0;\n        this.ty = 0;\n        this.mutation = true;\n    }\n    /**\n     * Returns a temporary matrix that can be used for calculations.\n     *\n     * @remarks\n     * This is useful for avoiding allocations in tight loops.\n     *\n     * The matrix is not guaranteed to be the same between calls.\n     *\n     * @returns\n     */\n    static get temp() {\n        return tempMatrix;\n    }\n    static multiply(a, b, out) {\n        const e0 = a.ta * b.ta + a.tb * b.tc;\n        const e1 = a.ta * b.tb + a.tb * b.td;\n        const e2 = a.ta * b.tx + a.tb * b.ty + a.tx;\n        const e3 = a.tc * b.ta + a.td * b.tc;\n        const e4 = a.tc * b.tb + a.td * b.td;\n        const e5 = a.tc * b.tx + a.td * b.ty + a.ty;\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = e0;\n        out.tb = e1;\n        out.tx = e2;\n        out.tc = e3;\n        out.td = e4;\n        out.ty = e5;\n        out.mutation = true;\n        return out;\n    }\n    static identity(out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = 1;\n        out.tb = 0;\n        out.tx = 0;\n        out.tc = 0;\n        out.td = 1;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static translate(x, y, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = 1;\n        out.tb = 0;\n        out.tx = x;\n        out.tc = 0;\n        out.td = 1;\n        out.ty = y;\n        out.mutation = true;\n        return out;\n    }\n    static scale(sx, sy, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = sx;\n        out.tb = 0;\n        out.tx = 0;\n        out.tc = 0;\n        out.td = sy;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static rotate(angle, out) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = cos;\n        out.tb = -sin;\n        out.tx = 0;\n        out.tc = sin;\n        out.td = cos;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static copy(src, dst) {\n        if (!dst) {\n            dst = new Matrix3d();\n        }\n        dst.ta = src.ta;\n        dst.tc = src.tc;\n        dst.tb = src.tb;\n        dst.td = src.td;\n        dst.tx = src.tx;\n        dst.ty = src.ty;\n        dst.mutation = true;\n        return dst;\n    }\n    translate(x, y) {\n        this.tx = this.ta * x + this.tb * y + this.tx;\n        this.ty = this.tc * x + this.td * y + this.ty;\n        this.mutation = true;\n        return this;\n    }\n    scale(sx, sy) {\n        this.ta = this.ta * sx;\n        this.tb = this.tb * sy;\n        this.tc = this.tc * sx;\n        this.td = this.td * sy;\n        this.mutation = true;\n        return this;\n    }\n    rotate(angle) {\n        if (angle === 0 || !((angle % Math.PI) * 2)) {\n            return this;\n        }\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        const e0 = this.ta * cos + this.tb * sin;\n        const e1 = this.tb * cos - this.ta * sin;\n        const e3 = this.tc * cos + this.td * sin;\n        const e4 = this.td * cos - this.tc * sin;\n        this.ta = e0;\n        this.tb = e1;\n        this.tc = e3;\n        this.td = e4;\n        this.mutation = true;\n        return this;\n    }\n    multiply(other) {\n        return Matrix3d.multiply(this, other, this);\n    }\n    /**\n     * Returns the matrix as a Float32Array in column-major order.\n     *\n     * @remarks\n     * This method is optimized to avoid unnecessary allocations. The same array\n     * is returned every time this method is called, and is updated in place.\n     *\n     * WARNING: Use the array only for passing directly to a WebGL shader uniform\n     * during a frame render. Do not modify or hold onto the array for longer than\n     * a frame.\n     */\n    getFloatArr() {\n        if (!this._floatArr) {\n            this._floatArr = new Float32Array(9);\n        }\n        if (this.mutation) {\n            this._floatArr[0] = this.ta;\n            this._floatArr[1] = this.tc;\n            this._floatArr[2] = 0;\n            this._floatArr[3] = this.tb;\n            this._floatArr[4] = this.td;\n            this._floatArr[5] = 0;\n            this._floatArr[6] = this.tx;\n            this._floatArr[7] = this.ty;\n            this._floatArr[8] = 1;\n            this.mutation = false;\n        }\n        return this._floatArr;\n    }\n}\nconst tempMatrix = new Matrix3d();\n//# sourceMappingURL=Matrix3d.js.map","const rx1 = 0;\nconst rx2 = 2;\nconst rx3 = 4;\nconst rx4 = 6;\nconst ry1 = 1;\nconst ry2 = 3;\nconst ry3 = 5;\nconst ry4 = 7;\nexport class RenderCoords {\n    data;\n    constructor(entries) {\n        this.data = new Float32Array(8);\n        if (entries) {\n            this.data[rx1] = entries[rx1];\n            this.data[rx2] = entries[rx2];\n            this.data[rx3] = entries[rx3];\n            this.data[rx4] = entries[rx4];\n            this.data[ry1] = entries[ry1];\n            this.data[ry2] = entries[ry2];\n            this.data[ry3] = entries[ry3];\n            this.data[ry4] = entries[ry4];\n        }\n    }\n    static translate(x1, y1, x2, y2, x3, y3, x4, y4, out) {\n        if (!out) {\n            out = new RenderCoords();\n        }\n        out.data[rx1] = x1;\n        out.data[rx2] = x2;\n        out.data[rx3] = x3;\n        out.data[rx4] = x4;\n        out.data[ry1] = y1;\n        out.data[ry2] = y2;\n        out.data[ry3] = y3;\n        out.data[ry4] = y4;\n        return out;\n    }\n    get x1() {\n        return this.data[rx1];\n    }\n    get x2() {\n        return this.data[rx2];\n    }\n    get x3() {\n        return this.data[rx3];\n    }\n    get x4() {\n        return this.data[rx4];\n    }\n    get y1() {\n        return this.data[ry1];\n    }\n    get y2() {\n        return this.data[ry2];\n    }\n    get y3() {\n        return this.data[ry3];\n    }\n    get y4() {\n        return this.data[ry4];\n    }\n}\n//# sourceMappingURL=RenderCoords.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nconst timingMapping = {};\nconst timingLookup = {\n    ease: [0.25, 0.1, 0.25, 1.0],\n    'ease-in': [0.42, 0, 1.0, 1.0],\n    'ease-out': [0, 0, 0.58, 1.0],\n    'ease-in-out': [0.42, 0, 0.58, 1.0],\n    'ease-in-sine': [0.12, 0, 0.39, 0],\n    'ease-out-sine': [0.12, 0, 0.39, 0],\n    'ease-in-out-sine': [0.37, 0, 0.63, 1],\n    'ease-in-cubic': [0.32, 0, 0.67, 0],\n    'ease-out-cubic': [0.33, 1, 0.68, 1],\n    'ease-in-out-cubic': [0.65, 0, 0.35, 1],\n    'ease-in-circ': [0.55, 0, 1, 0.45],\n    'ease-out-circ': [0, 0.55, 0.45, 1],\n    'ease-in-out-circ': [0.85, 0, 0.15, 1],\n    'ease-in-back': [0.36, 0, 0.66, -0.56],\n    'ease-out-back': [0.34, 1.56, 0.64, 1],\n    'ease-in-out-back': [0.68, -0.6, 0.32, 1.6],\n};\nconst defaultTiming = (t) => t;\nconst parseCubicBezier = (str) => {\n    //cubic-bezier(0.84, 0.52, 0.56, 0.6)\n    const regex = /-?\\d*\\.?\\d+/g;\n    const match = str.match(regex);\n    if (match) {\n        const [num1, num2, num3, num4] = match;\n        const a = parseFloat(num1 || '0.42');\n        const b = parseFloat(num2 || '0');\n        const c = parseFloat(num3 || '1');\n        const d = parseFloat(num4 || '1');\n        const timing = getTimingBezier(a, b, c, d);\n        timingMapping[str] = timing;\n        return timing;\n    }\n    // parse failed, return linear\n    console.warn('Unknown cubic-bezier timing: ' + str);\n    return defaultTiming;\n};\nexport const getTimingFunction = (str) => {\n    if (str === 'linear') {\n        return defaultTiming;\n    }\n    if (timingMapping[str] !== undefined) {\n        return timingMapping[str] || defaultTiming;\n    }\n    if (str === 'step-start') {\n        return () => {\n            return 1;\n        };\n    }\n    if (str === 'step-end') {\n        return (time) => {\n            return time === 1 ? 1 : 0;\n        };\n    }\n    const lookup = timingLookup[str];\n    if (lookup !== undefined) {\n        const [a, b, c, d] = lookup;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - TS doesn't understand that we've checked for undefined\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const timing = getTimingBezier(a, b, c, d);\n        timingMapping[str] = timing;\n        return timing;\n    }\n    if (str.startsWith('cubic-bezier')) {\n        return parseCubicBezier(str);\n    }\n    console.warn('Unknown timing function: ' + str);\n    return defaultTiming;\n};\n/**\n * Convert bytes to string of megabytes with 2 decimal points\n *\n * @param bytes\n * @returns\n */\nexport function bytesToMb(bytes) {\n    return (bytes / 1024 / 1024).toFixed(2);\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../CoreNode.js';\nimport { getTimingFunction } from '../utils.js';\nimport { mergeColorProgress } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimation extends EventEmitter {\n    node;\n    props;\n    settings;\n    progress = 0;\n    delayFor = 0;\n    delay = 0;\n    timingFunction;\n    propValuesMap = {};\n    dynPropValuesMap = undefined;\n    constructor(node, props, settings) {\n        super();\n        this.node = node;\n        this.props = props;\n        for (const key in props) {\n            if (key !== 'shaderProps') {\n                if (this.propValuesMap['props'] === undefined) {\n                    this.propValuesMap['props'] = {};\n                }\n                this.propValuesMap['props'][key] = {\n                    start: node[key] || 0,\n                    target: props[key],\n                };\n            }\n            else if (node.shader.type !== 'DynamicShader') {\n                this.propValuesMap['shaderProps'] = {};\n                for (const key in props.shaderProps) {\n                    this.propValuesMap['shaderProps'][key] = {\n                        start: node.shader.props[key],\n                        target: props.shaderProps[key],\n                    };\n                }\n            }\n            else {\n                const shaderPropKeys = Object.keys(props.shaderProps);\n                const spLength = shaderPropKeys.length;\n                this.dynPropValuesMap = {};\n                for (let j = 0; j < spLength; j++) {\n                    const effectName = shaderPropKeys[j];\n                    const effect = props.shaderProps[effectName];\n                    this.dynPropValuesMap[effectName] = {};\n                    const effectProps = Object.entries(effect);\n                    const eLength = effectProps.length;\n                    for (let k = 0; k < eLength; k++) {\n                        const [key, value] = effectProps[k];\n                        this.dynPropValuesMap[effectName][key] = {\n                            start: node.shader.props[effectName][key],\n                            target: value,\n                        };\n                    }\n                }\n            }\n        }\n        const easing = settings.easing || 'linear';\n        const delay = settings.delay ?? 0;\n        this.settings = {\n            duration: settings.duration ?? 0,\n            delay,\n            easing,\n            loop: settings.loop ?? false,\n            repeat: settings.repeat ?? 0,\n            repeatDelay: settings.repeatDelay ?? 0,\n            stopMethod: settings.stopMethod ?? false,\n        };\n        this.timingFunction = getTimingFunction(easing);\n        this.delayFor = delay;\n        this.delay = delay;\n    }\n    reset() {\n        this.progress = 0;\n        this.delayFor = this.settings.delay || 0;\n        this.update(0);\n    }\n    restoreValues(target, valueMap) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            target[key] = value.start;\n        }\n    }\n    restore() {\n        this.reset();\n        if (this.propValuesMap['props'] !== undefined) {\n            this.restoreValues(this.node, this.propValuesMap['props']);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.restoreValues(this.node.shader.props, this.propValuesMap['shaderProps']);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.restoreValues(this.node.shader.props[key], this.dynPropValuesMap[key]);\n                }\n            }\n        }\n    }\n    reverseValues(valueMap) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            valueMap[key] = {\n                start: value.target,\n                target: value.start,\n            };\n        }\n    }\n    reverse() {\n        this.progress = 0;\n        if (this.propValuesMap['props'] !== undefined) {\n            this.reverseValues(this.propValuesMap['props']);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.reverseValues(this.propValuesMap['shaderProps']);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.reverseValues(this.dynPropValuesMap[key]);\n                }\n            }\n        }\n        // restore stop method if we are not looping\n        if (!this.settings.loop) {\n            this.settings.stopMethod = false;\n        }\n    }\n    applyEasing(p, s, e) {\n        return (this.timingFunction(p) || p) * (e - s) + s;\n    }\n    updateValue(propName, propValue, startValue, easing) {\n        if (this.progress === 1) {\n            return propValue;\n        }\n        if (this.progress === 0) {\n            return startValue;\n        }\n        const endValue = propValue;\n        if (propName.indexOf('color') !== -1) {\n            if (startValue === endValue) {\n                return startValue;\n            }\n            if (easing) {\n                const easingProgressValue = this.timingFunction(this.progress) || this.progress;\n                return mergeColorProgress(startValue, endValue, easingProgressValue);\n            }\n            return mergeColorProgress(startValue, endValue, this.progress);\n        }\n        if (easing) {\n            return this.applyEasing(this.progress, startValue, endValue);\n        }\n        return startValue + (endValue - startValue) * this.progress;\n    }\n    updateValues(target, valueMap, easing) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            target[key] = this.updateValue(key, value.target, value.start, easing);\n        }\n    }\n    update(dt) {\n        const { duration, loop, easing, stopMethod } = this.settings;\n        const { delayFor } = this;\n        if (duration === 0 && delayFor === 0) {\n            this.emit('finished', {});\n            return;\n        }\n        if (this.delayFor > 0) {\n            this.delayFor -= dt;\n            if (this.delayFor >= 0) {\n                // Either no or more delay left. Exit.\n                return;\n            }\n            else {\n                // We went beyond the delay time, add it back to dt so we can continue\n                // with the animation.\n                dt = -this.delayFor;\n                this.delayFor = 0;\n            }\n        }\n        if (duration === 0) {\n            // No duration, we are done.\n            this.emit('finished', {});\n            return;\n        }\n        if (this.progress === 0) {\n            // Progress is 0, we are starting the post-delay part of the animation.\n            this.emit('animating', {});\n        }\n        this.progress += dt / duration;\n        if (this.progress > 1) {\n            this.progress = loop ? 0 : 1;\n            this.delayFor = this.delay;\n            if (stopMethod) {\n                // If there's a stop method emit finished so the stop method can be applied.\n                // TODO: We should probably reevaluate how stopMethod is implemented as currently\n                // stop method 'reset' does not work when looping.\n                this.emit('finished', {});\n                return;\n            }\n        }\n        if (this.propValuesMap['props'] !== undefined) {\n            this.updateValues(this.node, this.propValuesMap['props'], easing);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.updateValues(this.node.shader.props, this.propValuesMap['shaderProps'], easing);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.updateValues(this.node.shader.props[key], this.dynPropValuesMap[key], easing);\n                }\n            }\n        }\n        if (this.progress < 1) {\n            this.emit('tick', { progress: this.progress });\n        }\n        if (this.progress === 1) {\n            this.emit('finished', {});\n        }\n    }\n}\n//# sourceMappingURL=CoreAnimation.js.map","/* eslint-disable @typescript-eslint/unbound-method */\n/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimationController extends EventEmitter {\n    manager;\n    animation;\n    stoppedPromise;\n    /**\n     * If this is null, then the animation is in a finished / stopped state.\n     */\n    stoppedResolve = null;\n    state;\n    constructor(manager, animation) {\n        super();\n        this.manager = manager;\n        this.animation = animation;\n        this.state = 'stopped';\n        // Initial stopped promise is resolved (since the animation is stopped)\n        this.stoppedPromise = Promise.resolve();\n        // Bind event handlers\n        this.onAnimating = this.onAnimating.bind(this);\n        this.onFinished = this.onFinished.bind(this);\n        this.onTick = this.onTick.bind(this);\n    }\n    start() {\n        if (this.state !== 'running' && this.state !== 'scheduled') {\n            this.makeStoppedPromise();\n            this.registerAnimation();\n            this.state = 'scheduled';\n        }\n        return this;\n    }\n    stop() {\n        this.unregisterAnimation();\n        if (this.stoppedResolve !== null) {\n            this.stoppedResolve();\n            this.stoppedResolve = null;\n            this.emit('stopped', this);\n        }\n        this.animation.reset();\n        this.state = 'stopped';\n        return this;\n    }\n    pause() {\n        this.unregisterAnimation();\n        this.state = 'paused';\n        return this;\n    }\n    restore() {\n        this.stoppedResolve = null;\n        this.animation.restore();\n        return this;\n    }\n    waitUntilStopped() {\n        return this.stoppedPromise;\n    }\n    registerAnimation() {\n        // Hook up event listeners\n        this.animation.once('finished', this.onFinished);\n        this.animation.on('animating', this.onAnimating);\n        this.animation.on('tick', this.onTick);\n        // Then register the animation\n        this.manager.registerAnimation(this.animation);\n    }\n    unregisterAnimation() {\n        // First unregister the animation\n        this.manager.unregisterAnimation(this.animation);\n        // Then unhook event listeners\n        this.animation.off('finished', this.onFinished);\n        this.animation.off('animating', this.onAnimating);\n        this.animation.off('tick', this.onTick);\n    }\n    makeStoppedPromise() {\n        if (this.stoppedResolve === null) {\n            this.stoppedPromise = new Promise((resolve) => {\n                this.stoppedResolve = resolve;\n            });\n        }\n    }\n    onFinished() {\n        assertTruthy(this.stoppedResolve);\n        // If the animation is looping, then we need to restart it.\n        const { loop, stopMethod } = this.animation.settings;\n        if (stopMethod === 'reverse') {\n            this.animation.once('finished', this.onFinished);\n            this.animation.reverse();\n            return;\n        }\n        if (loop) {\n            return;\n        }\n        // unregister animation\n        this.unregisterAnimation();\n        // resolve promise\n        this.stoppedResolve();\n        this.stoppedResolve = null;\n        this.emit('stopped', this);\n        this.state = 'stopped';\n    }\n    onAnimating() {\n        this.state = 'running';\n        this.emit('animating', this);\n    }\n    onTick(_animation, data) {\n        this.emit('tick', data);\n    }\n}\n//# sourceMappingURL=CoreAnimationController.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, getNewId, isProductionEnvironment, mergeColorAlphaPremultiplied, } from '../utils.js';\nimport {} from './textures/Texture.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { copyRect, intersectRect, createBound, boundInsideBound, boundLargeThanBound, createPreloadBounds, } from './lib/utils.js';\nimport { Matrix3d } from './lib/Matrix3d.js';\nimport { RenderCoords } from './lib/RenderCoords.js';\nimport { CoreAnimation } from './animations/CoreAnimation.js';\nimport { CoreAnimationController } from './animations/CoreAnimationController.js';\nexport var CoreNodeRenderState;\n(function (CoreNodeRenderState) {\n    CoreNodeRenderState[CoreNodeRenderState[\"Init\"] = 0] = \"Init\";\n    CoreNodeRenderState[CoreNodeRenderState[\"OutOfBounds\"] = 2] = \"OutOfBounds\";\n    CoreNodeRenderState[CoreNodeRenderState[\"InBounds\"] = 4] = \"InBounds\";\n    CoreNodeRenderState[CoreNodeRenderState[\"InViewport\"] = 8] = \"InViewport\";\n})(CoreNodeRenderState || (CoreNodeRenderState = {}));\nconst CoreNodeRenderStateMap = new Map();\nCoreNodeRenderStateMap.set(CoreNodeRenderState.Init, 'init');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.OutOfBounds, 'outOfBounds');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.InBounds, 'inBounds');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.InViewport, 'inViewport');\nexport var UpdateType;\n(function (UpdateType) {\n    /**\n     * Child updates\n     */\n    UpdateType[UpdateType[\"Children\"] = 1] = \"Children\";\n    /**\n     * Scale/Rotate transform update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `scaleRotateTransform`\n     */\n    UpdateType[UpdateType[\"ScaleRotate\"] = 2] = \"ScaleRotate\";\n    /**\n     * Translate transform update (x/y/width/height/pivot/mount)\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `localTransform`\n     */\n    UpdateType[UpdateType[\"Local\"] = 4] = \"Local\";\n    /**\n     * Global Transform update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `globalTransform`\n     * - `renderCoords`\n     * - `renderBound`\n     */\n    UpdateType[UpdateType[\"Global\"] = 8] = \"Global\";\n    /**\n     * Clipping rect update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `clippingRect`\n     */\n    UpdateType[UpdateType[\"Clipping\"] = 16] = \"Clipping\";\n    /**\n     * Calculated ZIndex update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `calcZIndex`\n     */\n    UpdateType[UpdateType[\"CalculatedZIndex\"] = 32] = \"CalculatedZIndex\";\n    /**\n     * Z-Index Sorted Children update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `children` (sorts children by their `calcZIndex`)\n     */\n    UpdateType[UpdateType[\"ZIndexSortedChildren\"] = 64] = \"ZIndexSortedChildren\";\n    /**\n     * Premultiplied Colors update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `premultipliedColorTl`\n     * - `premultipliedColorTr`\n     * - `premultipliedColorBl`\n     * - `premultipliedColorBr`\n     */\n    UpdateType[UpdateType[\"PremultipliedColors\"] = 128] = \"PremultipliedColors\";\n    /**\n     * World Alpha update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `worldAlpha` = `parent.worldAlpha` * `alpha`\n     */\n    UpdateType[UpdateType[\"WorldAlpha\"] = 256] = \"WorldAlpha\";\n    /**\n     * Render State update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `renderState`\n     */\n    UpdateType[UpdateType[\"RenderState\"] = 512] = \"RenderState\";\n    /**\n     * Is Renderable update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `isRenderable`\n     */\n    UpdateType[UpdateType[\"IsRenderable\"] = 1024] = \"IsRenderable\";\n    /**\n     * Render Texture update\n     */\n    UpdateType[UpdateType[\"RenderTexture\"] = 2048] = \"RenderTexture\";\n    /**\n     * Track if parent has render texture\n     */\n    UpdateType[UpdateType[\"ParentRenderTexture\"] = 4096] = \"ParentRenderTexture\";\n    /**\n     * Render Bounds update\n     */\n    UpdateType[UpdateType[\"RenderBounds\"] = 8192] = \"RenderBounds\";\n    /**\n     * None\n     */\n    UpdateType[UpdateType[\"None\"] = 0] = \"None\";\n    /**\n     * All\n     */\n    UpdateType[UpdateType[\"All\"] = 14335] = \"All\";\n})(UpdateType || (UpdateType = {}));\n/**\n * A visual Node in the Renderer scene graph.\n *\n * @remarks\n * CoreNode is an internally used class that represents a Renderer Node in the\n * scene graph. See INode.ts for the public APIs exposed to Renderer users\n * that include generic types for Shaders.\n */\nexport class CoreNode extends EventEmitter {\n    stage;\n    children = [];\n    _id = getNewId();\n    props;\n    updateType = UpdateType.All;\n    childUpdateType = UpdateType.None;\n    globalTransform;\n    scaleRotateTransform;\n    localTransform;\n    renderCoords;\n    renderBound;\n    strictBound;\n    preloadBound;\n    clippingRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n        valid: false,\n    };\n    isRenderable = false;\n    renderState = CoreNodeRenderState.Init;\n    worldAlpha = 1;\n    premultipliedColorTl = 0;\n    premultipliedColorTr = 0;\n    premultipliedColorBl = 0;\n    premultipliedColorBr = 0;\n    calcZIndex = 0;\n    hasRTTupdates = false;\n    parentHasRenderTexture = false;\n    rttParent = null;\n    constructor(stage, props) {\n        super();\n        this.stage = stage;\n        this.props = {\n            ...props,\n            parent: null,\n            texture: null,\n            src: null,\n            rtt: false,\n        };\n        // Assign props to instance\n        this.parent = props.parent;\n        this.texture = props.texture;\n        this.src = props.src;\n        this.rtt = props.rtt;\n        this.setUpdateType(UpdateType.ScaleRotate |\n            UpdateType.Local |\n            UpdateType.RenderBounds |\n            UpdateType.RenderState);\n        if (isProductionEnvironment() === false && props.preventCleanup === true) {\n            console.warn('CoreNode.preventCleanup: Is deprecated and will be removed in upcoming release, please use textureOptions.preventCleanup instead');\n        }\n        // if the default texture isn't loaded yet, wait for it to load\n        // this only happens when the node is created before the stage is ready\n        if (this.stage.defaultTexture &&\n            this.stage.defaultTexture.state !== 'loaded') {\n            this.stage.defaultTexture.once('loaded', () => {\n                this.setUpdateType(UpdateType.IsRenderable);\n            });\n        }\n    }\n    //#region Textures\n    loadTexture() {\n        const { texture } = this.props;\n        assertTruthy(texture);\n        // If texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            if (this.textureOptions.preload === true) {\n                this.stage.txManager.loadTexture(texture);\n            }\n            texture.preventCleanup =\n                this.props.textureOptions?.preventCleanup ?? false;\n            texture.on('loaded', this.onTextureLoaded);\n            texture.on('failed', this.onTextureFailed);\n            texture.on('freed', this.onTextureFreed);\n            // If the parent is a render texture, the initial texture status\n            // will be set to freed until the texture is processed by the\n            // Render RTT nodes. So we only need to listen fo changes and\n            // no need to check the texture.state until we restructure how\n            // textures are being processed.\n            if (this.parentHasRenderTexture) {\n                this.notifyParentRTTOfUpdate();\n                return;\n            }\n            if (texture.state === 'loaded') {\n                assertTruthy(texture.dimensions);\n                this.onTextureLoaded(texture, texture.dimensions);\n            }\n            else if (texture.state === 'failed') {\n                assertTruthy(texture.error);\n                this.onTextureFailed(texture, texture.error);\n            }\n            else if (texture.state === 'freed') {\n                this.onTextureFreed(texture);\n            }\n        });\n    }\n    unloadTexture() {\n        if (this.texture !== null) {\n            this.texture.off('loaded', this.onTextureLoaded);\n            this.texture.off('failed', this.onTextureFailed);\n            this.texture.off('freed', this.onTextureFreed);\n            this.texture.setRenderableOwner(this, false);\n        }\n    }\n    autosizeNode(dimensions) {\n        if (this.autosize) {\n            this.width = dimensions.width;\n            this.height = dimensions.height;\n        }\n    }\n    onTextureLoaded = (_, dimensions) => {\n        this.autosizeNode(dimensions);\n        this.setUpdateType(UpdateType.IsRenderable);\n        // Texture was loaded. In case the RAF loop has already stopped, we request\n        // a render to ensure the texture is rendered.\n        this.stage.requestRender();\n        // If parent has a render texture, flag that we need to update\n        if (this.parentHasRenderTexture) {\n            this.notifyParentRTTOfUpdate();\n        }\n        // ignore 1x1 pixel textures\n        if (dimensions.width > 1 && dimensions.height > 1) {\n            this.emit('loaded', {\n                type: 'texture',\n                dimensions,\n            });\n        }\n        // Trigger a local update if the texture is loaded and the resizeMode is 'contain'\n        if (this.props.textureOptions?.resizeMode?.type === 'contain') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    };\n    onTextureFailed = (_, error) => {\n        this.setUpdateType(UpdateType.IsRenderable);\n        // If parent has a render texture, flag that we need to update\n        if (this.parentHasRenderTexture) {\n            this.notifyParentRTTOfUpdate();\n        }\n        this.emit('failed', {\n            type: 'texture',\n            error,\n        });\n    };\n    onTextureFreed = () => {\n        this.setUpdateType(UpdateType.IsRenderable);\n        // If parent has a render texture, flag that we need to update\n        if (this.parentHasRenderTexture) {\n            this.notifyParentRTTOfUpdate();\n        }\n        this.emit('freed', {\n            type: 'texture',\n        });\n    };\n    //#endregion Textures\n    /**\n     * Change types types is used to determine the scope of the changes being applied\n     *\n     * @remarks\n     * See {@link UpdateType} for more information on each type\n     *\n     * @param type\n     */\n    setUpdateType(type) {\n        this.updateType |= type;\n        const parent = this.props.parent;\n        if (!parent)\n            return;\n        if ((parent.updateType & UpdateType.Children) === 0) {\n            // Inform the parent if it doesn’t already have a child update\n            parent.setUpdateType(UpdateType.Children);\n        }\n    }\n    sortChildren() {\n        this.children.sort((a, b) => a.calcZIndex - b.calcZIndex);\n    }\n    updateScaleRotateTransform() {\n        const { rotation, scaleX, scaleY } = this.props;\n        // optimize simple translation cases\n        if (rotation === 0 && scaleX === 1 && scaleY === 1) {\n            this.scaleRotateTransform = undefined;\n            return;\n        }\n        this.scaleRotateTransform = Matrix3d.rotate(rotation, this.scaleRotateTransform).scale(scaleX, scaleY);\n    }\n    updateLocalTransform() {\n        const { x, y, width, height } = this.props;\n        const mountTranslateX = this.props.mountX * width;\n        const mountTranslateY = this.props.mountY * height;\n        if (this.scaleRotateTransform) {\n            const pivotTranslateX = this.props.pivotX * width;\n            const pivotTranslateY = this.props.pivotY * height;\n            this.localTransform = Matrix3d.translate(x - mountTranslateX + pivotTranslateX, y - mountTranslateY + pivotTranslateY, this.localTransform)\n                .multiply(this.scaleRotateTransform)\n                .translate(-pivotTranslateX, -pivotTranslateY);\n        }\n        else {\n            this.localTransform = Matrix3d.translate(x - mountTranslateX, y - mountTranslateY, this.localTransform);\n        }\n        // Handle 'contain' resize mode\n        const texture = this.props.texture;\n        if (texture &&\n            texture.dimensions &&\n            this.props.textureOptions?.resizeMode?.type === 'contain') {\n            let resizeModeScaleX = 1;\n            let resizeModeScaleY = 1;\n            let extraX = 0;\n            let extraY = 0;\n            const { width: tw, height: th } = texture.dimensions;\n            const txAspectRatio = tw / th;\n            const nodeAspectRatio = width / height;\n            if (txAspectRatio > nodeAspectRatio) {\n                // Texture is wider than node\n                // Center the node vertically (shift down by extraY)\n                // Scale the node vertically to maintain original aspect ratio\n                const scaleX = width / tw;\n                const scaledTxHeight = th * scaleX;\n                extraY = (height - scaledTxHeight) / 2;\n                resizeModeScaleY = scaledTxHeight / height;\n            }\n            else {\n                // Texture is taller than node (or equal)\n                // Center the node horizontally (shift right by extraX)\n                // Scale the node horizontally to maintain original aspect ratio\n                const scaleY = height / th;\n                const scaledTxWidth = tw * scaleY;\n                extraX = (width - scaledTxWidth) / 2;\n                resizeModeScaleX = scaledTxWidth / width;\n            }\n            // Apply the extra translation and scale to the local transform\n            this.localTransform\n                .translate(extraX, extraY)\n                .scale(resizeModeScaleX, resizeModeScaleY);\n        }\n        this.setUpdateType(UpdateType.Global);\n    }\n    /**\n     * @todo: test for correct calculation flag\n     * @param delta\n     */\n    update(delta, parentClippingRect) {\n        if (this.updateType & UpdateType.ScaleRotate) {\n            this.updateScaleRotateTransform();\n            this.setUpdateType(UpdateType.Local);\n        }\n        if (this.updateType & UpdateType.Local) {\n            this.updateLocalTransform();\n            this.setUpdateType(UpdateType.Global);\n        }\n        const parent = this.props.parent;\n        let renderState = null;\n        // Handle specific RTT updates at this node level\n        if (this.updateType & UpdateType.RenderTexture && this.rtt) {\n            this.hasRTTupdates = true;\n        }\n        if (this.updateType & UpdateType.Global) {\n            assertTruthy(this.localTransform);\n            this.globalTransform = Matrix3d.copy(parent?.globalTransform || this.localTransform, this.globalTransform);\n            if (this.parentHasRenderTexture && this.props.parent?.rtt) {\n                this.globalTransform = Matrix3d.identity();\n            }\n            if (parent) {\n                this.globalTransform.multiply(this.localTransform);\n            }\n            this.calculateRenderCoords();\n            this.updateBoundingRect();\n            this.setUpdateType(UpdateType.RenderState | UpdateType.Children);\n            this.childUpdateType |= UpdateType.Global;\n            if (this.clipping === true) {\n                this.setUpdateType(UpdateType.Clipping | UpdateType.RenderBounds);\n                this.childUpdateType |= UpdateType.RenderBounds;\n            }\n        }\n        if (this.updateType & UpdateType.RenderBounds) {\n            this.createRenderBounds();\n            this.setUpdateType(UpdateType.RenderState);\n            this.setUpdateType(UpdateType.Children);\n        }\n        if (this.updateType & UpdateType.RenderState) {\n            renderState = this.checkRenderBounds();\n            this.setUpdateType(UpdateType.IsRenderable);\n            // if we're not going out of bounds, update the render state\n            // this is done so the update loop can finish before we mark a node\n            // as out of bounds\n            if (renderState !== CoreNodeRenderState.OutOfBounds) {\n                this.updateRenderState(renderState);\n            }\n        }\n        if (this.updateType & UpdateType.WorldAlpha) {\n            if (parent) {\n                this.worldAlpha = parent.worldAlpha * this.props.alpha;\n            }\n            else {\n                this.worldAlpha = this.props.alpha;\n            }\n            this.setUpdateType(UpdateType.Children |\n                UpdateType.PremultipliedColors |\n                UpdateType.IsRenderable);\n            this.childUpdateType |= UpdateType.WorldAlpha;\n        }\n        if (this.updateType & UpdateType.IsRenderable) {\n            this.updateIsRenderable();\n        }\n        if (this.updateType & UpdateType.Clipping) {\n            this.calculateClippingRect(parentClippingRect);\n            this.setUpdateType(UpdateType.Children);\n            this.childUpdateType |= UpdateType.Clipping;\n            this.childUpdateType |= UpdateType.RenderBounds;\n        }\n        if (this.updateType & UpdateType.PremultipliedColors) {\n            this.premultipliedColorTl = mergeColorAlphaPremultiplied(this.props.colorTl, this.worldAlpha, true);\n            // If all the colors are the same just sent them all to the same value\n            if (this.props.colorTl === this.props.colorTr &&\n                this.props.colorBl === this.props.colorBr &&\n                this.props.colorTl === this.props.colorBl) {\n                this.premultipliedColorTr =\n                    this.premultipliedColorBl =\n                        this.premultipliedColorBr =\n                            this.premultipliedColorTl;\n            }\n            else {\n                this.premultipliedColorTr = mergeColorAlphaPremultiplied(this.props.colorTr, this.worldAlpha, true);\n                this.premultipliedColorBl = mergeColorAlphaPremultiplied(this.props.colorBl, this.worldAlpha, true);\n                this.premultipliedColorBr = mergeColorAlphaPremultiplied(this.props.colorBr, this.worldAlpha, true);\n            }\n        }\n        // No need to update zIndex if there is no parent\n        if (parent !== null && this.updateType & UpdateType.CalculatedZIndex) {\n            this.calculateZIndex();\n            // Tell parent to re-sort children\n            parent.setUpdateType(UpdateType.ZIndexSortedChildren);\n        }\n        if (this.props.strictBounds === true &&\n            this.renderState === CoreNodeRenderState.OutOfBounds) {\n            return;\n        }\n        if (this.updateType & UpdateType.Children && this.children.length > 0) {\n            for (let i = 0, length = this.children.length; i < length; i++) {\n                const child = this.children[i];\n                child.setUpdateType(this.childUpdateType);\n                if (child.updateType === 0) {\n                    continue;\n                }\n                let childClippingRect = this.clippingRect;\n                if (this.rtt === true) {\n                    childClippingRect = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                        valid: false,\n                    };\n                }\n                child.update(delta, childClippingRect);\n            }\n        }\n        // If the node has an RTT parent and requires a texture re-render, inform the RTT parent\n        // if (this.parentHasRenderTexture && this.updateType & UpdateType.RenderTexture) {\n        // @TODO have a more scoped down updateType for RTT updates\n        if (this.parentHasRenderTexture && this.updateType > 0) {\n            this.notifyParentRTTOfUpdate();\n        }\n        // Sorting children MUST happen after children have been updated so\n        // that they have the oppotunity to update their calculated zIndex.\n        if (this.updateType & UpdateType.ZIndexSortedChildren) {\n            // reorder z-index\n            this.sortChildren();\n        }\n        // If we're out of bounds, apply the render state now\n        // this is done so nodes can finish their entire update loop before\n        // being marked as out of bounds\n        if (renderState === CoreNodeRenderState.OutOfBounds) {\n            this.updateRenderState(renderState);\n            this.updateIsRenderable();\n            if (this.rtt === true &&\n                renderState === CoreNodeRenderState.OutOfBounds) {\n                // notify children that we are going out of bounds\n                // we have to do this now before we stop processing the render tree\n                this.notifyChildrenRTTOfUpdate(renderState);\n                // this.childUpdateType |= UpdateType.RenderState;\n            }\n        }\n        // reset update type\n        this.updateType = 0;\n        this.childUpdateType = 0;\n    }\n    findParentRTTNode() {\n        let rttNode = this.parent;\n        while (rttNode && !rttNode.rtt) {\n            rttNode = rttNode.parent;\n        }\n        return rttNode;\n    }\n    getRTTParentRenderState() {\n        const rttNode = this.rttParent || this.findParentRTTNode();\n        if (!rttNode) {\n            return null;\n        }\n        return rttNode.renderState;\n    }\n    notifyChildrenRTTOfUpdate(renderState) {\n        for (const child of this.children) {\n            // force child to update render state\n            child.updateRenderState(renderState);\n            child.updateIsRenderable();\n            child.notifyChildrenRTTOfUpdate(renderState);\n        }\n    }\n    notifyParentRTTOfUpdate() {\n        if (this.parent === null) {\n            return;\n        }\n        const rttNode = this.rttParent || this.findParentRTTNode();\n        if (!rttNode) {\n            return;\n        }\n        // If an RTT node is found, mark it for re-rendering\n        rttNode.hasRTTupdates = true;\n        rttNode.setUpdateType(UpdateType.RenderTexture);\n        // if rttNode is nested, also make it update its RTT parent\n        if (rttNode.parentHasRenderTexture === true) {\n            rttNode.notifyParentRTTOfUpdate();\n        }\n    }\n    checkRenderBounds() {\n        assertTruthy(this.renderBound);\n        assertTruthy(this.strictBound);\n        assertTruthy(this.preloadBound);\n        // if we are part of a parent render texture, we're always in bounds\n        if (this.parentHasRenderTexture === true) {\n            return this.getRTTParentRenderState() || CoreNodeRenderState.OutOfBounds;\n        }\n        if (boundInsideBound(this.renderBound, this.strictBound)) {\n            return CoreNodeRenderState.InViewport;\n        }\n        if (boundInsideBound(this.renderBound, this.preloadBound)) {\n            return CoreNodeRenderState.InBounds;\n        }\n        // check if we're larger then our parent, we're definitely in the viewport\n        if (boundLargeThanBound(this.renderBound, this.strictBound)) {\n            return CoreNodeRenderState.InViewport;\n        }\n        // check if we dont have dimensions, take our parent's render state\n        if (this.parent !== null &&\n            (this.props.width === 0 || this.props.height === 0)) {\n            return this.parent.renderState;\n        }\n        return CoreNodeRenderState.OutOfBounds;\n    }\n    updateBoundingRect() {\n        const { renderCoords, globalTransform: transform } = this;\n        assertTruthy(transform);\n        assertTruthy(renderCoords);\n        const { tb, tc } = transform;\n        const { x1, y1, x3, y3 } = renderCoords;\n        if (tb === 0 || tc === 0) {\n            this.renderBound = createBound(x1, y1, x3, y3, this.renderBound);\n        }\n        else {\n            const { x2, x4, y2, y4 } = renderCoords;\n            this.renderBound = createBound(Math.min(x1, x2, x3, x4), Math.min(y1, y2, y3, y4), Math.max(x1, x2, x3, x4), Math.max(y1, y2, y3, y4), this.renderBound);\n        }\n    }\n    createRenderBounds() {\n        assertTruthy(this.stage);\n        if (this.parent !== null && this.parent.strictBound !== undefined) {\n            // we have a parent with a valid bound, copy it\n            const parentBound = this.parent.strictBound;\n            this.strictBound = createBound(parentBound.x1, parentBound.y1, parentBound.x2, parentBound.y2);\n            this.preloadBound = createPreloadBounds(this.strictBound, this.stage.boundsMargin);\n        }\n        else {\n            // no parent or parent does not have a bound, take the stage boundaries\n            this.strictBound = this.stage.strictBound;\n            this.preloadBound = this.stage.preloadBound;\n        }\n        // if clipping is disabled, we're done\n        if (this.props.clipping === false) {\n            return;\n        }\n        // only create local clipping bounds if node itself is in bounds\n        // this can only be done if we have a render bound already\n        if (this.renderBound === undefined) {\n            return;\n        }\n        // if we're out of bounds, we're done\n        if (boundInsideBound(this.renderBound, this.strictBound) === false) {\n            return;\n        }\n        // clipping is enabled and we are in bounds create our own bounds\n        const { x, y, width, height } = this.props;\n        const { tx, ty } = this.globalTransform || {};\n        const _x = tx ?? x;\n        const _y = ty ?? y;\n        this.strictBound = createBound(_x, _y, _x + width, _y + height, this.strictBound);\n        this.preloadBound = createPreloadBounds(this.strictBound, this.stage.boundsMargin);\n    }\n    updateRenderState(renderState) {\n        if (renderState === this.renderState) {\n            return;\n        }\n        const previous = this.renderState;\n        this.renderState = renderState;\n        const event = CoreNodeRenderStateMap.get(renderState);\n        assertTruthy(event);\n        this.emit(event, {\n            previous,\n            current: renderState,\n        });\n    }\n    /**\n     * Updates the `isRenderable` property based on various conditions.\n     */\n    updateIsRenderable() {\n        let newIsRenderable = false;\n        let needsTextureOwnership = false;\n        // If the node is out of bounds or has an alpha of 0, it is not renderable\n        if (this.checkBasicRenderability() === false) {\n            this.updateTextureOwnership(false);\n            this.setRenderable(false);\n            return;\n        }\n        if (this.texture !== null) {\n            needsTextureOwnership = true;\n            // we're only renderable if the texture state is loaded\n            newIsRenderable = this.texture.state === 'loaded';\n        }\n        else if ((this.hasShader() || this.hasColorProperties() === true) &&\n            this.hasDimensions() === true) {\n            // This mean we have dimensions and a color set, so we can render a ColorTexture\n            if (this.stage.defaultTexture &&\n                this.stage.defaultTexture.state === 'loaded') {\n                newIsRenderable = true;\n            }\n        }\n        this.updateTextureOwnership(needsTextureOwnership);\n        this.setRenderable(newIsRenderable);\n    }\n    /**\n     * Checks if the node is renderable based on world alpha, dimensions and out of bounds status.\n     */\n    checkBasicRenderability() {\n        if (this.worldAlpha === 0 || this.isOutOfBounds() === true) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Sets the renderable state and triggers changes if necessary.\n     * @param isRenderable - The new renderable state\n     */\n    setRenderable(isRenderable) {\n        this.isRenderable = isRenderable;\n    }\n    /**\n     * Changes the renderable state of the node.\n     */\n    updateTextureOwnership(isRenderable) {\n        this.texture?.setRenderableOwner(this, isRenderable);\n    }\n    /**\n     * Checks if the node is out of the viewport bounds.\n     */\n    isOutOfBounds() {\n        return this.renderState <= CoreNodeRenderState.OutOfBounds;\n    }\n    /**\n     * Checks if the node has dimensions (width/height)\n     */\n    hasDimensions() {\n        return this.props.width !== 0 && this.props.height !== 0;\n    }\n    /**\n     * Checks if the node has any color properties set.\n     */\n    hasColorProperties() {\n        return (this.props.color !== 0 ||\n            this.props.colorTop !== 0 ||\n            this.props.colorBottom !== 0 ||\n            this.props.colorLeft !== 0 ||\n            this.props.colorRight !== 0 ||\n            this.props.colorTl !== 0 ||\n            this.props.colorTr !== 0 ||\n            this.props.colorBl !== 0 ||\n            this.props.colorBr !== 0);\n    }\n    hasShader() {\n        return this.props.shader !== null;\n    }\n    calculateRenderCoords() {\n        const { width, height, globalTransform: transform } = this;\n        assertTruthy(transform);\n        const { tx, ty, ta, tb, tc, td } = transform;\n        if (tb === 0 && tc === 0) {\n            const minX = tx;\n            const maxX = tx + width * ta;\n            const minY = ty;\n            const maxY = ty + height * td;\n            this.renderCoords = RenderCoords.translate(\n            //top-left\n            minX, minY, \n            //top-right\n            maxX, minY, \n            //bottom-right\n            maxX, maxY, \n            //bottom-left\n            minX, maxY, this.renderCoords);\n        }\n        else {\n            this.renderCoords = RenderCoords.translate(\n            //top-left\n            tx, ty, \n            //top-right\n            tx + width * ta, ty + width * tc, \n            //bottom-right\n            tx + width * ta + height * tb, ty + width * tc + height * td, \n            //bottom-left\n            tx + height * tb, ty + height * td, this.renderCoords);\n        }\n    }\n    /**\n     * This function calculates the clipping rectangle for a node.\n     *\n     * The function then checks if the node is rotated. If the node requires clipping and is not rotated, a new clipping rectangle is created based on the node's global transform and dimensions.\n     * If a parent clipping rectangle exists, it is intersected with the node's clipping rectangle (if it exists), or replaces the node's clipping rectangle.\n     *\n     * Finally, the node's parentClippingRect and clippingRect properties are updated.\n     */\n    calculateClippingRect(parentClippingRect) {\n        assertTruthy(this.globalTransform);\n        const { clippingRect, props, globalTransform: gt } = this;\n        const { clipping } = props;\n        const isRotated = gt.tb !== 0 || gt.tc !== 0;\n        if (clipping === true && isRotated === false) {\n            clippingRect.x = gt.tx;\n            clippingRect.y = gt.ty;\n            clippingRect.width = this.width * gt.ta;\n            clippingRect.height = this.height * gt.td;\n            clippingRect.valid = true;\n        }\n        else {\n            clippingRect.valid = false;\n        }\n        if (parentClippingRect.valid === true && clippingRect.valid === true) {\n            // Intersect parent clipping rect with node clipping rect\n            intersectRect(parentClippingRect, clippingRect, clippingRect);\n        }\n        else if (parentClippingRect.valid === true) {\n            // Copy parent clipping rect\n            copyRect(parentClippingRect, clippingRect);\n            clippingRect.valid = true;\n        }\n    }\n    calculateZIndex() {\n        const props = this.props;\n        const z = props.zIndex || 0;\n        const p = props.parent?.zIndex || 0;\n        let zIndex = z;\n        if (props.parent?.zIndexLocked) {\n            zIndex = z < p ? z : p;\n        }\n        this.calcZIndex = zIndex;\n    }\n    /**\n     * Destroy the node and cleanup all resources\n     */\n    destroy() {\n        this.unloadTexture();\n        this.clippingRect.valid = false;\n        this.isRenderable = false;\n        this.renderCoords = undefined;\n        this.renderBound = undefined;\n        this.strictBound = undefined;\n        this.preloadBound = undefined;\n        this.globalTransform = undefined;\n        this.scaleRotateTransform = undefined;\n        this.localTransform = undefined;\n        this.props.texture = null;\n        this.props.shader = this.stage.defShaderCtr;\n        while (this.children.length > 0) {\n            this.children[0]?.destroy();\n        }\n        // This very action will also remove the node from the parent's children array\n        this.parent = null;\n        if (this.rtt) {\n            this.stage.renderer.removeRTTNode(this);\n        }\n        this.removeAllListeners();\n    }\n    renderQuads(renderer) {\n        // Prevent quad rendering if parent has a render texture\n        // and renderer is not currently rendering to a texture\n        if (this.parentHasRenderTexture) {\n            if (!renderer.renderToTextureActive) {\n                return;\n            }\n            // Prevent quad rendering if parent render texture is not the active render texture\n            if (this.parentRenderTexture !== renderer.activeRttNode) {\n                return;\n            }\n        }\n        assertTruthy(this.globalTransform);\n        assertTruthy(this.renderCoords);\n        // add to list of renderables to be sorted before rendering\n        renderer.addQuad({\n            width: this.props.width,\n            height: this.props.height,\n            colorTl: this.premultipliedColorTl,\n            colorTr: this.premultipliedColorTr,\n            colorBl: this.premultipliedColorBl,\n            colorBr: this.premultipliedColorBr,\n            // if we do not have a texture, use the default texture\n            // this assumes any renderable node is either a distinct texture or a ColorTexture\n            texture: this.texture || this.stage.defaultTexture,\n            textureOptions: this.textureOptions,\n            zIndex: this.zIndex,\n            shader: this.shader.shader,\n            shaderProps: this.shader.getResolvedProps(),\n            alpha: this.worldAlpha,\n            clippingRect: this.clippingRect,\n            tx: this.globalTransform.tx,\n            ty: this.globalTransform.ty,\n            ta: this.globalTransform.ta,\n            tb: this.globalTransform.tb,\n            tc: this.globalTransform.tc,\n            td: this.globalTransform.td,\n            renderCoords: this.renderCoords,\n            rtt: this.rtt,\n            parentHasRenderTexture: this.parentHasRenderTexture,\n            framebufferDimensions: this.framebufferDimensions,\n        });\n    }\n    //#region Properties\n    get id() {\n        return this._id;\n    }\n    get data() {\n        return this.props.data;\n    }\n    set data(d) {\n        this.props.data = d;\n    }\n    get x() {\n        return this.props.x;\n    }\n    set x(value) {\n        if (this.props.x !== value) {\n            this.props.x = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get absX() {\n        return (this.props.x +\n            -this.props.width * this.props.mountX +\n            (this.props.parent?.absX || this.props.parent?.globalTransform?.tx || 0));\n    }\n    get absY() {\n        return (this.props.y +\n            -this.props.height * this.props.mountY +\n            (this.props.parent?.absY ?? 0));\n    }\n    get y() {\n        return this.props.y;\n    }\n    set y(value) {\n        if (this.props.y !== value) {\n            this.props.y = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        if (this.props.width !== value) {\n            this.props.width = value;\n            this.setUpdateType(UpdateType.Local);\n            if (this.props.rtt) {\n                this.texture = this.stage.txManager.createTexture('RenderTexture', {\n                    width: this.width,\n                    height: this.height,\n                });\n                this.setUpdateType(UpdateType.RenderTexture);\n            }\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        if (this.props.height !== value) {\n            this.props.height = value;\n            this.setUpdateType(UpdateType.Local);\n            if (this.props.rtt) {\n                this.texture = this.stage.txManager.createTexture('RenderTexture', {\n                    width: this.width,\n                    height: this.height,\n                });\n                this.setUpdateType(UpdateType.RenderTexture);\n            }\n        }\n    }\n    get scale() {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        return this.scaleX;\n    }\n    set scale(value) {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        this.scaleX = value;\n        this.scaleY = value;\n    }\n    get scaleX() {\n        return this.props.scaleX;\n    }\n    set scaleX(value) {\n        if (this.props.scaleX !== value) {\n            this.props.scaleX = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get scaleY() {\n        return this.props.scaleY;\n    }\n    set scaleY(value) {\n        if (this.props.scaleY !== value) {\n            this.props.scaleY = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get mount() {\n        return this.props.mount;\n    }\n    set mount(value) {\n        if (this.props.mountX !== value || this.props.mountY !== value) {\n            this.props.mountX = value;\n            this.props.mountY = value;\n            this.props.mount = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get mountX() {\n        return this.props.mountX;\n    }\n    set mountX(value) {\n        if (this.props.mountX !== value) {\n            this.props.mountX = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get mountY() {\n        return this.props.mountY;\n    }\n    set mountY(value) {\n        if (this.props.mountY !== value) {\n            this.props.mountY = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivot() {\n        return this.props.pivot;\n    }\n    set pivot(value) {\n        if (this.props.pivotX !== value || this.props.pivotY !== value) {\n            this.props.pivotX = value;\n            this.props.pivotY = value;\n            this.props.pivot = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivotX() {\n        return this.props.pivotX;\n    }\n    set pivotX(value) {\n        if (this.props.pivotX !== value) {\n            this.props.pivotX = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivotY() {\n        return this.props.pivotY;\n    }\n    set pivotY(value) {\n        if (this.props.pivotY !== value) {\n            this.props.pivotY = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get rotation() {\n        return this.props.rotation;\n    }\n    set rotation(value) {\n        if (this.props.rotation !== value) {\n            this.props.rotation = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get alpha() {\n        return this.props.alpha;\n    }\n    set alpha(value) {\n        this.props.alpha = value;\n        this.setUpdateType(UpdateType.PremultipliedColors |\n            UpdateType.WorldAlpha |\n            UpdateType.Children |\n            UpdateType.IsRenderable);\n        this.childUpdateType |= UpdateType.WorldAlpha;\n    }\n    get autosize() {\n        return this.props.autosize;\n    }\n    set autosize(value) {\n        this.props.autosize = value;\n    }\n    get clipping() {\n        return this.props.clipping;\n    }\n    set clipping(value) {\n        this.props.clipping = value;\n        this.setUpdateType(UpdateType.Clipping | UpdateType.RenderBounds | UpdateType.Children);\n        this.childUpdateType |= UpdateType.Global | UpdateType.Clipping;\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(value) {\n        this.colorTop = value;\n        this.colorBottom = value;\n        this.colorLeft = value;\n        this.colorRight = value;\n        this.props.color = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTop() {\n        return this.props.colorTop;\n    }\n    set colorTop(value) {\n        if (this.props.colorTl !== value || this.props.colorTr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n        }\n        this.props.colorTop = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBottom() {\n        return this.props.colorBottom;\n    }\n    set colorBottom(value) {\n        if (this.props.colorBl !== value || this.props.colorBr !== value) {\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.colorBottom = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorLeft() {\n        return this.props.colorLeft;\n    }\n    set colorLeft(value) {\n        if (this.props.colorTl !== value || this.props.colorBl !== value) {\n            this.colorTl = value;\n            this.colorBl = value;\n        }\n        this.props.colorLeft = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorRight() {\n        return this.props.colorRight;\n    }\n    set colorRight(value) {\n        if (this.props.colorTr !== value || this.props.colorBr !== value) {\n            this.colorTr = value;\n            this.colorBr = value;\n        }\n        this.props.colorRight = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTl() {\n        return this.props.colorTl;\n    }\n    set colorTl(value) {\n        this.props.colorTl = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTr() {\n        return this.props.colorTr;\n    }\n    set colorTr(value) {\n        this.props.colorTr = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBl() {\n        return this.props.colorBl;\n    }\n    set colorBl(value) {\n        this.props.colorBl = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBr() {\n        return this.props.colorBr;\n    }\n    set colorBr(value) {\n        this.props.colorBr = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    // we're only interested in parent zIndex to test\n    // if we should use node zIndex is higher then parent zIndex\n    get zIndexLocked() {\n        return this.props.zIndexLocked || 0;\n    }\n    set zIndexLocked(value) {\n        this.props.zIndexLocked = value;\n        this.setUpdateType(UpdateType.CalculatedZIndex | UpdateType.Children);\n        for (let i = 0, length = this.children.length; i < length; i++) {\n            this.children[i].setUpdateType(UpdateType.CalculatedZIndex);\n        }\n    }\n    get zIndex() {\n        return this.props.zIndex;\n    }\n    set zIndex(value) {\n        this.props.zIndex = value;\n        this.setUpdateType(UpdateType.CalculatedZIndex | UpdateType.Children);\n        for (let i = 0, length = this.children.length; i < length; i++) {\n            this.children[i].setUpdateType(UpdateType.CalculatedZIndex);\n        }\n    }\n    get parent() {\n        return this.props.parent;\n    }\n    set parent(newParent) {\n        const oldParent = this.props.parent;\n        if (oldParent === newParent) {\n            return;\n        }\n        this.props.parent = newParent;\n        if (oldParent) {\n            const index = oldParent.children.indexOf(this);\n            assertTruthy(index !== -1, \"CoreNode.parent: Node not found in old parent's children!\");\n            oldParent.children.splice(index, 1);\n            oldParent.setUpdateType(UpdateType.Children | UpdateType.ZIndexSortedChildren);\n        }\n        if (newParent) {\n            newParent.children.push(this);\n            // Since this node has a new parent, to be safe, have it do a full update.\n            this.setUpdateType(UpdateType.All);\n            // Tell parent that it's children need to be updated and sorted.\n            newParent.setUpdateType(UpdateType.Children | UpdateType.ZIndexSortedChildren);\n            // If the new parent has an RTT enabled, apply RTT inheritance\n            if (newParent.rtt || newParent.parentHasRenderTexture) {\n                this.applyRTTInheritance(newParent);\n            }\n        }\n        this.updateScaleRotateTransform();\n        // fetch render bounds from parent\n        this.setUpdateType(UpdateType.RenderBounds | UpdateType.Children);\n    }\n    get preventCleanup() {\n        return this.props.textureOptions.preventCleanup || false;\n    }\n    set preventCleanup(value) {\n        if (isProductionEnvironment() === false) {\n            console.warn('CoreNode.preventCleanup: Is deprecated and will be removed in upcoming release, please use textureOptions.preventCleanup instead');\n        }\n        this.props.textureOptions.preventCleanup = value;\n    }\n    get rtt() {\n        return this.props.rtt;\n    }\n    set rtt(value) {\n        if (this.props.rtt === value) {\n            return;\n        }\n        this.props.rtt = value;\n        if (value === true) {\n            this.initRenderTexture();\n            this.markChildrenWithRTT();\n        }\n        else {\n            this.cleanupRenderTexture();\n        }\n        this.setUpdateType(UpdateType.RenderTexture);\n        if (this.parentHasRenderTexture === true) {\n            this.notifyParentRTTOfUpdate();\n        }\n    }\n    initRenderTexture() {\n        this.texture = this.stage.txManager.createTexture('RenderTexture', {\n            width: this.width,\n            height: this.height,\n        });\n        this.stage.renderer.renderToTexture(this);\n    }\n    cleanupRenderTexture() {\n        this.unloadTexture();\n        this.clearRTTInheritance();\n        this.hasRTTupdates = false;\n        this.texture = null;\n    }\n    markChildrenWithRTT(node = null) {\n        const parent = node || this;\n        for (const child of parent.children) {\n            child.setUpdateType(UpdateType.All);\n            child.parentHasRenderTexture = true;\n            child.markChildrenWithRTT();\n        }\n    }\n    // Apply RTT inheritance when a node has an RTT-enabled parent\n    applyRTTInheritance(parent) {\n        if (parent.rtt) {\n            // Only the RTT node should be added to `renderToTexture`\n            parent.setUpdateType(UpdateType.RenderTexture);\n        }\n        // Propagate `parentHasRenderTexture` downwards\n        this.markChildrenWithRTT(parent);\n    }\n    // Clear RTT inheritance when detaching from an RTT chain\n    clearRTTInheritance() {\n        // if this node is RTT itself stop the propagation important for nested RTT nodes\n        // for the initial RTT node this is already handled in `set rtt`\n        if (this.rtt) {\n            return;\n        }\n        for (const child of this.children) {\n            // force child to update everything as the RTT inheritance has changed\n            child.parentHasRenderTexture = false;\n            child.rttParent = null;\n            child.setUpdateType(UpdateType.All);\n            child.clearRTTInheritance();\n        }\n    }\n    get shader() {\n        return this.props.shader;\n    }\n    set shader(value) {\n        if (this.props.shader === value) {\n            return;\n        }\n        this.props.shader = value;\n        this.setUpdateType(UpdateType.IsRenderable);\n    }\n    get src() {\n        return this.props.src;\n    }\n    set src(imageUrl) {\n        if (this.props.src === imageUrl) {\n            return;\n        }\n        this.props.src = imageUrl;\n        if (!imageUrl) {\n            this.texture = null;\n            return;\n        }\n        this.texture = this.stage.txManager.createTexture('ImageTexture', {\n            src: imageUrl,\n            width: this.props.width,\n            height: this.props.height,\n            type: this.props.imageType,\n            sx: this.props.srcX,\n            sy: this.props.srcY,\n            sw: this.props.srcWidth,\n            sh: this.props.srcHeight,\n        });\n    }\n    set imageType(type) {\n        if (this.props.imageType === type) {\n            return;\n        }\n        this.props.imageType = type;\n    }\n    get imageType() {\n        return this.props.imageType || null;\n    }\n    get srcHeight() {\n        return this.props.srcHeight;\n    }\n    set srcHeight(value) {\n        this.props.srcHeight = value;\n    }\n    get srcWidth() {\n        return this.props.srcWidth;\n    }\n    set srcWidth(value) {\n        this.props.srcWidth = value;\n    }\n    get srcX() {\n        return this.props.srcX;\n    }\n    set srcX(value) {\n        this.props.srcX = value;\n    }\n    get srcY() {\n        return this.props.srcY;\n    }\n    set srcY(value) {\n        this.props.srcY = value;\n    }\n    /**\n     * Returns the framebuffer dimensions of the node.\n     * If the node has a render texture, the dimensions are the same as the node's dimensions.\n     * If the node does not have a render texture, the dimensions are inherited from the parent.\n     * If the node parent has a render texture and the node is a render texture, the nodes dimensions are used.\n     */\n    get framebufferDimensions() {\n        if (this.parentHasRenderTexture && !this.rtt && this.parent) {\n            return this.parent.framebufferDimensions;\n        }\n        return { width: this.width, height: this.height };\n    }\n    /**\n     * Returns the parent render texture node if it exists.\n     */\n    get parentRenderTexture() {\n        let parent = this.parent;\n        while (parent) {\n            if (parent.rtt) {\n                return parent;\n            }\n            parent = parent.parent;\n        }\n        return null;\n    }\n    get texture() {\n        return this.props.texture;\n    }\n    set texture(value) {\n        if (this.props.texture === value) {\n            return;\n        }\n        const oldTexture = this.props.texture;\n        if (oldTexture) {\n            oldTexture.setRenderableOwner(this, false);\n            this.unloadTexture();\n        }\n        this.props.texture = value;\n        if (value !== null) {\n            value.setRenderableOwner(this, this.isRenderable);\n            this.loadTexture();\n        }\n        this.setUpdateType(UpdateType.IsRenderable);\n    }\n    set textureOptions(value) {\n        this.props.textureOptions = value;\n    }\n    get textureOptions() {\n        return this.props.textureOptions;\n    }\n    get strictBounds() {\n        return this.props.strictBounds;\n    }\n    set strictBounds(v) {\n        if (v === this.props.strictBounds) {\n            return;\n        }\n        this.props.strictBounds = v;\n        this.setUpdateType(UpdateType.RenderBounds | UpdateType.Children);\n        this.childUpdateType |= UpdateType.RenderBounds | UpdateType.Children;\n    }\n    animate(props, settings) {\n        const animation = new CoreAnimation(this, props, settings);\n        const controller = new CoreAnimationController(this.stage.animationManager, animation);\n        return controller;\n    }\n    flush() {\n        // no-op\n    }\n}\n//# sourceMappingURL=CoreNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Platform render loop initiator\n */\nexport const startLoop = (stage) => {\n    let isIdle = false;\n    const runLoop = () => {\n        stage.updateFrameTime();\n        stage.updateAnimations();\n        if (!stage.hasSceneUpdates()) {\n            // We still need to calculate the fps else it looks like the app is frozen\n            stage.calculateFps();\n            setTimeout(runLoop, 16.666666666666668);\n            if (!isIdle) {\n                if (stage.txMemManager.checkCleanup()) {\n                    stage.txMemManager.cleanup();\n                }\n                stage.eventBus.emit('idle');\n                isIdle = true;\n            }\n            stage.flushFrameEvents();\n            return;\n        }\n        isIdle = false;\n        stage.drawFrame();\n        stage.flushFrameEvents();\n        requestAnimationFrame(runLoop);\n    };\n    requestAnimationFrame(runLoop);\n};\n/**\n * Return unix timestamp\n * @return {number}\n */\nexport const getTimeStamp = () => {\n    return performance ? performance.now() : Date.now();\n};\n//# sourceMappingURL=platform.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreAnimation } from './CoreAnimation.js';\nexport class AnimationManager {\n    activeAnimations = new Set();\n    registerAnimation(animation) {\n        this.activeAnimations.add(animation);\n    }\n    unregisterAnimation(animation) {\n        this.activeAnimations.delete(animation);\n    }\n    update(dt) {\n        this.activeAnimations.forEach((animation) => {\n            animation.update(dt);\n        });\n    }\n}\n//# sourceMappingURL=AnimationManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../textures/Texture.js';\n/**\n * Note that, within the createImageWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n *\n * The createImageWorker function is a web worker that fetches an image from a URL and returns an ImageBitmap object.\n * The eslint @typescript rule is disabled for the entire function because the function is converted to a blob and used as the\n * js of the web worker thread, so the typescript syntax is not valid in this context.\n */\n/* eslint-disable */\nfunction createImageWorker() {\n    function hasAlphaChannel(mimeType) {\n        return mimeType.indexOf('image/png') !== -1;\n    }\n    function getImage(src, premultiplyAlpha, x, y, width, height, options) {\n        return new Promise(function (resolve, reject) {\n            var supportsOptionsCreateImageBitmap = options.supportsOptionsCreateImageBitmap;\n            var supportsFullCreateImageBitmap = options.supportsFullCreateImageBitmap;\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', src, true);\n            xhr.responseType = 'blob';\n            xhr.onload = function () {\n                // On most devices like WebOS and Tizen, the file protocol returns 0 while http(s) protocol returns 200\n                if (xhr.status !== 200 && xhr.status !== 0) {\n                    return reject(new Error('Failed to load image: ' + xhr.statusText));\n                }\n                var blob = xhr.response;\n                var withAlphaChannel = premultiplyAlpha !== undefined\n                    ? premultiplyAlpha\n                    : hasAlphaChannel(blob.type);\n                // createImageBitmap with crop and options\n                if (supportsFullCreateImageBitmap === true &&\n                    width !== null &&\n                    height !== null) {\n                    createImageBitmap(blob, x || 0, y || 0, width, height, {\n                        premultiplyAlpha: withAlphaChannel ? 'premultiply' : 'none',\n                        colorSpaceConversion: 'none',\n                        imageOrientation: 'none',\n                    })\n                        .then(function (data) {\n                        resolve({ data, premultiplyAlpha: premultiplyAlpha });\n                    })\n                        .catch(function (error) {\n                        reject(error);\n                    });\n                    return;\n                }\n                else if (supportsOptionsCreateImageBitmap === true) {\n                    createImageBitmap(blob, {\n                        premultiplyAlpha: withAlphaChannel ? 'premultiply' : 'none',\n                        colorSpaceConversion: 'none',\n                        imageOrientation: 'none',\n                    })\n                        .then(function (data) {\n                        resolve({ data, premultiplyAlpha: premultiplyAlpha });\n                    })\n                        .catch(function (error) {\n                        reject(error);\n                    });\n                }\n                else {\n                    // Fallback for browsers that do not support createImageBitmap with options\n                    // this is supported for Chrome v50 to v52/54 that doesn't support options\n                    createImageBitmap(blob)\n                        .then(function (data) {\n                        resolve({ data, premultiplyAlpha: premultiplyAlpha });\n                    })\n                        .catch(function (error) {\n                        reject(error);\n                    });\n                }\n            };\n            xhr.onerror = function () {\n                reject(new Error('Network error occurred while trying to fetch the image.'));\n            };\n            xhr.send();\n        });\n    }\n    self.onmessage = (event) => {\n        var src = event.data.src;\n        var id = event.data.id;\n        var premultiplyAlpha = event.data.premultiplyAlpha;\n        var x = event.data.sx;\n        var y = event.data.sy;\n        var width = event.data.sw;\n        var height = event.data.sh;\n        // these will be set to true if the browser supports the createImageBitmap options or full\n        var supportsOptionsCreateImageBitmap = false;\n        var supportsFullCreateImageBitmap = false;\n        getImage(src, premultiplyAlpha, x, y, width, height, {\n            supportsOptionsCreateImageBitmap,\n            supportsFullCreateImageBitmap,\n        })\n            .then(function (data) {\n            self.postMessage({ id: id, src: src, data: data });\n        })\n            .catch(function (error) {\n            self.postMessage({ id: id, src: src, error: error.message });\n        });\n    };\n}\n/* eslint-enable */\nexport class ImageWorkerManager {\n    imageWorkersEnabled = true;\n    messageManager = {};\n    workers = [];\n    workerIndex = 0;\n    nextId = 0;\n    constructor(numImageWorkers, createImageBitmapSupport) {\n        this.workers = this.createWorkers(numImageWorkers, createImageBitmapSupport);\n        this.workers.forEach((worker) => {\n            worker.onmessage = this.handleMessage.bind(this);\n        });\n    }\n    handleMessage(event) {\n        const { id, data, error } = event.data;\n        const msg = this.messageManager[id];\n        if (msg) {\n            const [resolve, reject] = msg;\n            delete this.messageManager[id];\n            if (error) {\n                reject(new Error(error));\n            }\n            else {\n                resolve(data);\n            }\n        }\n    }\n    createWorkers(numWorkers = 1, createImageBitmapSupport) {\n        let workerCode = `(${createImageWorker.toString()})()`;\n        // Replace placeholders with actual initialization values\n        if (createImageBitmapSupport.options) {\n            workerCode = workerCode.replace('var supportsOptionsCreateImageBitmap = false;', 'var supportsOptionsCreateImageBitmap = true;');\n        }\n        if (createImageBitmapSupport.full) {\n            workerCode = workerCode.replace('var supportsFullCreateImageBitmap = false;', 'var supportsFullCreateImageBitmap = true;');\n        }\n        workerCode = workerCode.replace('\"use strict\";', '');\n        const blob = new Blob([workerCode], {\n            type: 'application/javascript',\n        });\n        const blobURL = (self.URL ? URL : webkitURL).createObjectURL(blob);\n        const workers = [];\n        for (let i = 0; i < numWorkers; i++) {\n            workers.push(new Worker(blobURL));\n        }\n        return workers;\n    }\n    getNextWorker() {\n        const worker = this.workers[this.workerIndex];\n        this.workerIndex = (this.workerIndex + 1) % this.workers.length;\n        return worker;\n    }\n    getImage(src, premultiplyAlpha, sx, sy, sw, sh) {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.workers) {\n                    const id = this.nextId++;\n                    this.messageManager[id] = [resolve, reject];\n                    const nextWorker = this.getNextWorker();\n                    if (nextWorker) {\n                        nextWorker.postMessage({\n                            id,\n                            src: src,\n                            premultiplyAlpha,\n                            sx,\n                            sy,\n                            sw,\n                            sh,\n                        });\n                    }\n                }\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n}\n//# sourceMappingURL=ImageWorker.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, TextureType } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    type = TextureType.color;\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureSource() {\n        const pixelData = new Uint8Array(4);\n        if (this.color === 0xffffffff) {\n            pixelData[0] = 255;\n            pixelData[1] = 255;\n            pixelData[2] = 255;\n            pixelData[3] = 255;\n        }\n        else {\n            pixelData[0] = (this.color >> 16) & 0xff; // Red\n            pixelData[1] = (this.color >> 8) & 0xff; // Green\n            pixelData[2] = this.color & 0xff; // Blue\n            pixelData[3] = (this.color >>> 24) & 0xff; // Alpha\n        }\n        this.setState('fetched', { width: 1, height: 1 });\n        return {\n            data: pixelData,\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../textures/Texture.js';\n/**\n * Tests if the given location is a compressed texture container\n * @param url\n * @remarks\n * This function is used to determine if the given image url is a compressed\n * and only supports the following extensions: .ktx and .pvr\n * @returns\n */\nexport function isCompressedTextureContainer(url) {\n    return /\\.(ktx|pvr)$/.test(url);\n}\n/**\n * Loads a compressed texture container\n * @param url\n * @returns\n */\nexport const loadCompressedTexture = async (url) => {\n    const response = await fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    if (url.indexOf('.ktx') !== -1) {\n        return loadKTXData(arrayBuffer);\n    }\n    return loadPVRData(arrayBuffer);\n};\n/**\n * Loads a KTX texture container and returns the texture data\n * @param buffer\n * @returns\n */\nconst loadKTXData = async (buffer) => {\n    const view = new DataView(buffer);\n    const littleEndian = view.getUint32(12) === 16909060 ? true : false;\n    const mipmaps = [];\n    const data = {\n        glInternalFormat: view.getUint32(28, littleEndian),\n        pixelWidth: view.getUint32(36, littleEndian),\n        pixelHeight: view.getUint32(40, littleEndian),\n        numberOfMipmapLevels: view.getUint32(56, littleEndian),\n        bytesOfKeyValueData: view.getUint32(60, littleEndian),\n    };\n    let offset = 64;\n    // Key Value Pairs of data start at byte offset 64\n    // But the only known kvp is the API version, so skipping parsing.\n    offset += data.bytesOfKeyValueData;\n    for (let i = 0; i < data.numberOfMipmapLevels; i++) {\n        const imageSize = view.getUint32(offset);\n        offset += 4;\n        mipmaps.push(view.buffer.slice(offset, imageSize));\n        offset += imageSize;\n    }\n    return {\n        data: {\n            glInternalFormat: data.glInternalFormat,\n            mipmaps,\n            width: data.pixelWidth || 0,\n            height: data.pixelHeight || 0,\n            type: 'ktx',\n        },\n        premultiplyAlpha: false,\n    };\n};\n/**\n * Loads a PVR texture container and returns the texture data\n * @param buffer\n * @returns\n */\nconst loadPVRData = async (buffer) => {\n    // pvr header length in 32 bits\n    const pvrHeaderLength = 13;\n    // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n    const pvrFormatEtc1 = 0x8d64;\n    const pvrWidth = 7;\n    const pvrHeight = 6;\n    const pvrMipmapCount = 11;\n    const pvrMetadata = 12;\n    const arrayBuffer = buffer;\n    const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n    // @ts-expect-error Object possibly undefined\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    const dataOffset = header[pvrMetadata] + 52;\n    const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n    const mipmaps = [];\n    const data = {\n        pixelWidth: header[pvrWidth],\n        pixelHeight: header[pvrHeight],\n        numberOfMipmapLevels: header[pvrMipmapCount] || 0,\n    };\n    let offset = 0;\n    let width = data.pixelWidth || 0;\n    let height = data.pixelHeight || 0;\n    for (let i = 0; i < data.numberOfMipmapLevels; i++) {\n        const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n        const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n        mipmaps.push(view);\n        offset += level;\n        width = width >> 1;\n        height = height >> 1;\n    }\n    return {\n        data: {\n            glInternalFormat: pvrFormatEtc1,\n            mipmaps: mipmaps,\n            width: data.pixelWidth || 0,\n            height: data.pixelHeight || 0,\n            type: 'pvr',\n        },\n        premultiplyAlpha: false,\n    };\n};\n//# sourceMappingURL=textureCompression.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport {} from '../textures/Texture.js';\n/**\n * Tests if the given location is a SVG\n * @param url\n * @remarks\n * This function is used to determine if the given image url is a SVG\n * image\n * @returns\n */\nexport function isSvgImage(url) {\n    return /\\.(svg)(\\?.*)?$/.test(url);\n}\n/**\n * Loads a SVG image\n * @param url\n * @returns\n */\nexport const loadSvg = (url, width, height, sx, sy, sw, sh) => {\n    return new Promise((resolve, reject) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        assertTruthy(ctx);\n        ctx.imageSmoothingEnabled = true;\n        const img = new Image();\n        img.onload = () => {\n            const x = sx ?? 0;\n            const y = sy ?? 0;\n            const w = width || img.width;\n            const h = height || img.height;\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, w, h);\n            resolve({\n                data: ctx.getImageData(x, y, sw ?? w, sh ?? h),\n                premultiplyAlpha: false,\n            });\n        };\n        img.onerror = (err) => {\n            reject(err);\n        };\n        img.src = url;\n    });\n};\n//# sourceMappingURL=textureSvg.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function fetchJson(url, responseType = '') {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.responseType = responseType;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                // On most devices like WebOS and Tizen, the file protocol returns 0 while http(s) protocol returns 200\n                if (xhr.status === 0 || xhr.status === 200) {\n                    resolve(xhr.response);\n                }\n                else {\n                    reject(xhr.statusText);\n                }\n            }\n        };\n        xhr.open('GET', url, true);\n        xhr.send(null);\n    });\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, TextureType } from './Texture.js';\nimport { isCompressedTextureContainer, loadCompressedTexture, } from '../lib/textureCompression.js';\nimport { convertUrlToAbsolute, isBase64Image } from '../lib/utils.js';\nimport { isSvgImage, loadSvg } from '../lib/textureSvg.js';\nimport { fetchJson } from '../text-rendering/font-face-types/utils.js';\n/**\n * Texture consisting of an image loaded from a URL\n *\n * @remarks\n * The ImageTexture's {@link ImageTextureProps.src} prop defines the image URL\n * to be downloaded.\n *\n * By default, the texture's alpha values will be premultiplied into its color\n * values which is generally the desired setting before they are sent to the\n * texture's associated {@link Shader}. However, in special cases you may want\n * the Shader to receive straight (non-premultiplied) values. In that case you\n * can disable the default behavior by setting the\n * {@link ImageTextureProps.premultiplyAlpha} prop to `false`.\n */\nexport class ImageTexture extends Texture {\n    props;\n    type = TextureType.image;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ImageTexture.resolveDefaults(props);\n    }\n    hasAlphaChannel(mimeType) {\n        return mimeType.indexOf('image/png') !== -1;\n    }\n    async loadImageFallback(src, hasAlpha) {\n        const img = new Image();\n        if (isBase64Image(src) === false) {\n            img.crossOrigin = 'anonymous';\n        }\n        return new Promise((resolve) => {\n            img.onload = () => {\n                resolve({ data: img, premultiplyAlpha: hasAlpha });\n            };\n            img.onerror = () => {\n                console.warn('Image loading failed, returning fallback object.');\n                resolve({ data: img, premultiplyAlpha: hasAlpha });\n            };\n            img.src = src;\n        });\n    }\n    async createImageBitmap(blob, premultiplyAlpha, sx, sy, sw, sh) {\n        const hasAlphaChannel = premultiplyAlpha ?? blob.type.includes('image/png');\n        const imageBitmapSupported = this.txManager.imageBitmapSupported;\n        if (imageBitmapSupported.full === true &&\n            sx !== null &&\n            sy !== null &&\n            sw !== null &&\n            sh !== null) {\n            // createImageBitmap with crop\n            const bitmap = await createImageBitmap(blob, sx, sy, sw, sh, {\n                premultiplyAlpha: hasAlphaChannel ? 'premultiply' : 'none',\n                colorSpaceConversion: 'none',\n                imageOrientation: 'none',\n            });\n            return { data: bitmap, premultiplyAlpha: hasAlphaChannel };\n        }\n        else if (imageBitmapSupported.options === true) {\n            // createImageBitmap without crop but with options\n            const bitmap = await createImageBitmap(blob, {\n                premultiplyAlpha: hasAlphaChannel ? 'premultiply' : 'none',\n                colorSpaceConversion: 'none',\n                imageOrientation: 'none',\n            });\n            return { data: bitmap, premultiplyAlpha: hasAlphaChannel };\n        }\n        else {\n            // basic createImageBitmap without options or crop\n            // this is supported for Chrome v50 to v52/54 that doesn't support options\n            return {\n                data: await createImageBitmap(blob),\n                premultiplyAlpha: hasAlphaChannel,\n            };\n        }\n    }\n    async loadImage(src) {\n        const { premultiplyAlpha, sx, sy, sw, sh } = this.props;\n        if (this.txManager.hasCreateImageBitmap === true) {\n            if (isBase64Image(src) === false &&\n                this.txManager.hasWorker === true &&\n                this.txManager.imageWorkerManager !== null) {\n                return this.txManager.imageWorkerManager.getImage(src, premultiplyAlpha, sx, sy, sw, sh);\n            }\n            const blob = await fetchJson(src, 'blob').then((response) => response);\n            return this.createImageBitmap(blob, premultiplyAlpha, sx, sy, sw, sh);\n        }\n        return this.loadImageFallback(src, premultiplyAlpha ?? true);\n    }\n    async getTextureSource() {\n        let resp;\n        try {\n            resp = await this.determineImageTypeAndLoadImage();\n        }\n        catch (e) {\n            this.setState('failed', e);\n            return {\n                data: null,\n            };\n        }\n        if (resp.data === null) {\n            this.setState('failed', Error('ImageTexture: No image data'));\n            return {\n                data: null,\n            };\n        }\n        let width, height;\n        // check if resp.data is typeof Uint8ClampedArray else\n        // use resp.data.width and resp.data.height\n        if (resp.data instanceof Uint8Array) {\n            width = this.props.width ?? 0;\n            height = this.props.height ?? 0;\n        }\n        else {\n            width = resp.data?.width ?? (this.props.width || 0);\n            height = resp.data?.height ?? (this.props.height || 0);\n        }\n        // we're loaded!\n        this.setState('fetched', {\n            width,\n            height,\n        });\n        return {\n            data: resp.data,\n            premultiplyAlpha: this.props.premultiplyAlpha ?? true,\n        };\n    }\n    determineImageTypeAndLoadImage() {\n        const { src, premultiplyAlpha, type } = this.props;\n        if (src === null) {\n            return {\n                data: null,\n            };\n        }\n        if (typeof src !== 'string') {\n            if (src instanceof ImageData) {\n                return {\n                    data: src,\n                    premultiplyAlpha,\n                };\n            }\n            return {\n                data: src(),\n                premultiplyAlpha,\n            };\n        }\n        const absoluteSrc = convertUrlToAbsolute(src);\n        if (type === 'regular') {\n            return this.loadImage(absoluteSrc);\n        }\n        if (type === 'svg') {\n            return loadSvg(absoluteSrc, this.props.width, this.props.height, this.props.sx, this.props.sy, this.props.sw, this.props.sh);\n        }\n        if (isSvgImage(src) === true) {\n            return loadSvg(absoluteSrc, this.props.width, this.props.height, this.props.sx, this.props.sy, this.props.sw, this.props.sh);\n        }\n        if (type === 'compressed') {\n            return loadCompressedTexture(absoluteSrc);\n        }\n        if (isCompressedTextureContainer(src) === true) {\n            return loadCompressedTexture(absoluteSrc);\n        }\n        // default\n        return this.loadImage(absoluteSrc);\n    }\n    /**\n     * Generates a cache key for the ImageTexture based on the provided props.\n     * @param props - The props used to generate the cache key.\n     * @returns The cache key as a string, or `false` if the key cannot be generated.\n     */\n    static makeCacheKey(props) {\n        const resolvedProps = ImageTexture.resolveDefaults(props);\n        // Only cache key-able textures; prioritise key\n        const key = resolvedProps.key || resolvedProps.src;\n        if (typeof key !== 'string') {\n            return false;\n        }\n        // if we have source dimensions, cache the texture separately\n        let dimensionProps = '';\n        if (resolvedProps.sh !== null && resolvedProps.sw !== null) {\n            dimensionProps += ',';\n            dimensionProps += resolvedProps.sx ?? '';\n            dimensionProps += resolvedProps.sy ?? '';\n            dimensionProps += resolvedProps.sw || '';\n            dimensionProps += resolvedProps.sh || '';\n        }\n        return `ImageTexture,${key},${resolvedProps.premultiplyAlpha ?? 'true'}${dimensionProps}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            src: props.src ?? '',\n            premultiplyAlpha: props.premultiplyAlpha ?? true, // null,\n            key: props.key ?? null,\n            type: props.type ?? null,\n            width: props.width ?? null,\n            height: props.height ?? null,\n            sx: props.sx ?? null,\n            sy: props.sy ?? null,\n            sw: props.sw ?? null,\n            sh: props.sh ?? null,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ImageTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, TextureType } from './Texture.js';\n/**\n * Texture consisting of a random grid of greyscale pixels\n *\n * @remarks\n * The width and height of the NoiseTexture are defined by it's\n * {@link NoiseTextureProps.width} and {@link NoiseTextureProps.height}\n * properties. The {@link NoiseTextureProps.cacheId} prop can be varied in order\n * to bypass cache and get newly randomized texture data.\n */\nexport class NoiseTexture extends Texture {\n    props;\n    type = TextureType.noise;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = NoiseTexture.resolveDefaults(props);\n    }\n    async getTextureSource() {\n        const { width, height } = this.props;\n        const size = width * height * 4;\n        const pixelData8 = new Uint8ClampedArray(size);\n        for (let i = 0; i < size; i += 4) {\n            const v = Math.floor(Math.random() * 256);\n            pixelData8[i] = v;\n            pixelData8[i + 1] = v;\n            pixelData8[i + 2] = v;\n            pixelData8[i + 3] = 255;\n        }\n        this.setState('fetched');\n        return {\n            data: new ImageData(pixelData8, width, height),\n        };\n    }\n    static makeCacheKey(props) {\n        if (props.cacheId === undefined) {\n            return false;\n        }\n        const resolvedProps = NoiseTexture.resolveDefaults(props);\n        return `NoiseTexture,${resolvedProps.width},${resolvedProps.height},${resolvedProps.cacheId}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 128,\n            height: props.height ?? 128,\n            cacheId: props.cacheId ?? 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=NoiseTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { ImageTexture } from './ImageTexture.js';\nimport { Texture, TextureType, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    type = TextureType.subTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = SubTexture.resolveDefaults(props || {});\n        assertTruthy(this.props.texture, 'SubTexture requires a parent texture');\n        assertTruthy(this.props.texture instanceof ImageTexture, 'SubTexture requires an ImageTexture parent');\n        // Resolve parent texture from cache or fallback to provided texture\n        this.parentTexture = txManager.resolveParentTexture(this.props.texture);\n        if (this.renderableOwners.size > 0) {\n            this.parentTexture.setRenderableOwner(this, true);\n        }\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'fetching') {\n                this.onParentTxFetching();\n            }\n            else if (parentTx.state === 'fetched') {\n                this.onParentTxFetched();\n            }\n            else if (parentTx.state === 'loading') {\n                this.onParentTxLoading();\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            else if (parentTx.state === 'freed') {\n                this.onParentTxFreed();\n            }\n            parentTx.on('fetched', this.onParentTxFetched);\n            parentTx.on('loading', this.onParentTxLoading);\n            parentTx.on('fetching', this.onParentTxFetching);\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n            parentTx.on('freed', this.onParentTxFreed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.forwardParentTxState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.forwardParentTxState('failed', error);\n    };\n    onParentTxFetched = () => {\n        this.forwardParentTxState('fetched', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFetching = () => {\n        this.forwardParentTxState('fetching');\n    };\n    onParentTxLoading = () => {\n        this.forwardParentTxState('loading');\n    };\n    onParentTxFreed = () => {\n        this.forwardParentTxState('freed');\n    };\n    forwardParentTxState(state, errorOrDimensions) {\n        this.setState(state, errorOrDimensions);\n    }\n    onChangeIsRenderable(isRenderable) {\n        // Propagate the renderable owner change to the parent texture\n        this.parentTexture.setRenderableOwner(this, isRenderable);\n    }\n    async getTextureSource() {\n        // Check if parent texture is loaded\n        return new Promise((resolve, reject) => {\n            this.setState('fetched');\n            resolve({\n                data: this.props,\n            });\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, TextureType } from './Texture.js';\nexport class RenderTexture extends Texture {\n    props;\n    type = TextureType.renderToTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = RenderTexture.resolveDefaults(props || {});\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        this.props.width = value;\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        this.props.height = value;\n    }\n    async getTextureSource() {\n        this.setState('fetched');\n        return {\n            data: null,\n            premultiplyAlpha: null,\n        };\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width || 256,\n            height: props.height || 256,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=RenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ImageWorkerManager } from './lib/ImageWorker.js';\nimport { ColorTexture } from './textures/ColorTexture.js';\nimport { ImageTexture } from './textures/ImageTexture.js';\nimport { NoiseTexture } from './textures/NoiseTexture.js';\nimport { SubTexture } from './textures/SubTexture.js';\nimport { RenderTexture } from './textures/RenderTexture.js';\nimport { TextureType } from './textures/Texture.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { getTimeStamp } from './platform.js';\nexport class CoreTextureManager extends EventEmitter {\n    /**\n     * Map of textures by cache key\n     */\n    keyCache = new Map();\n    /**\n     * Map of cache keys by texture\n     */\n    inverseKeyCache = new WeakMap();\n    /**\n     * Map of texture constructors by their type name\n     */\n    txConstructors = {};\n    downloadTextureSourceQueue = [];\n    priorityQueue = [];\n    uploadTextureQueue = [];\n    initialized = false;\n    stage;\n    imageWorkerManager = null;\n    hasCreateImageBitmap = !!self.createImageBitmap;\n    imageBitmapSupported = {\n        basic: false,\n        options: false,\n        full: false,\n    };\n    hasWorker = !!self.Worker;\n    /**\n     * Renderer that this texture manager is associated with\n     *\n     * @remarks\n     * This MUST be set before the texture manager is used. Otherwise errors\n     * will occur when using the texture manager.\n     */\n    renderer;\n    /**\n     * The current frame time in milliseconds\n     *\n     * @remarks\n     * This is used to populate the `lastRenderableChangeTime` property of\n     * {@link Texture} instances when their renderable state changes.\n     *\n     * Set by stage via `updateFrameTime` method.\n     */\n    frameTime = 0;\n    constructor(stage, numImageWorkers) {\n        super();\n        this.stage = stage;\n        this.validateCreateImageBitmap()\n            .then((result) => {\n            this.hasCreateImageBitmap =\n                result.basic || result.options || result.full;\n            this.imageBitmapSupported = result;\n            if (!this.hasCreateImageBitmap) {\n                console.warn('[Lightning] createImageBitmap is not supported on this browser. ImageTexture will be slower.');\n            }\n            if (this.hasCreateImageBitmap &&\n                this.hasWorker &&\n                numImageWorkers > 0) {\n                this.imageWorkerManager = new ImageWorkerManager(numImageWorkers, result);\n            }\n            else {\n                console.warn('[Lightning] Imageworker is 0 or not supported on this browser. Image loading will be slower.');\n            }\n            this.initialized = true;\n            this.emit('initialized');\n        })\n            .catch((e) => {\n            console.warn('[Lightning] createImageBitmap is not supported on this browser. ImageTexture will be slower.');\n            // initialized without image worker manager and createImageBitmap\n            this.initialized = true;\n            this.emit('initialized');\n        });\n        this.registerTextureType('ImageTexture', ImageTexture);\n        this.registerTextureType('ColorTexture', ColorTexture);\n        this.registerTextureType('NoiseTexture', NoiseTexture);\n        this.registerTextureType('SubTexture', SubTexture);\n        this.registerTextureType('RenderTexture', RenderTexture);\n    }\n    async validateCreateImageBitmap() {\n        // Test if createImageBitmap is supported using a simple 1x1 PNG image\n        // prettier-ignore\n        const pngBinaryData = new Uint8Array([\n            0x89, 0x50, 0x4e, 0x47,\n            0x0d, 0x0a, 0x1a, 0x0a, // PNG signature\n            0x00, 0x00, 0x00, 0x0d, // IHDR chunk length\n            0x49, 0x48, 0x44, 0x52, // \"IHDR\" chunk type\n            0x00, 0x00, 0x00, 0x01, // Width: 1\n            0x00, 0x00, 0x00, 0x01, // Height: 1\n            0x01, // Bit depth: 1\n            0x03, // Color type: Indexed\n            0x00, // Compression method: Deflate\n            0x00, // Filter method: None\n            0x00, // Interlace method: None\n            0x25, 0xdb, 0x56, 0xca, // CRC for IHDR\n            0x00, 0x00, 0x00, 0x03, // PLTE chunk length\n            0x50, 0x4c, 0x54, 0x45, // \"PLTE\" chunk type\n            0x00, 0x00, 0x00, // Palette entry: Black\n            0xa7, 0x7a, 0x3d, 0xda, // CRC for PLTE\n            0x00, 0x00, 0x00, 0x01, // tRNS chunk length\n            0x74, 0x52, 0x4e, 0x53, // \"tRNS\" chunk type\n            0x00, // Transparency for black: Fully transparent\n            0x40, 0xe6, 0xd8, 0x66, // CRC for tRNS\n            0x00, 0x00, 0x00, 0x0a, // IDAT chunk length\n            0x49, 0x44, 0x41, 0x54, // \"IDAT\" chunk type\n            0x08, 0xd7, // Deflate header\n            0x63, 0x60, 0x00, 0x00,\n            0x00, 0x02, 0x00, 0x01, // Zlib-compressed data\n            0xe2, 0x21, 0xbc, 0x33, // CRC for IDAT\n            0x00, 0x00, 0x00, 0x00, // IEND chunk length\n            0x49, 0x45, 0x4e, 0x44, // \"IEND\" chunk type\n            0xae, 0x42, 0x60, 0x82, // CRC for IEND\n        ]);\n        const support = {\n            basic: false,\n            options: false,\n            full: false,\n        };\n        // Test basic createImageBitmap support\n        const blob = new Blob([pngBinaryData], { type: 'image/png' });\n        const bitmap = await createImageBitmap(blob);\n        bitmap.close?.();\n        support.basic = true;\n        // Test createImageBitmap with options support\n        try {\n            const options = { premultiplyAlpha: 'none' };\n            const bitmapWithOptions = await createImageBitmap(blob, options);\n            bitmapWithOptions.close?.();\n            support.options = true;\n        }\n        catch (e) {\n            /* ignore */\n        }\n        // Test createImageBitmap with full options support\n        try {\n            const bitmapWithFullOptions = await createImageBitmap(blob, 0, 0, 1, 1, {\n                premultiplyAlpha: 'none',\n            });\n            bitmapWithFullOptions.close?.();\n            support.full = true;\n        }\n        catch (e) {\n            /* ignore */\n        }\n        return support;\n    }\n    registerTextureType(textureType, textureClass) {\n        this.txConstructors[textureType] = textureClass;\n    }\n    /**\n     * Enqueue a texture for downloading its source image.\n     */\n    enqueueDownloadTextureSource(texture) {\n        if (!this.downloadTextureSourceQueue.includes(texture)) {\n            this.downloadTextureSourceQueue.push(texture);\n        }\n    }\n    /**\n     * Enqueue a texture for uploading to the GPU.\n     *\n     * @param texture - The texture to upload\n     */\n    enqueueUploadTexture(texture) {\n        if (this.uploadTextureQueue.includes(texture) === false) {\n            this.uploadTextureQueue.push(texture);\n        }\n    }\n    /**\n     * Create a texture\n     *\n     * @param textureType - The type of texture to create\n     * @param props - The properties to use for the texture\n     */\n    createTexture(textureType, props) {\n        let texture;\n        const TextureClass = this.txConstructors[textureType];\n        if (!TextureClass) {\n            throw new Error(`Texture type \"${textureType}\" is not registered`);\n        }\n        const cacheKey = TextureClass.makeCacheKey(props);\n        if (cacheKey && this.keyCache.has(cacheKey)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            texture = this.keyCache.get(cacheKey);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n            texture = new TextureClass(this, props);\n            if (cacheKey) {\n                this.initTextureToCache(texture, cacheKey);\n            }\n        }\n        return texture;\n    }\n    orphanTexture(texture) {\n        // if it is part of the download or upload queue, remove it\n        const downloadIndex = this.downloadTextureSourceQueue.indexOf(texture);\n        if (downloadIndex !== -1) {\n            this.downloadTextureSourceQueue.splice(downloadIndex, 1);\n        }\n        const uploadIndex = this.uploadTextureQueue.indexOf(texture);\n        if (uploadIndex !== -1) {\n            this.uploadTextureQueue.splice(uploadIndex, 1);\n        }\n        if (texture.type === TextureType.subTexture) {\n            // ignore subtextures\n            return;\n        }\n        this.stage.txMemManager.addToOrphanedTextures(texture);\n    }\n    /**\n     * Override loadTexture to use the batched approach.\n     *\n     * @param texture - The texture to load\n     * @param immediate - Whether to prioritize the texture for immediate loading\n     */\n    loadTexture(texture, priority) {\n        this.stage.txMemManager.removeFromOrphanedTextures(texture);\n        if (texture.state !== 'initial' && texture.state !== 'freed') {\n            return;\n        }\n        texture.setState('loading');\n        // if we're not initialized, just queue the texture into the priority queue\n        if (this.initialized === false) {\n            this.priorityQueue.push(texture);\n            return;\n        }\n        // these types of textures don't need to be downloaded\n        // Technically the noise texture shouldn't either, but it's a special case\n        // and not really used in production so who cares ¯\\_(ツ)_/¯\n        if (texture.type === TextureType.subTexture ||\n            texture.type === TextureType.color ||\n            texture.type === TextureType.renderToTexture) {\n            texture.setState('fetched');\n            this.enqueueUploadTexture(texture);\n            return;\n        }\n        // prioritize the texture for immediate loading\n        if (priority === true) {\n            texture\n                .getTextureData()\n                .then(() => {\n                this.uploadTexture(texture);\n            })\n                .catch((err) => {\n                console.error(err);\n            });\n        }\n        // enqueue the texture for download and upload\n        this.enqueueDownloadTextureSource(texture);\n    }\n    /**\n     * Upload a texture to the GPU\n     *\n     * @param texture Texture to upload\n     */\n    uploadTexture(texture) {\n        if (texture.state !== 'fetched') {\n            return;\n        }\n        const coreContext = texture.loadCtxTexture();\n        coreContext.load();\n    }\n    /**\n     * Check if a texture is being processed\n     */\n    isProcessingTexture(texture) {\n        return (this.downloadTextureSourceQueue.includes(texture) === true ||\n            this.uploadTextureQueue.includes(texture) === true);\n    }\n    /**\n     * Process a limited number of downloads and uploads.\n     *\n     * @param maxItems - The maximum number of items to process\n     */\n    processSome(maxProcessingTime) {\n        if (this.initialized === false) {\n            return;\n        }\n        const startTime = getTimeStamp();\n        // Process priority queue\n        while (this.priorityQueue.length > 0 &&\n            getTimeStamp() - startTime < maxProcessingTime) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const texture = this.priorityQueue.pop();\n            texture.getTextureData().then(() => {\n                this.uploadTexture(texture);\n            });\n        }\n        // Process uploads\n        while (this.uploadTextureQueue.length > 0 &&\n            getTimeStamp() - startTime < maxProcessingTime) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.uploadTexture(this.uploadTextureQueue.pop());\n        }\n        // Process downloads\n        while (this.downloadTextureSourceQueue.length > 0 &&\n            getTimeStamp() - startTime < maxProcessingTime) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const texture = this.downloadTextureSourceQueue.shift();\n            texture.getTextureData().then(() => {\n                if (texture.state === 'fetched') {\n                    this.enqueueUploadTexture(texture);\n                }\n            });\n        }\n    }\n    hasUpdates() {\n        return (this.downloadTextureSourceQueue.length > 0 ||\n            this.uploadTextureQueue.length > 0);\n    }\n    /**\n     * Initialize a texture to the cache\n     *\n     * @param texture Texture to cache\n     * @param cacheKey Cache key for the texture\n     */\n    initTextureToCache(texture, cacheKey) {\n        const { keyCache, inverseKeyCache } = this;\n        keyCache.set(cacheKey, texture);\n        inverseKeyCache.set(texture, cacheKey);\n    }\n    /**\n     * Get a texture from the cache\n     *\n     * @param cacheKey\n     */\n    getTextureFromCache(cacheKey) {\n        return this.keyCache.get(cacheKey);\n    }\n    /**\n     * Remove a texture from the cache\n     *\n     * @remarks\n     * Called by Texture Cleanup when a texture is freed.\n     *\n     * @param texture\n     */\n    removeTextureFromCache(texture) {\n        const { inverseKeyCache, keyCache } = this;\n        const cacheKey = inverseKeyCache.get(texture);\n        if (cacheKey) {\n            keyCache.delete(cacheKey);\n        }\n    }\n    /**\n     * Resolve a parent texture from the cache or fallback to the provided texture.\n     *\n     * @param texture - The provided texture to resolve.\n     * @returns The cached or provided texture.\n     */\n    resolveParentTexture(texture) {\n        if (!texture?.props) {\n            return texture;\n        }\n        const cacheKey = ImageTexture.makeCacheKey(texture.props);\n        const cachedTexture = cacheKey\n            ? this.getTextureFromCache(cacheKey)\n            : undefined;\n        return cachedTexture ?? texture;\n    }\n}\n//# sourceMappingURL=CoreTextureManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst weightConversions = {\n    normal: 400,\n    bold: 700,\n    bolder: 900,\n    lighter: 100,\n};\nconst fontWeightToNumber = (weight) => {\n    if (typeof weight === 'number') {\n        return weight;\n    }\n    return weightConversions[weight] || 400;\n};\nfunction resolveFontToUse(familyMapsByPriority, family, weightIn, style, stretch) {\n    let weight = fontWeightToNumber(weightIn);\n    for (const fontFamiles of familyMapsByPriority) {\n        const fontFaces = fontFamiles[family];\n        if (!fontFaces) {\n            continue;\n        }\n        if (fontFaces.size === 1) {\n            // No Exact match found, find nearest weight match\n            console.warn(`TrFontManager: Only one font face found for family: '${family}' - will be used for all weights and styles`);\n            return fontFaces.values().next().value;\n        }\n        const weightMap = new Map();\n        for (const fontFace of fontFaces) {\n            const fontFamilyWeight = fontWeightToNumber(fontFace.descriptors.weight);\n            if (fontFamilyWeight === weight &&\n                fontFace.descriptors.style === style &&\n                fontFace.descriptors.stretch === stretch) {\n                return fontFace;\n            }\n            weightMap.set(fontFamilyWeight, fontFace);\n        }\n        // No Exact match found, find nearest weight match\n        const msg = `TrFontManager: No exact match: '${family} Weight: ${weight} Style: ${style} Stretch: ${stretch}'`;\n        console.error(msg);\n        // Follow the CSS font-weight algorithm to find the nearest weight match\n        // https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#font-matching-algorithm\n        if (weight === 400 && weightMap.has(500)) {\n            return weightMap.get(500);\n        }\n        if (weight === 500 && weightMap.has(400)) {\n            return weightMap.get(400);\n        }\n        if (weight < 400) {\n            while (weight > 0) {\n                if (weightMap.has(weight)) {\n                    return weightMap.get(weight);\n                }\n                weight -= 100;\n            }\n            // reset back for the next loop\n            weight = 600;\n        }\n        while (weight < 1000) {\n            if (weightMap.has(weight)) {\n                return weightMap.get(weight);\n            }\n            weight += 100;\n        }\n        // finally check lower again\n        weight = 500;\n        while (weight > 0) {\n            if (weightMap.has(weight)) {\n                return weightMap.get(weight);\n            }\n            weight -= 100;\n        }\n    }\n    return;\n}\nexport class TrFontManager {\n    textRenderers;\n    fontCache = new Map();\n    constructor(textRenderers) {\n        this.textRenderers = textRenderers;\n        // Intentionally left blank\n    }\n    addFontFace(font) {\n        // All the font face to all of the text renderers that support it\n        for (const trId in this.textRenderers) {\n            const tr = this.textRenderers[trId];\n            if (tr && tr.isFontFaceSupported(font)) {\n                tr.addFontFace(font);\n            }\n        }\n    }\n    /**\n     * Utility method to resolve a single font face from a list of prioritized family maps based on\n     * a set of font properties.\n     *\n     * @remarks\n     * These are to be used by a text renderer to resolve a font face if needed.\n     *\n     * @param familyMapsByPriority\n     * @param props\n     * @returns\n     */\n    resolveFontFace(familyMapsByPriority, props, rendererType) {\n        const { fontFamily, fontWeight, fontStyle, fontStretch } = props;\n        const fontCacheString = `${rendererType}_${fontFamily}_${fontStyle}_${fontWeight}_${fontStretch}`;\n        if (this.fontCache.has(fontCacheString) === true) {\n            return this.fontCache.get(fontCacheString);\n        }\n        const resolvedFont = resolveFontToUse(familyMapsByPriority, fontFamily, fontWeight, fontStyle, fontStretch);\n        if (resolvedFont !== undefined) {\n            this.fontCache.set(fontCacheString, resolvedFont);\n        }\n        return resolvedFont;\n    }\n}\n//# sourceMappingURL=TrFontManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(glw, type, source) {\n    const shader = glw.createShader(type);\n    if (!shader) {\n        const glError = glw.getError();\n        throw new Error(`Unable to create the shader: ${type === glw.VERTEX_SHADER ? 'VERTEX_SHADER' : 'FRAGMENT_SHADER'}.${glError ? ` WebGlContext Error: ${glError}` : ''}`);\n    }\n    glw.shaderSource(shader, source);\n    glw.compileShader(shader);\n    const success = !!glw.getShaderParameter(shader, glw.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.error(glw.getShaderInfoLog(shader));\n    glw.deleteShader(shader);\n}\nexport function createProgram(glw, vertexShader, fragmentShader) {\n    const program = glw.createProgram();\n    if (!program) {\n        throw new Error('Unable to create program');\n    }\n    glw.attachShader(program, vertexShader);\n    glw.attachShader(program, fragmentShader);\n    glw.linkProgram(program);\n    const success = !!glw.getProgramParameter(program, glw.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.warn(glw.getProgramInfoLog(program));\n    glw.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    glw;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const glw = (this.glw = this.renderer.glw);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = glw.isWebGl2();\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!glw.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(glw, glw.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(glw, glw.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error(`Unable to create the following shader(s): ${[\n                !vertexShader && 'VERTEX_SHADER',\n                !fragmentShader && 'FRAGMENT_SHADER',\n            ]\n                .filter(Boolean)\n                .join(' and ')}`);\n        }\n        const program = createProgram(glw, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error('Unable to create program');\n        }\n        this.program = program;\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = glw.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = glw.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = glw.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const { glw } = this;\n        glw.enableVertexAttribArray(location);\n        glw.vertexAttribPointer(buffer, location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.glw.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { glw, parentHasRenderTexture, renderToTexture } = renderOp;\n        // Skip if the parent and current operation both have render textures\n        if (renderToTexture && parentHasRenderTexture) {\n            return;\n        }\n        // Bind render texture framebuffer dimensions as resolution\n        // if the parent has a render texture\n        if (parentHasRenderTexture) {\n            const { width, height } = renderOp.framebufferDimensions || {};\n            // Force pixel ratio to 1.0 for render textures since they are always 1:1\n            // the final render texture will be rendered to the screen with the correct pixel ratio\n            glw.uniform1f(this.getUniformLocation('u_pixelRatio'), 1.0);\n            // Set resolution to the framebuffer dimensions\n            glw.uniform2f(this.getUniformLocation('u_resolution'), width ?? 0, height ?? 0);\n        }\n        else {\n            glw.uniform1f(this.getUniformLocation('u_pixelRatio'), renderOp.options.pixelRatio);\n            glw.uniform2f(this.getUniformLocation('u_resolution'), glw.canvas.width, glw.canvas.height);\n        }\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                glw.uniform2f(this.getUniformLocation('u_dimensions'), dimensions.width, dimensions.height);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                glw.uniform1f(this.getUniformLocation('u_alpha'), alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    getUniformLocation(name) {\n        return this.uniformLocations[name] || null;\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.glw.useProgram(this.program);\n        if (this.glw.isWebGl2() && this.vao) {\n            this.glw.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nexport class DefaultShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio;\n        vec2 screenSpace = vec2(2.0 / u_resolution.x, -2.0 / u_resolution.y);\n\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        gl_Position = vec4(normalized.x * screenSpace.x - 1.0, normalized.y * -abs(screenSpace.y) + 1.0, 0.0, 1.0);\n        gl_Position.y = -sign(screenSpace.y) * gl_Position.y;\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n          vec4 color = texture2D(u_texture, v_textureCoordinate);\n          gl_FragColor = vec4(v_color) * texture2D(u_texture, v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\n// import type { Texture } from '../textures/Texture';\nexport class DefaultShaderBatched extends WebGlCoreShader {\n    supportsIndexedTextures = true;\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: [\n                'a_position',\n                'a_textureCoordinate',\n                'a_color',\n                'a_textureIndex',\n            ],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_textures[0]', uniform: 'uniform1iv' },\n            ],\n        });\n    }\n    bindTextures(texture) {\n        const { renderer, glw } = this;\n        if (texture.length > renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS) {\n            throw new Error(`DefaultShaderBatched: Cannot bind more than ${renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS} textures`);\n        }\n        texture.forEach((t, i) => {\n            glw.activeTexture(i);\n            glw.bindTexture(t.ctxTexture);\n        });\n        const samplers = Array.from(Array(texture.length).keys());\n        this.glw.uniform1iv(this.getUniformLocation('u_textures[0]'), samplers);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_textureCoordinate;\n      attribute vec2 a_position;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      void main(){\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n        v_textureIndex = a_textureIndex;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: (textureUnits) => `\n      #define txUnits ${textureUnits}\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_image;\n      uniform sampler2D u_textures[txUnits];\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      vec4 sampleFromTexture(sampler2D textures[${textureUnits}], int idx, vec2 uv) {\n        ${Array.from(Array(textureUnits).keys())\n            .map((idx) => `\n          ${idx !== 0 ? 'else ' : ''}if (idx == ${idx}) {\n            return texture2D(textures[${idx}], uv);\n          }\n        `)\n            .join('')}\n        return texture2D(textures[0], uv);\n      }\n\n      void main(){\n        gl_FragColor = vec4(v_color) * sampleFromTexture(u_textures, int(v_textureIndex), v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShaderBatched.js.map","export class ShaderEffect {\n    priority = 1;\n    name = '';\n    ref;\n    target;\n    passParameters = '';\n    declaredUniforms = '';\n    uniformInfo = {};\n    static uniforms = {};\n    static methods;\n    static onShaderMask;\n    static onColorize;\n    static onEffectMask;\n    static getEffectKey(props) {\n        return '';\n    }\n    static getMethodParameters(uniforms, props) {\n        const res = [];\n        for (const u in uniforms) {\n            const uni = uniforms[u];\n            let define = '';\n            if (uni.size) {\n                define = `[${uni.size(props)}]`;\n            }\n            res.push(`${uni.type} ${u}${define}`);\n        }\n        return res.join(',');\n    }\n    constructor(options) {\n        const { ref, target, props = {} } = options;\n        this.ref = ref;\n        this.target = target;\n        const uniformInfo = {};\n        const passParameters = [];\n        let declaredUniforms = '';\n        const uniforms = this.constructor.uniforms || {};\n        for (const u in uniforms) {\n            const unif = uniforms[u];\n            const uniType = unif.type;\n            //make unique uniform name\n            const uniformName = `${ref}_${u}`;\n            let define = '';\n            if (unif.size) {\n                define = `[${unif.size(props)}]`;\n            }\n            passParameters.push(uniformName);\n            declaredUniforms += `uniform ${uniType} ${uniformName}${define};`;\n            uniformInfo[u] = { name: uniformName, uniform: uniforms[u].method };\n        }\n        this.passParameters = passParameters.join(',');\n        this.declaredUniforms = declaredUniforms;\n        this.uniformInfo = uniformInfo;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n    static makeEffectKey(props) {\n        return false;\n    }\n}\n//# sourceMappingURL=ShaderEffect.js.map","import { WebGlCoreShader, } from '../WebGlCoreShader.js';\nimport {} from '../internal/ShaderUtils.js';\nimport { ShaderEffect, } from './effects/ShaderEffect.js';\nimport { assertTruthy } from '../../../../utils.js';\nconst effectCache = new Map();\nconst getResolvedEffect = (effects, effectContructors) => {\n    const key = JSON.stringify(effects);\n    if (effectCache.has(key)) {\n        return effectCache.get(key);\n    }\n    effects = effects ?? [];\n    const resolvedEffects = [];\n    const effectsLength = effects.length;\n    let i = 0;\n    for (; i < effectsLength; i++) {\n        const { name, type, props } = effects[i];\n        const resolvedEffect = {\n            name,\n            type,\n            props: {},\n        };\n        const effectConstructor = effectContructors[type];\n        const defaultPropValues = effectConstructor.resolveDefaults(props);\n        const uniforms = effectConstructor.uniforms;\n        const uniformKeys = Object.keys(uniforms);\n        const uniformsLength = uniformKeys.length;\n        let j = 0;\n        for (; j < uniformsLength; j++) {\n            const key = uniformKeys[j];\n            const uniform = uniforms[key];\n            const result = {\n                value: defaultPropValues[key],\n                programValue: undefined,\n                method: uniform.method,\n                updateOnBind: uniform.updateOnBind || false,\n                hasValidator: uniform.validator !== undefined,\n                hasProgramValueUpdater: uniform.updateProgramValue !== undefined,\n            };\n            const validatedValue = (result.hasValidator &&\n                uniform.validator(defaultPropValues[key], defaultPropValues)) ||\n                defaultPropValues[key];\n            if (defaultPropValues[key] !== validatedValue) {\n                result.validatedValue = validatedValue;\n            }\n            if (result.hasProgramValueUpdater) {\n                uniform.updateProgramValue(result);\n            }\n            if (result.programValue === undefined) {\n                result.programValue = result.value;\n            }\n            resolvedEffect.props[key] = result;\n        }\n        resolvedEffects.push(resolvedEffect);\n    }\n    effectCache.set(key, resolvedEffects);\n    return resolvedEffects;\n};\nexport class DynamicShader extends WebGlCoreShader {\n    effects = [];\n    constructor(renderer, props, effectContructors) {\n        const shader = DynamicShader.createShader(props, effectContructors);\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_alpha', uniform: 'uniform1f' },\n                ...shader.uniforms,\n            ],\n            shaderSources: {\n                vertex: shader.vertex,\n                fragment: shader.fragment,\n            },\n        });\n        this.effects = shader.effects;\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindUniformMethods(props) {\n        const glw = this.glw;\n        const effects = props.effects;\n        const effectsL = effects.length;\n        for (let i = 0; i < effectsL; i++) {\n            const uniformInfo = this.effects[i].uniformInfo;\n            const effect = effects[i];\n            const propKeys = Object.keys(effect.props);\n            const propsLength = propKeys.length;\n            for (let j = 0; j < propsLength; j++) {\n                const key = propKeys[j];\n                const method = effect.props[key].method;\n                const location = this.getUniformLocation(uniformInfo[key].name);\n                if (method === 'uniform2fv' ||\n                    method === 'uniform2iv' ||\n                    //uniform === 'uniform3fv\t' || <--- check why this isnt recognized\n                    method === 'uniform3iv' ||\n                    method === 'uniform4fv' ||\n                    method === 'uniform4iv' ||\n                    method === 'uniformMatrix2fv' ||\n                    method === 'uniformMatrix3fv' ||\n                    method === 'uniformMatrix4fv' ||\n                    method === 'uniform1f' ||\n                    method === 'uniform1fv' ||\n                    method === 'uniform1i' ||\n                    method === 'uniform1iv') {\n                    effect.props[key].setUniformValue = function () {\n                        glw[method](location, this.programValue);\n                    };\n                    continue;\n                }\n                if (method === 'uniform2f' || method === 'uniform2i') {\n                    effect.props[key].setUniformValue = function () {\n                        glw[method](location, this.programValue[0], this.programValue[1]);\n                    };\n                    continue;\n                }\n                if (method === 'uniform3f' || method === 'uniform3i') {\n                    effect.props[key].setUniformValue = function () {\n                        glw[method](location, this.programValue[0], this.programValue[1], this.programValue[2]);\n                    };\n                    continue;\n                }\n                if (method === 'uniform4f' || method === 'uniform4i') {\n                    effect.props[key].setUniformValue = function () {\n                        glw[method](location, this.programValue[0], this.programValue[1], this.programValue[2], this.programValue[3]);\n                    };\n                    continue;\n                }\n            }\n        }\n    }\n    bindProps(props) {\n        const effects = props.effects;\n        const effectsL = effects.length;\n        let i = 0;\n        for (; i < effectsL; i++) {\n            const effect = effects[i];\n            const propKeys = Object.keys(effect.props);\n            const propsLength = propKeys.length;\n            let j = 0;\n            for (; j < propsLength; j++) {\n                const key = propKeys[j];\n                const prop = effect.props[key];\n                if (prop.updateOnBind === true) {\n                    const uniform = this.renderer.shManager.getRegisteredEffects()[effect.type]?.uniforms[key];\n                    uniform?.updateProgramValue(effect.props[key], props);\n                }\n                prop.setUniformValue();\n            }\n        }\n    }\n    canBatchShaderProps(propsA, propsB) {\n        if (propsA.$alpha !== propsB.$alpha ||\n            propsA.$dimensions.width !== propsB.$dimensions.width ||\n            propsA.$dimensions.height !== propsB.$dimensions.height ||\n            propsA.effects.length !== propsB.effects.length) {\n            return false;\n        }\n        const propsEffectsLen = propsA.effects.length;\n        let i = 0;\n        for (; i < propsEffectsLen; i++) {\n            const effectA = propsA.effects[i];\n            const effectB = propsB.effects[i];\n            if (effectA.type !== effectB.type) {\n                return false;\n            }\n            for (const key in effectA.props) {\n                if ((effectB.props && !effectB.props[key]) ||\n                    effectA.props[key].value !==\n                        effectB.props[key].value) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    static createShader(props, effectContructors) {\n        //counts duplicate effects\n        const effectNameCount = {};\n        const methods = {};\n        let declareUniforms = '';\n        const uniforms = [];\n        const uFx = [];\n        const effects = props.effects.map((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            effectNameCount[key] = effectNameCount[key] ? ++effectNameCount[key] : 1;\n            const nr = effectNameCount[key];\n            if (nr === 1) {\n                uFx.push({ key, type: effect.type, props: effect.props });\n            }\n            //initialize new effect class;\n            const fxClass = new baseClass({\n                ref: `${key}${nr === 1 ? '' : nr}`,\n                target: key,\n                props: effect.props,\n            });\n            declareUniforms += fxClass.declaredUniforms;\n            uniforms.push(...Object.values(fxClass.uniformInfo));\n            return fxClass;\n        });\n        //build source\n        let effectMethods = '';\n        uFx?.forEach((fx) => {\n            const fxClass = effectContructors[fx.type];\n            const fxProps = fxClass.resolveDefaults((fx.props ?? {}));\n            const remap = [];\n            for (const m in fxClass.methods) {\n                let cm = m;\n                const fxMethod = fxClass.methods[m];\n                if (methods[m] && methods[m] !== fxMethod) {\n                    cm = DynamicShader.resolveMethodDuplicate(m, fxMethod, methods);\n                }\n                methods[cm] = fxMethod.replace('function', cm);\n                remap.push({ m, cm });\n            }\n            let onShaderMask = fxClass.onShaderMask instanceof Function\n                ? fxClass.onShaderMask(fxProps)\n                : fxClass.onShaderMask;\n            let onColorize = fxClass.onColorize instanceof Function\n                ? fxClass.onColorize(fxProps)\n                : fxClass.onColorize;\n            let onEffectMask = fxClass.onEffectMask instanceof Function\n                ? fxClass.onEffectMask(fxProps)\n                : fxClass.onEffectMask;\n            remap.forEach((r) => {\n                const { m, cm } = r;\n                const reg = new RegExp(`\\\\$${m}`, 'g');\n                if (onShaderMask) {\n                    onShaderMask = onShaderMask.replace(reg, cm);\n                }\n                if (onColorize) {\n                    onColorize = onColorize.replace(reg, cm);\n                }\n                if (onEffectMask) {\n                    onEffectMask = onEffectMask.replace(reg, cm);\n                }\n            });\n            const methodParameters = fxClass.getMethodParameters(fxClass.uniforms, fxProps);\n            const pm = methodParameters.length > 0 ? `, ${methodParameters}` : '';\n            if (onShaderMask) {\n                effectMethods += `\n        float fx_${fx.key}_onShaderMask(float shaderMask ${pm}) {\n          ${onShaderMask}\n        }\n        `;\n            }\n            if (onColorize) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onColorize(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onColorize}\n          }\n        `;\n            }\n            if (onEffectMask) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onEffectMask(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onEffectMask}\n          }\n        `;\n            }\n        });\n        let sharedMethods = '';\n        for (const m in methods) {\n            sharedMethods += methods[m];\n        }\n        //fill main functions\n        let currentMask = `mix(shaderColor, maskColor, clamp(-(lng_DefaultMask), 0.0, 1.0))`;\n        let drawEffects = `\n\n    `;\n        for (let i = 0; i < effects.length; i++) {\n            const current = effects[i];\n            const pm = current.passParameters.length > 0 ? `, ${current.passParameters}` : '';\n            const currentClass = effectContructors[current.name];\n            if (currentClass.onShaderMask) {\n                drawEffects += `\n        shaderMask = fx_${current.target}_onShaderMask(shaderMask ${pm});\n        `;\n            }\n            if (currentClass.onColorize) {\n                drawEffects += `\n        maskColor = fx_${current.target}_onColorize(shaderMask, maskColor, shaderColor${pm});\n        `;\n            }\n            if (currentClass.onEffectMask) {\n                currentMask = `fx_${current.target}_onEffectMask(shaderMask, maskColor, shaderColor${pm})`;\n            }\n            const next = effects[i + 1];\n            if (next === undefined ||\n                effectContructors[next.name].onEffectMask) {\n                drawEffects += `\n          shaderColor = ${currentMask};\n        `;\n            }\n        }\n        return {\n            effects,\n            uniforms,\n            fragment: DynamicShader.fragment(declareUniforms, sharedMethods, effectMethods, drawEffects),\n            vertex: DynamicShader.vertex(),\n        };\n    }\n    static resolveMethodDuplicate(key, effectMethod, methodCollection, increment = 0) {\n        const m = key + (increment > 0 ? increment : '');\n        if (methodCollection[m] && methodCollection[m] !== effectMethod) {\n            return this.resolveMethodDuplicate(key, effectMethod, methodCollection, ++increment);\n        }\n        return m;\n    }\n    static resolveDefaults(props, effectContructors) {\n        assertTruthy(effectContructors);\n        return {\n            effects: getResolvedEffect(props.effects ?? [], effectContructors),\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n            $alpha: 0,\n        };\n    }\n    static makeCacheKey(props, effectContructors) {\n        let fx = '';\n        props.effects?.forEach((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            fx += `,${key}`;\n        });\n        return `DynamicShader${fx}`;\n    }\n    static z$__type__Props;\n    static vertex = () => `\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    attribute vec2 a_textureCoordinate;\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    attribute float a_textureIndex;\n\n    uniform vec2 u_resolution;\n    uniform float u_pixelRatio;\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n    varying float v_textureIndex;\n\n    void main(){\n      vec2 normalized = a_position * u_pixelRatio / u_resolution;\n      vec2 zero_two = normalized * 2.0;\n      vec2 clip_space = zero_two - 1.0;\n\n      // pass to fragment\n      v_color = a_color;\n      v_textureCoordinate = a_textureCoordinate;\n      v_textureIndex = a_textureIndex;\n\n      // flip y\n      gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n    }\n  `;\n    static fragment = (uniforms, methods, effectMethods, drawEffects) => `\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    #define PI 3.14159265359\n\n    uniform vec2 u_resolution;\n    uniform vec2 u_dimensions;\n    uniform float u_alpha;\n    uniform float u_radius;\n    uniform sampler2D u_texture;\n    uniform float u_pixelRatio;\n\n    ${uniforms}\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n\n    ${methods}\n\n    ${effectMethods}\n\n    void main() {\n      vec2 p = v_textureCoordinate.xy * u_dimensions - u_dimensions * 0.5;\n      vec2 d = abs(p) - (u_dimensions) * 0.5;\n      float lng_DefaultMask = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n\n      vec4 shaderColor = vec4(0.0);\n      float shaderMask = lng_DefaultMask;\n\n      vec4 maskColor = texture2D(u_texture, v_textureCoordinate) * v_color;\n\n      shaderColor = mix(shaderColor, maskColor, clamp(-(lng_DefaultMask + 0.5), 0.0, 1.0));\n\n      ${drawEffects}\n\n      gl_FragColor = shaderColor * u_alpha;\n    }\n  `;\n}\n//# sourceMappingURL=DynamicShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader, } from '../WebGlCoreShader.js';\n/**\n * Similar to the {@link DefaultShader} but cuts out 4 rounded rectangle corners\n * as defined by the specified corner {@link RoundedRectangleProps.radius}\n */\nexport class RoundedRectangle extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_radius', uniform: 'uniform1f' },\n            ],\n        });\n    }\n    static z$__type__Props;\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius || 10,\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n        };\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const radiusFactor = Math.min(props.$dimensions.width, props.$dimensions.height) /\n            (2.0 * props.radius);\n        this.glw.uniform1f(this.getUniformLocation('u_radius'), props.radius * Math.min(radiusFactor, 1));\n    }\n    canBatchShaderProps(propsA, propsB) {\n        return (propsA.radius === propsB.radius &&\n            propsA.$dimensions.width === propsB.$dimensions.width &&\n            propsA.$dimensions.height === propsB.$dimensions.height);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform vec2 u_dimensions;\n      uniform float u_radius;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n\n      float fillMask(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n\n      void main() {\n        vec4 color = texture2D(u_texture, v_textureCoordinate) * v_color;\n        vec2 halfDimensions = u_dimensions * 0.5;\n\n        float d = boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions + 0.5, u_radius);\n        gl_FragColor = mix(vec4(0.0), color, fillMask(d));\n      }\n    `,\n    };\n}\n//# sourceMappingURL=RoundedRectangle.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../lib/utils.js';\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nconst IDENTITY_MATRIX_3x3 = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n/**\n * SdfShader supports multi-channel and single-channel signed distance field textures.\n *\n * @remarks\n * This Shader is used by the {@link SdfTextRenderer}. Do not use thie Shader\n * directly. Instead create a Text Node and assign a SDF font family to it.\n *\n * @internalRemarks\n * The only thing this shader does to support multi-channel SDFs is to\n * add a median function to the fragment shader. If this one function call\n * ends up being a performance bottleneck we can always look at ways to\n * remove it.\n */\nexport class SdfShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_transform', uniform: 'uniformMatrix3fv' },\n                { name: 'u_scrollY', uniform: 'uniform1f' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_color', uniform: 'uniform4fv' },\n                { name: 'u_size', uniform: 'uniform1f' },\n                { name: 'u_distanceRange', uniform: 'uniform1f' },\n                { name: 'u_debug', uniform: 'uniform1i' },\n            ],\n        });\n    }\n    static z$__type__Props;\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const resolvedProps = SdfShader.resolveDefaults(props);\n        for (const key in resolvedProps) {\n            if (key === 'transform') {\n                this.glw.uniformMatrix3fv(this.getUniformLocation('u_transform'), resolvedProps[key]);\n            }\n            else if (key === 'scrollY') {\n                this.glw.uniform1f(this.getUniformLocation('u_scrollY'), resolvedProps[key]);\n            }\n            else if (key === 'color') {\n                const components = getNormalizedRgbaComponents(resolvedProps.color);\n                this.glw.uniform4fv(this.getUniformLocation('u_color'), components);\n            }\n            else if (key === 'size') {\n                this.glw.uniform1f(this.getUniformLocation('u_size'), resolvedProps[key]);\n            }\n            else if (key === 'distanceRange') {\n                this.glw.uniform1f(this.getUniformLocation('u_distanceRange'), resolvedProps[key]);\n            }\n            else if (key === 'debug') {\n                this.glw.uniform1i(this.getUniformLocation('u_debug'), resolvedProps[key] ? 1 : 0);\n            }\n        }\n    }\n    static resolveDefaults(props = {}) {\n        return {\n            transform: props.transform ?? IDENTITY_MATRIX_3x3,\n            scrollY: props.scrollY ?? 0,\n            color: props.color ?? 0xffffffff,\n            size: props.size ?? 16,\n            distanceRange: props.distanceRange ?? 1.0,\n            debug: props.debug ?? false,\n        };\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n      // an attribute is an input (in) to a vertex shader.\n      // It will receive data from a buffer\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n\n      uniform vec2 u_resolution;\n      uniform mat3 u_transform;\n      uniform float u_scrollY;\n      uniform float u_pixelRatio;\n      uniform float u_size;\n\n      varying vec2 v_texcoord;\n\n      void main() {\n        vec2 scrolledPosition = a_position * u_size - vec2(0, u_scrollY);\n        vec2 transformedPosition = (u_transform * vec3(scrolledPosition, 1)).xy;\n\n        // Calculate screen space with pixel ratio\n        vec2 screenSpace = (transformedPosition * u_pixelRatio / u_resolution * 2.0 - 1.0) * vec2(1, -1);\n\n        gl_Position = vec4(screenSpace, 0.0, 1.0);\n        v_texcoord = a_textureCoordinate;\n\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n      uniform vec4 u_color;\n      uniform sampler2D u_texture;\n      uniform float u_distanceRange;\n      uniform float u_pixelRatio;\n      uniform int u_debug;\n\n      varying vec2 v_texcoord;\n\n      float median(float r, float g, float b) {\n          return max(min(r, g), min(max(r, g), b));\n      }\n\n      void main() {\n          vec3 sample = texture2D(u_texture, v_texcoord).rgb;\n          if (u_debug == 1) {\n            gl_FragColor = vec4(sample.r, sample.g, sample.b, 1.0);\n            return;\n          }\n          float scaledDistRange = u_distanceRange * u_pixelRatio;\n          float sigDist = scaledDistRange * (median(sample.r, sample.g, sample.b) - 0.5);\n          float opacity = clamp(sigDist + 0.5, 0.0, 1.0) * u_color.a;\n\n          // Build the final color.\n          // IMPORTANT: We must premultiply the color by the alpha value before returning it.\n          gl_FragColor = vec4(u_color.r * opacity, u_color.g * opacity, u_color.b * opacity, opacity);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=SdfShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const colorToFloat32Array = (argb) => {\n    const col = getRgbaComponentsNormalized(argb);\n    /* eslint-disable @typescript-eslint/no-non-null-assertion -- getRgbaComponentsNormalized has a constant array size */\n    col[0] *= col[3];\n    col[1] *= col[3];\n    col[2] *= col[3];\n    /* eslint-enable */\n    return col;\n};\nconst getRgbaComponentsNormalized = (argb) => {\n    const r = ((argb / 65536) | 0) % 256;\n    const g = ((argb / 256) | 0) % 256;\n    const b = argb % 256;\n    const a = (argb / 16777216) | 0;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const updateShaderEffectColor = (values) => {\n    if (values.programValue === undefined) {\n        values.programValue = new Float32Array(4);\n    }\n    const rgba = values.value;\n    const floatArray = values.programValue;\n    floatArray[0] = (rgba >>> 24) / 255;\n    floatArray[1] = ((rgba >>> 16) & 0xff) / 255;\n    floatArray[2] = ((rgba >>> 8) & 0xff) / 255;\n    floatArray[3] = (rgba & 0xff) / 255;\n};\nexport const updateFloat32ArrayLength2 = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const floatArray = values.programValue;\n        floatArray[0] = validatedValue[0];\n        floatArray[1] = validatedValue[1];\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const updateFloat32ArrayLength4 = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const floatArray = values.programValue;\n        floatArray[0] = validatedValue[0];\n        floatArray[1] = validatedValue[1];\n        floatArray[2] = validatedValue[2];\n        floatArray[3] = validatedValue[3];\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const updateFloat32ArrayLengthN = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const len = validatedValue.length;\n        const programValue = values.programValue;\n        for (let i = 0; i < len; i++) {\n            programValue[i] = validatedValue[i];\n        }\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const validateArrayLength4 = (value) => {\n    const isArray = Array.isArray(value);\n    if (!isArray) {\n        return [value, value, value, value];\n    }\n    else if (isArray && value.length === 4) {\n        return value;\n    }\n    else if (isArray && value.length === 2) {\n        return [value[0], value[1], value[0], value[1]];\n    }\n    else if (isArray && value.length === 3) {\n        return [value[0], value[1], value[2], value[0]];\n    }\n    return [value[0], value[0], value[0], value[0]];\n};\nexport const updateWebSafeRadius = (values, shaderProps) => {\n    if (values.programValue === undefined) {\n        values.programValue = new Float32Array(4);\n    }\n    const programValue = values.programValue;\n    const validatedValue = (values.validatedValue || values.value);\n    if (shaderProps === undefined && values.$dimensions === undefined) {\n        programValue[0] = validatedValue[0];\n        programValue[1] = validatedValue[1];\n        programValue[2] = validatedValue[2];\n        programValue[3] = validatedValue[3];\n        return;\n    }\n    let storedDimensions = values.$dimensions;\n    if (shaderProps !== undefined) {\n        const { $dimensions } = shaderProps;\n        if (storedDimensions !== undefined &&\n            (storedDimensions.width === $dimensions.width ||\n                storedDimensions.height === $dimensions.height)) {\n            return;\n        }\n        if (storedDimensions === undefined) {\n            storedDimensions = {\n                width: $dimensions?.width,\n                height: $dimensions?.height,\n            };\n            values.$dimensions = storedDimensions;\n        }\n    }\n    const { width, height } = storedDimensions;\n    const [r0, r1, r2, r3] = validatedValue;\n    const factor = Math.min(Math.min(Math.min(width / Math.max(width, r0 + r1), width / Math.max(width, r2 + r3)), Math.min(height / Math.max(height, r0 + r2), height / Math.max(height, r1 + r3))), 1);\n    programValue[0] = r0 * factor;\n    programValue[1] = r1 * factor;\n    programValue[2] = r2 * factor;\n    programValue[3] = r3 * factor;\n};\n//# sourceMappingURL=EffectUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateWebSafeRadius, validateArrayLength4 } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor with rounded corners similar to {@link RoundedRectangle}\n */\nexport class RadiusEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radius';\n    static getEffectKey() {\n        return `radius`;\n    }\n    static uniforms = {\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            updateOnBind: true,\n            validator: validateArrayLength4,\n            updateProgramValue: updateWebSafeRadius,\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius ?? 10,\n        };\n    }\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  float r = radius[0] * step(v_textureCoordinate.x, 0.5) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[1] * step(0.5, v_textureCoordinate.x) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[2] * step(0.5, v_textureCoordinate.x) * step(0.5, v_textureCoordinate.y);\n  r = r + radius[3] * step(v_textureCoordinate.x, 0.5) * step(0.5, v_textureCoordinate.y);\n  return $boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions, r);\n  `;\n    static onEffectMask = `\n  return mix(vec4(0.0), maskColor, $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=RadiusEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderEffect renders a border along all edges of an element\n */\nexport class BorderEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'border';\n    static getEffectKey() {\n        return `border`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static onEffectMask = `\n  float intR = shaderMask + 1.0;\n  float mask = clamp(intR + width, 0.0, 1.0) - clamp(intR, 0.0, 1.0);\n  return mix(shaderColor, mix(shaderColor, maskColor, maskColor.a), mask);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateFloat32ArrayLengthN } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Linear Gradient effect over a effect mask\n */\nexport class LinearGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'linearGradient';\n    static getEffectKey(props) {\n        if (props.colors.value) {\n            return `linearGradient${props.colors.value\n                .length}`;\n        }\n        return `linearGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops || [];\n        if (stops.length === 0 || stops.length !== colors.length) {\n            const colorsL = colors.length;\n            let i = 0;\n            const tmp = stops;\n            for (; i < colorsL; i++) {\n                if (stops[i]) {\n                    tmp[i] = stops[i];\n                    if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                        tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                    }\n                }\n                else {\n                    tmp[i] = i * (1 / (colors.length - 1));\n                }\n            }\n            stops = tmp;\n        }\n        return {\n            colors,\n            stops,\n            angle: props.angle ?? 0,\n        };\n    }\n    static uniforms = {\n        angle: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                return rgbas.reduce((acc, val) => acc.concat(getNormalizedRgbaComponents(val)), []);\n            },\n            updateProgramValue: updateFloat32ArrayLengthN,\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static methods = {\n        fromLinear: `\n      vec4 function(vec4 linearRGB) {\n        vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\n        vec4 lower = linearRGB * vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        toLinear: `\n      vec4 function(vec4 sRGB) {\n        vec4 higher = pow((sRGB + vec4(0.055))/vec4(1.055), vec4(2.4));\n        vec4 lower = sRGB/vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        calcPoint: `\n      vec2 function(float d, float angle) {\n        return d * vec2(cos(angle), sin(angle)) + (u_dimensions * 0.5);\n      }\n    `,\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      float a = angle - (PI / 180.0 * 90.0);\n      float lineDist = abs(u_dimensions.x * cos(a)) + abs(u_dimensions.y * sin(a));\n      vec2 f = $calcPoint(lineDist * 0.5, a);\n      vec2 t = $calcPoint(lineDist * 0.5, a + PI);\n      vec2 gradVec = t - f;\n      float dist = dot(v_textureCoordinate.xy * u_dimensions - f, gradVec) / dot(gradVec, gradVec);\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = $fromLinear(mix($toLinear(colors[0]), $toLinear(colors[1]), stopCalc));\n      ${this.ColorLoop(colors)}\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=LinearGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Grayscale effect grayscales the color values of the current mask color\n */\nexport class GrayscaleEffect extends ShaderEffect {\n    name = 'grayscale';\n    static getEffectKey() {\n        return `grayscale`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amount: props.amount ?? 1,\n        };\n    }\n    static uniforms = {\n        amount: {\n            value: 1,\n            method: 'uniform1f',\n            type: 'float',\n        },\n    };\n    static onColorize = `\n    float grayness = 0.2 * maskColor.r + 0.6 * maskColor.g + 0.2 * maskColor.b;\n    return vec4(amount * vec3(grayness) + (1.0 - amount) * maskColor.rgb, maskColor.a);\n  `;\n}\n//# sourceMappingURL=GrayscaleEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the right side of an element\n */\nexport class BorderRightEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderRight';\n    static getEffectKey() {\n        return `borderRight`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(u_dimensions.x - width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderRightEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the top side of an element\n */\nexport class BorderTopEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderTop';\n    static getEffectKey() {\n        return `borderTop`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderTopEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the bottom side of an element\n */\nexport class BorderBottomEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderBottom';\n    static getEffectKey() {\n        return `borderBottom`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, u_dimensions.y - width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderBottomEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the left of an element\n */\nexport class BorderLeftEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderLeft';\n    static getEffectKey() {\n        return `borderLeft`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderLeftEffect.js.map","import { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Renders a Glitch effect using the incoming texture\n */\nexport class GlitchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'glitch';\n    static getEffectKey(props) {\n        return `glitch`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amplitude: props.amplitude ?? 0.2,\n            narrowness: props.narrowness ?? 4.0,\n            blockiness: props.blockiness ?? 2.0,\n            minimizer: props.minimizer ?? 8.0,\n            time: props.time ?? Date.now(),\n        };\n    }\n    static uniforms = {\n        amplitude: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        narrowness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        blockiness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        minimizer: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        time: {\n            value: 0,\n            method: 'uniform1f',\n            updateOnBind: true,\n            updateProgramValue: (values) => {\n                const value = (values.value =\n                    (Date.now() - values.value) % 1000);\n                values.programValue = value;\n            },\n            type: 'float',\n        },\n    };\n    static methods = {\n        rand: `\n      float function(vec2 p, float time) {\n        float t = floor(time * 20.) / 10.;\n        return fract(sin(dot(p, vec2(t * 12.9898, t * 78.233))) * 43758.5453);\n      }\n    `,\n        noise: `\n      float function(vec2 uv, float blockiness, float time) {\n        vec2 lv = fract(uv);\n        vec2 id = floor(uv);\n\n        float n1 = rand(id, time);\n        float n2 = rand(id+vec2(1,0), time);\n        float n3 = rand(id+vec2(0,1), time);\n        float n4 = rand(id+vec2(1,1), time);\n        vec2 u = smoothstep(0.0, 1.0 + blockiness, lv);\n        return mix(mix(n1, n2, u.x), mix(n3, n4, u.x), u.y);\n      }\n    `,\n        fbm: `\n      float function(vec2 uv, int count, float blockiness, float complexity, float time) {\n        float val = 0.0;\n        float amp = 0.5;\n        const int MAX_ITERATIONS = 10;\n\n        for(int i = 0; i < MAX_ITERATIONS; i++) {\n          if(i >= count) {break;}\n          val += amp * noise(uv, blockiness, time);\n          amp *= 0.5;\n          uv *= complexity;\n        }\n        return val;\n      }\n    `,\n    };\n    static onColorize = `\n    vec2 uv = v_textureCoordinate.xy;\n    float aspect = u_dimensions.x / u_dimensions.y;\n    vec2 a = vec2(uv.x * aspect , uv.y);\n    vec2 uv2 = vec2(a.x / u_dimensions.x, exp(a.y));\n\n    float shift = amplitude * pow($fbm(uv2, 4, blockiness, narrowness, time), minimizer);\n    float colR = texture2D(u_texture, vec2(uv.x + shift, uv.y)).r * (1. - shift);\n    float colG = texture2D(u_texture, vec2(uv.x - shift, uv.y)).g * (1. - shift);\n    float colB = texture2D(u_texture, vec2(uv.x - shift, uv.y)).b * (1. - shift);\n\n    vec3 f = vec3(colR, colG, colB);\n    return vec4(f, texture2D(u_texture, vec2(uv.x - shift, uv.y)).a);\n  `;\n}\n//# sourceMappingURL=GlitchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateFloat32ArrayLength4, validateArrayLength4, } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class FadeOutEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'fadeOut';\n    static getEffectKey() {\n        return `fadeOut`;\n    }\n    static uniforms = {\n        fade: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: validateArrayLength4,\n            updateProgramValue: updateFloat32ArrayLength4,\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            fade: props.fade ?? 10,\n        };\n    }\n    static onColorize = `\n  vec2 point = v_textureCoordinate.xy * u_dimensions.xy;\n  vec2 pos1;\n  vec2 pos2;\n  vec2 d;\n  float c;\n  vec4 result = maskColor;\n\n\n  if(fade[0] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x, point.y + fade[0]);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[1] > 0.0) {\n    pos1 = vec2(point.x - u_dimensions.x - fade[1], v_textureCoordinate.y);\n    pos2 = vec2(point.x - u_dimensions.x, v_textureCoordinate.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[2] > 0.0) {\n    pos1 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y - fade[2]);\n    pos2 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[3] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x + fade[3], point.y);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  return result;\n  `;\n}\n//# sourceMappingURL=FadeOutEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateFloat32ArrayLength2, updateFloat32ArrayLengthN, } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class RadialGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialGradient';\n    static getEffectKey(props) {\n        if (props.colors.value) {\n            return `radialGradient${props.colors.value\n                .length}`;\n        }\n        return `radialGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops || [];\n        if (stops.length === 0 || stops.length !== colors.length) {\n            const colorsL = colors.length;\n            let i = 0;\n            const tmp = stops;\n            for (; i < colorsL; i++) {\n                if (stops[i]) {\n                    tmp[i] = stops[i];\n                    if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                        tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                    }\n                }\n                else {\n                    tmp[i] = i * (1 / (colors.length - 1));\n                }\n            }\n            stops = tmp;\n        }\n        return {\n            colors,\n            stops,\n            width: props.width ?? 0,\n            height: props.height ?? props.width ?? 0,\n            pivot: props.pivot ?? [0.5, 0.5],\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        pivot: {\n            value: [0.5, 0.5],\n            updateProgramValue: updateFloat32ArrayLength2,\n            method: 'uniform2fv',\n            type: 'vec2',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                return rgbas.reduce((acc, val) => acc.concat(getNormalizedRgbaComponents(val)), []);\n            },\n            updateProgramValue: updateFloat32ArrayLengthN,\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      vec2 point = v_textureCoordinate.xy * u_dimensions;\n      vec2 projection = vec2(pivot.x * u_dimensions.x, pivot.y * u_dimensions.y);\n\n      float dist = length((point - projection) / vec2(width, height));\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = mix(colors[0], colors[1], stopCalc);\n      ${this.ColorLoop(colors)}\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=RadialGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The RadialProgressEffect renders a border along all edges of an element\n */\nexport class RadialProgressEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialProgress';\n    static getEffectKey() {\n        return `radialProgress`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            progress: props.progress ?? 0.5,\n            offset: props.offset ?? 0,\n            range: props.range ?? Math.PI * 2,\n            rounded: props.rounded ?? false,\n            radius: props.radius ?? 1,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        progress: {\n            value: 0.5,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        offset: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        range: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        rounded: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n            validator: (value) => {\n                return value ? 1 : 0;\n            },\n        },\n        radius: {\n            value: 1,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        rotateUV: `\n    vec2 function(vec2 uv, float d) {\n      float s = sin(d);\n      float c = cos(d);\n      mat2 rotMatrix = mat2(c, -s, s, c);\n      return uv * rotMatrix;\n    }\n    `,\n        drawDot: `\n    float function(vec2 uv, vec2 p, float r) {\n      uv += p;\n      float circle = length(uv) - r;\n      return clamp(-circle, 0.0, 1.0);\n    }\n    `,\n    };\n    static onEffectMask = `\n    float outerRadius = radius * u_dimensions.y * 0.5;\n\n    float endAngle = range * progress - 0.0005;\n\n    vec2 uv = v_textureCoordinate.xy * u_dimensions.xy - u_dimensions * 0.5;\n\n    uv = $rotateUV(uv, -(offset));\n    float linewidth = width * u_pixelRatio;\n    float circle = length(uv) - (outerRadius - linewidth) ;\n    circle = abs(circle) - linewidth;\n    circle = clamp(-circle, 0.0, 1.0);\n\n    float angle = (atan(uv.x, -uv.y) / 3.14159265359 * 0.5);\n    float p = endAngle / (PI * 2.);\n\n    circle *= step(fract(angle), fract(p));\n\n    circle = rounded < 1. ? circle : max(circle, $drawDot(uv, vec2(0, outerRadius - linewidth), linewidth));\n    circle = rounded < 1. ? circle : max(circle, $drawDot($rotateUV(uv, -(endAngle)), vec2(0, outerRadius - linewidth), linewidth));\n\n    return mix(shaderColor, maskColor, circle);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=RadialProgressEffect.js.map","import { updateWebSafeRadius, validateArrayLength4 } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor a holepunch effect with rounded corners similar to {@link RoundedRectangle}\n */\nexport class HolePunchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'holePunch';\n    static getEffectKey() {\n        return `holePunch`;\n    }\n    static uniforms = {\n        x: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        y: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            updateOnBind: true,\n            validator: validateArrayLength4,\n            updateProgramValue: updateWebSafeRadius,\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 50,\n            height: props.height || 50,\n            radius: props.radius ?? 0,\n        };\n    }\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  vec2 size = vec2(width, height) * 0.5;\n  vec2 basePos = v_textureCoordinate.xy * u_dimensions.xy - vec2(x, y);\n  vec2 pos = basePos - size;\n  float r = radius[0] * step(pos.x, 0.5) * step(pos.y, 0.5);\n  r = r + radius[1] * step(0.5, pos.x) * step(pos.y, 0.5);\n  r = r + radius[2] * step(0.5, pos.x) * step(0.5, pos.y);\n  r = r + radius[3] * step(pos.x, 0.5) * step(0.5, pos.y);\n  return $boxDist(pos, size, r);\n  `;\n    static onEffectMask = `\n  return mix(maskColor, vec4(0.0), $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=HolePunchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreShader } from '../../CoreShader.js';\nexport const ROUNDED_RECTANGLE_SHADER_TYPE = 'RoundedRectangle';\nexport class UnsupportedShader extends CoreShader {\n    shType;\n    constructor(shType) {\n        super();\n        this.shType = shType;\n        // if (shType !== ROUNDED_RECTANGLE_SHADER_TYPE) {\n        //   console.warn('Unsupported shader:', shType);\n        // }\n    }\n    bindRenderOp() {\n        // noop\n    }\n    bindProps() {\n        // noop\n    }\n    attach() {\n        // noop\n    }\n    detach() {\n        // noop\n    }\n}\n//# sourceMappingURL=UnsupportedShader.js.map","/**\n * Shader Controller Class\n *\n * @remarks\n * This class is used to control shader props.\n */\nexport class ShaderController {\n    type;\n    shader;\n    resolvedProps;\n    props;\n    constructor(type, shader, props, stage) {\n        this.type = type;\n        this.shader = shader;\n        this.resolvedProps = props;\n        const keys = Object.keys(props);\n        const l = keys.length;\n        const definedProps = {};\n        for (let i = 0; i < l; i++) {\n            const name = keys[i];\n            Object.defineProperty(definedProps, name, {\n                get: () => {\n                    return this.resolvedProps[name];\n                },\n                set: (value) => {\n                    this.resolvedProps[name] = value;\n                    stage.requestRender();\n                },\n            });\n        }\n        this.props = definedProps;\n    }\n    getResolvedProps() {\n        return this.resolvedProps;\n    }\n}\n//# sourceMappingURL=ShaderController.js.map","export class DynamicShaderController {\n    shader;\n    resolvedProps;\n    props;\n    type;\n    constructor(shader, props, shManager) {\n        this.shader = shader;\n        this.type = 'DynamicShader';\n        this.resolvedProps = props;\n        const effectConstructors = shManager.getRegisteredEffects();\n        const definedProps = {};\n        const effects = props.effects;\n        const effectsLength = effects.length;\n        for (let i = 0; i < effectsLength; i++) {\n            const { name: effectName, props: effectProps, type: effectType, } = effects[i];\n            if (effectName === undefined) {\n                continue;\n            }\n            const definedEffectProps = {};\n            const propEntries = Object.keys(effectProps);\n            const propEntriesLength = propEntries.length;\n            for (let j = 0; j < propEntriesLength; j++) {\n                const propName = propEntries[j];\n                Object.defineProperty(definedEffectProps, propName, {\n                    get: () => {\n                        return this.resolvedProps.effects[i].props[propName].value;\n                    },\n                    set: (value) => {\n                        const target = this.resolvedProps.effects[i].props[propName];\n                        target.value = value;\n                        if (target.hasValidator) {\n                            value = target.validatedValue = effectConstructors[effectType]\n                                .uniforms[propName]?.validator(value, effectProps);\n                        }\n                        if (target.hasProgramValueUpdater) {\n                            effectConstructors[effectType].uniforms[propName]\n                                ?.updateProgramValue(target);\n                        }\n                        else {\n                            target.programValue = value;\n                        }\n                        shManager.renderer.stage.requestRender();\n                    },\n                });\n            }\n            Object.defineProperty(definedProps, effectName, {\n                get: () => {\n                    return definedEffectProps;\n                },\n            });\n        }\n        this.props = definedProps;\n    }\n    getResolvedProps() {\n        return this.resolvedProps;\n    }\n}\n//# sourceMappingURL=DynamicShaderController.js.map","import { DefaultShader } from './renderers/webgl/shaders/DefaultShader.js';\nimport { DefaultShaderBatched } from './renderers/webgl/shaders/DefaultShaderBatched.js';\nimport { DynamicShader, } from './renderers/webgl/shaders/DynamicShader.js';\nimport { RoundedRectangle } from './renderers/webgl/shaders/RoundedRectangle.js';\nimport { SdfShader } from './renderers/webgl/shaders/SdfShader.js';\nimport { RadiusEffect } from './renderers/webgl/shaders/effects/RadiusEffect.js';\nimport { BorderEffect } from './renderers/webgl/shaders/effects/BorderEffect.js';\nimport { LinearGradientEffect, } from './renderers/webgl/shaders/effects/LinearGradientEffect.js';\nimport { GrayscaleEffect, } from './renderers/webgl/shaders/effects/GrayscaleEffect.js';\nimport { BorderRightEffect } from './renderers/webgl/shaders/effects/BorderRightEffect.js';\nimport { BorderTopEffect } from './renderers/webgl/shaders/effects/BorderTopEffect.js';\nimport { BorderBottomEffect } from './renderers/webgl/shaders/effects/BorderBottomEffect.js';\nimport { BorderLeftEffect } from './renderers/webgl/shaders/effects/BorderLeftEffect.js';\nimport { GlitchEffect, } from './renderers/webgl/shaders/effects/GlitchEffect.js';\nimport { FadeOutEffect, } from './renderers/webgl/shaders/effects/FadeOutEffect.js';\nimport { RadialGradientEffect, } from './renderers/webgl/shaders/effects/RadialGradientEffect.js';\nimport { RadialProgressEffect, } from './renderers/webgl/shaders/effects/RadialProgressEffect.js';\nimport { HolePunchEffect, } from './renderers/webgl/shaders/effects/HolePunchEffect.js';\nimport { WebGlCoreShader } from './renderers/webgl/WebGlCoreShader.js';\nimport { UnsupportedShader } from './renderers/canvas/shaders/UnsupportedShader.js';\nimport { ShaderController } from '../main-api/ShaderController.js';\nimport { DynamicShaderController, } from '../main-api/DynamicShaderController.js';\nexport class CoreShaderManager {\n    shCache = new Map();\n    shConstructors = {};\n    attachedShader = null;\n    effectConstructors = {};\n    renderer;\n    constructor() {\n        this.registerShaderType('DefaultShader', DefaultShader);\n        this.registerShaderType('DefaultShaderBatched', DefaultShaderBatched);\n        this.registerShaderType('RoundedRectangle', RoundedRectangle);\n        this.registerShaderType('DynamicShader', DynamicShader);\n        this.registerShaderType('SdfShader', SdfShader);\n        this.registerEffectType('border', BorderEffect);\n        this.registerEffectType('borderBottom', BorderBottomEffect);\n        this.registerEffectType('borderLeft', BorderLeftEffect);\n        this.registerEffectType('borderRight', BorderRightEffect);\n        this.registerEffectType('borderTop', BorderTopEffect);\n        this.registerEffectType('fadeOut', FadeOutEffect);\n        this.registerEffectType('linearGradient', LinearGradientEffect);\n        this.registerEffectType('radialGradient', RadialGradientEffect);\n        this.registerEffectType('grayscale', GrayscaleEffect);\n        this.registerEffectType('glitch', GlitchEffect);\n        this.registerEffectType('radius', RadiusEffect);\n        this.registerEffectType('radialProgress', RadialProgressEffect);\n        this.registerEffectType('holePunch', HolePunchEffect);\n    }\n    registerShaderType(shType, shClass) {\n        this.shConstructors[shType] = shClass;\n    }\n    registerEffectType(effectType, effectClass) {\n        this.effectConstructors[effectType] = effectClass;\n    }\n    getRegisteredEffects() {\n        return this.effectConstructors;\n    }\n    getRegisteredShaders() {\n        return this.shConstructors;\n    }\n    /**\n     * Loads a shader (if not already loaded) and returns a controller for it.\n     *\n     * @param shType\n     * @param props\n     * @returns\n     */\n    loadShader(shType, props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const ShaderClass = this.shConstructors[shType];\n        if (!ShaderClass) {\n            throw new Error(`Shader type \"${shType}\" is not registered`);\n        }\n        if (this.renderer.mode === 'canvas' &&\n            ShaderClass.prototype instanceof WebGlCoreShader) {\n            return this._createShaderCtr(shType, new UnsupportedShader(shType), props);\n        }\n        if (shType === 'DynamicShader') {\n            return this.loadDynamicShader(props);\n        }\n        const resolvedProps = ShaderClass.resolveDefaults(props);\n        const cacheKey = ShaderClass.makeCacheKey(resolvedProps) || ShaderClass.name;\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return this._createShaderCtr(shType, this.shCache.get(cacheKey), resolvedProps);\n        }\n        // @ts-expect-error ShaderClass WILL accept a Renderer\n        const shader = new ShaderClass(this.renderer, props);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return this._createShaderCtr(shType, shader, resolvedProps);\n    }\n    loadDynamicShader(props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const resolvedProps = DynamicShader.resolveDefaults(props, this.effectConstructors);\n        const cacheKey = DynamicShader.makeCacheKey(resolvedProps, this.effectConstructors);\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return this._createDynShaderCtr(this.shCache.get(cacheKey), resolvedProps);\n        }\n        const shader = new DynamicShader(this.renderer, props, this.effectConstructors);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return this._createDynShaderCtr(shader, resolvedProps);\n    }\n    _createShaderCtr(type, shader, props) {\n        return new ShaderController(type, shader, props, this.renderer.stage);\n    }\n    _createDynShaderCtr(shader, props) {\n        shader.bindUniformMethods(props);\n        return new DynamicShaderController(shader, props, this);\n    }\n    useShader(shader) {\n        if (this.attachedShader === shader) {\n            return;\n        }\n        if (this.attachedShader) {\n            this.attachedShader.detach();\n        }\n        shader.attach();\n        this.attachedShader = shader;\n    }\n}\n//# sourceMappingURL=CoreShaderManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst trPropSetterDefaults = {\n    x: (state, value) => {\n        state.props.x = value;\n    },\n    y: (state, value) => {\n        state.props.y = value;\n    },\n    width: (state, value) => {\n        state.props.width = value;\n    },\n    height: (state, value) => {\n        state.props.height = value;\n    },\n    color: (state, value) => {\n        state.props.color = value;\n    },\n    zIndex: (state, value) => {\n        state.props.zIndex = value;\n    },\n    fontFamily: (state, value) => {\n        state.props.fontFamily = value;\n    },\n    fontWeight: (state, value) => {\n        state.props.fontWeight = value;\n    },\n    fontStyle: (state, value) => {\n        state.props.fontStyle = value;\n    },\n    fontStretch: (state, value) => {\n        state.props.fontStretch = value;\n    },\n    fontSize: (state, value) => {\n        state.props.fontSize = value;\n    },\n    text: (state, value) => {\n        state.props.text = value;\n    },\n    textAlign: (state, value) => {\n        state.props.textAlign = value;\n    },\n    contain: (state, value) => {\n        state.props.contain = value;\n    },\n    offsetY: (state, value) => {\n        state.props.offsetY = value;\n    },\n    scrollable: (state, value) => {\n        state.props.scrollable = value;\n    },\n    scrollY: (state, value) => {\n        state.props.scrollY = value;\n    },\n    letterSpacing: (state, value) => {\n        state.props.letterSpacing = value;\n    },\n    lineHeight: (state, value) => {\n        state.props.lineHeight = value;\n    },\n    maxLines: (state, value) => {\n        state.props.maxLines = value;\n    },\n    textBaseline: (state, value) => {\n        state.props.textBaseline = value;\n    },\n    verticalAlign: (state, value) => {\n        state.props.verticalAlign = value;\n    },\n    overflowSuffix: (state, value) => {\n        state.props.overflowSuffix = value;\n    },\n    debug: (state, value) => {\n        state.props.debug = value;\n    },\n};\nexport class TextRenderer {\n    stage;\n    set;\n    constructor(stage) {\n        this.stage = stage;\n        const propSetters = {\n            ...trPropSetterDefaults,\n            ...this.getPropertySetters(),\n        };\n        // For each prop setter add a wrapper method that checks if the prop is\n        // different before calling the setter\n        const propSet = {};\n        Object.keys(propSetters).forEach((key) => {\n            Object.defineProperty(propSet, key, {\n                value: (state, value) => {\n                    // Check if the current prop value is different before calling the setter\n                    if (state.props[key] !== value) {\n                        propSetters[key](state, value);\n                        // Assume any prop change will require a render\n                        // This ensures that renders are triggered appropriately even with RAF paused\n                        this.stage.requestRender();\n                    }\n                },\n                writable: false, // Prevents property from being changed\n                configurable: false, // Prevents property from being deleted\n            });\n        });\n        this.set = propSet;\n    }\n    setStatus(state, status, error) {\n        // Don't emit the same status twice\n        if (state.status === status) {\n            return;\n        }\n        state.status = status;\n        state.emitter.emit(status, error);\n    }\n    /**\n     * Allows the CoreTextNode to communicate changes to the isRenderable state of\n     * the itself.\n     *\n     * @param state\n     * @param renderable\n     */\n    setIsRenderable(state, renderable) {\n        state.isRenderable = renderable;\n    }\n    /**\n     * Destroy/Clean up the state object\n     *\n     * @remarks\n     * Opposite of createState(). Frees any event listeners / resources held by\n     * the state that may not reliably get garbage collected.\n     *\n     * @param state\n     */\n    destroyState(state) {\n        this.setStatus(state, 'destroyed');\n        state.emitter.removeAllListeners();\n    }\n    /**\n     * Schedule a state update via queueMicrotask\n     *\n     * @remarks\n     * This method is used to schedule a state update via queueMicrotask. This\n     * method should be called whenever a state update is needed, and it will\n     * ensure that the state is only updated once per microtask.\n     * @param state\n     * @returns\n     */\n    scheduleUpdateState(state) {\n        if (state.updateScheduled) {\n            return;\n        }\n        state.updateScheduled = true;\n        queueMicrotask(() => {\n            // If the state has been destroyed, don't update it\n            if (state.status === 'destroyed') {\n                return;\n            }\n            state.updateScheduled = false;\n            this.updateState(state);\n        });\n    }\n}\n//# sourceMappingURL=TextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class that keeps track of the invocations of Context methods when\n * the `enableContextSpy` renderer option is enabled.\n */\nexport class ContextSpy {\n    data = {};\n    reset() {\n        this.data = {};\n    }\n    increment(name) {\n        if (!this.data[name]) {\n            this.data[name] = 0;\n        }\n        this.data[name]++;\n    }\n    getData() {\n        return { ...this.data };\n    }\n}\n//# sourceMappingURL=ContextSpy.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2024 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isProductionEnvironment } from '../utils.js';\nimport { getTimeStamp } from './platform.js';\nimport { bytesToMb } from './utils.js';\n/**\n * LRU (Least Recently Used) style memory manager for textures\n *\n * @remarks\n * This class is responsible for managing the memory usage of textures\n * in the Renderer. It keeps track of the memory used by each texture\n * and triggers a cleanup when the memory usage exceeds a critical\n * threshold (`criticalThreshold`).\n *\n * The cleanup process will free up non-renderable textures until the\n * memory usage is below a target threshold (`targetThresholdLevel`).\n *\n * The memory manager's clean up process will also be triggered when the\n * scene is idle for a certain amount of time (`cleanupInterval`).\n */\nexport class TextureMemoryManager {\n    stage;\n    memUsed = 0;\n    loadedTextures = new Map();\n    orphanedTextures = [];\n    criticalThreshold;\n    targetThreshold;\n    cleanupInterval;\n    debugLogging;\n    lastCleanupTime = 0;\n    baselineMemoryAllocation;\n    criticalCleanupRequested = false;\n    /**\n     * The current frame time in milliseconds\n     *\n     * @remarks\n     * This is used to determine when to perform Idle Texture Cleanups.\n     *\n     * Set by stage via `updateFrameTime` method.\n     */\n    frameTime = 0;\n    constructor(stage, settings) {\n        this.stage = stage;\n        const { criticalThreshold } = settings;\n        this.criticalThreshold = Math.round(criticalThreshold);\n        const targetFraction = Math.max(0, Math.min(1, settings.targetThresholdLevel));\n        this.targetThreshold = Math.round(criticalThreshold * targetFraction);\n        this.cleanupInterval = settings.cleanupInterval;\n        this.debugLogging = settings.debugLogging;\n        this.baselineMemoryAllocation = Math.round(settings.baselineMemoryAllocation);\n        this.memUsed = Math.round(settings.baselineMemoryAllocation);\n        if (settings.debugLogging) {\n            let lastMemUse = 0;\n            setInterval(() => {\n                if (lastMemUse !== this.memUsed) {\n                    lastMemUse = this.memUsed;\n                    console.log(`[TextureMemoryManager] Memory used: ${bytesToMb(this.memUsed)} mb / ${bytesToMb(this.criticalThreshold)} mb (${((this.memUsed / this.criticalThreshold) *\n                        100).toFixed(1)}%)`);\n                }\n            }, 1000);\n        }\n        // If the threshold is 0, we disable the memory manager by replacing the\n        // setTextureMemUse method with a no-op function.\n        if (criticalThreshold === 0) {\n            this.setTextureMemUse = () => { };\n        }\n    }\n    /**\n     * Add a texture to the orphaned textures list\n     *\n     * @param texture - The texture to add to the orphaned textures list\n     */\n    addToOrphanedTextures(texture) {\n        // if the texture is already in the orphaned textures list add it at the end\n        if (this.orphanedTextures.includes(texture)) {\n            this.removeFromOrphanedTextures(texture);\n        }\n        // If the texture can be cleaned up, add it to the orphaned textures list\n        if (texture.preventCleanup === false) {\n            this.orphanedTextures.push(texture);\n        }\n    }\n    /**\n     * Remove a texture from the orphaned textures list\n     *\n     * @param texture - The texture to remove from the orphaned textures list\n     */\n    removeFromOrphanedTextures(texture) {\n        const index = this.orphanedTextures.indexOf(texture);\n        if (index !== -1) {\n            this.orphanedTextures.splice(index, 1);\n        }\n    }\n    /**\n     * Set the memory usage of a texture\n     *\n     * @param texture - The texture to set memory usage for\n     * @param byteSize - The size of the texture in bytes\n     */\n    setTextureMemUse(texture, byteSize) {\n        if (this.loadedTextures.has(texture)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.memUsed -= this.loadedTextures.get(texture);\n        }\n        if (byteSize === 0) {\n            this.loadedTextures.delete(texture);\n            return;\n        }\n        else {\n            this.memUsed += byteSize;\n            this.loadedTextures.set(texture, byteSize);\n        }\n        if (this.memUsed > this.criticalThreshold) {\n            this.criticalCleanupRequested = true;\n        }\n    }\n    checkCleanup() {\n        return (this.criticalCleanupRequested ||\n            (this.memUsed > this.targetThreshold &&\n                this.frameTime - this.lastCleanupTime >= this.cleanupInterval));\n    }\n    cleanup() {\n        const critical = this.criticalCleanupRequested;\n        this.lastCleanupTime = this.frameTime;\n        this.criticalCleanupRequested = false;\n        if (critical === true) {\n            this.stage.queueFrameEvent('criticalCleanup', {\n                memUsed: this.memUsed,\n                criticalThreshold: this.criticalThreshold,\n            });\n        }\n        if (this.debugLogging) {\n            console.log(`[TextureMemoryManager] Cleaning up textures. Critical: ${critical}`);\n        }\n        // Free non-renderable textures until we reach the target threshold\n        const memTarget = this.targetThreshold;\n        const txManager = this.stage.txManager;\n        const timestamp = getTimeStamp();\n        while (this.memUsed >= memTarget &&\n            this.orphanedTextures.length > 0 &&\n            // if it a non-critical cleanup, we will only cleanup for 10ms\n            (critical || getTimeStamp() - timestamp < 10)) {\n            const texture = this.orphanedTextures.shift();\n            if (texture.renderable === true) {\n                // If the texture is renderable, we can't free it up\n                continue;\n            }\n            texture.free();\n            txManager.removeTextureFromCache(texture);\n        }\n        if (this.memUsed >= this.criticalThreshold) {\n            this.stage.queueFrameEvent('criticalCleanupFailed', {\n                memUsed: this.memUsed,\n                criticalThreshold: this.criticalThreshold,\n            });\n            if (this.debugLogging === true || isProductionEnvironment() === false) {\n                console.warn(`[TextureMemoryManager] Memory usage above critical threshold after cleanup: ${this.memUsed}`);\n            }\n        }\n    }\n    /**\n     * Get the current texture memory usage information\n     *\n     * @remarks\n     * This method is for debugging purposes and returns information about the\n     * current memory usage of the textures in the Renderer.\n     */\n    getMemoryInfo() {\n        let renderableTexturesLoaded = 0;\n        const renderableMemUsed = [...this.loadedTextures.keys()].reduce((acc, texture) => {\n            renderableTexturesLoaded += texture.renderable ? 1 : 0;\n            return (acc + (texture.renderable ? this.loadedTextures.get(texture) : 0));\n        }, 0);\n        return {\n            criticalThreshold: this.criticalThreshold,\n            targetThreshold: this.targetThreshold,\n            renderableMemUsed,\n            memUsed: this.memUsed,\n            renderableTexturesLoaded,\n            loadedTextures: this.loadedTextures.size,\n            baselineMemoryAllocation: this.baselineMemoryAllocation,\n        };\n    }\n}\n//# sourceMappingURL=TextureMemoryManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    textureSource;\n    memManager;\n    state = 'freed';\n    constructor(memManager, textureSource) {\n        this.memManager = memManager;\n        this.textureSource = textureSource;\n    }\n    setTextureMemUse(byteSize) {\n        this.memManager.setTextureMemUse(this.textureSource, byteSize);\n    }\n    get renderable() {\n        return this.textureSource.renderable;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    options;\n    mode;\n    stage;\n    //// Core Managers\n    txManager;\n    txMemManager;\n    shManager;\n    rttNodes = [];\n    constructor(options) {\n        this.options = options;\n        this.stage = options.stage;\n        this.txManager = options.txManager;\n        this.txMemManager = options.txMemManager;\n        this.shManager = options.shManager;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreNode, UpdateType } from './CoreNode.js';\nimport { assertTruthy } from '../utils.js';\nimport { Matrix3d } from './lib/Matrix3d.js';\n/**\n * An CoreNode in the Renderer scene graph that renders text.\n *\n * @remarks\n * A Text Node is the second graphical building block of the Renderer scene\n * graph. It renders text using a specific text renderer that is automatically\n * chosen based on the font requested and what type of fonts are installed\n * into an app.\n *\n * The text renderer can be overridden by setting the `textRendererOverride`\n *\n * The `texture` and `shader` properties are managed by loaded text renderer and\n * should not be set directly.\n *\n * For non-text rendering, see {@link CoreNode}.\n */\nexport class CoreTextNode extends CoreNode {\n    textRenderer;\n    trState;\n    _textRendererOverride = null;\n    constructor(stage, props, textRenderer) {\n        super(stage, props);\n        this._textRendererOverride = props.textRendererOverride;\n        this.textRenderer = textRenderer;\n        const textRendererState = this.createState({\n            x: this.absX,\n            y: this.absY,\n            width: props.width,\n            height: props.height,\n            textAlign: props.textAlign,\n            color: props.color,\n            zIndex: props.zIndex,\n            contain: props.contain,\n            scrollable: props.scrollable,\n            scrollY: props.scrollY,\n            offsetY: props.offsetY,\n            letterSpacing: props.letterSpacing,\n            debug: props.debug,\n            fontFamily: props.fontFamily,\n            fontSize: props.fontSize,\n            fontStretch: props.fontStretch,\n            fontStyle: props.fontStyle,\n            fontWeight: props.fontWeight,\n            text: props.text,\n            lineHeight: props.lineHeight,\n            maxLines: props.maxLines,\n            textBaseline: props.textBaseline,\n            verticalAlign: props.verticalAlign,\n            overflowSuffix: props.overflowSuffix,\n        });\n        this.trState = textRendererState;\n    }\n    onTextLoaded = () => {\n        const { contain } = this;\n        const setWidth = this.trState.props.width;\n        const setHeight = this.trState.props.height;\n        const calcWidth = this.trState.textW || 0;\n        const calcHeight = this.trState.textH || 0;\n        if (contain === 'both') {\n            this.props.width = setWidth;\n            this.props.height = setHeight;\n        }\n        else if (contain === 'width') {\n            this.props.width = setWidth;\n            this.props.height = calcHeight;\n        }\n        else if (contain === 'none') {\n            this.props.width = calcWidth;\n            this.props.height = calcHeight;\n        }\n        this.updateLocalTransform();\n        // Incase the RAF loop has been stopped already before text was loaded,\n        // we request a render so it can be drawn.\n        this.stage.requestRender();\n        this.emit('loaded', {\n            type: 'text',\n            dimensions: {\n                width: this.trState.textW || 0,\n                height: this.trState.textH || 0,\n            },\n        });\n    };\n    onTextFailed = (target, error) => {\n        this.emit('failed', {\n            type: 'text',\n            error,\n        });\n    };\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        this.props.width = value;\n        this.textRenderer.set.width(this.trState, value);\n        // If not containing, we must update the local transform to account for the\n        // new width\n        if (this.contain === 'none') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        this.props.height = value;\n        this.textRenderer.set.height(this.trState, value);\n        // If not containing in the horizontal direction, we must update the local\n        // transform to account for the new height\n        if (this.contain !== 'both') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get color() {\n        return this.trState.props.color;\n    }\n    set color(value) {\n        this.textRenderer.set.color(this.trState, value);\n    }\n    get text() {\n        return this.trState.props.text;\n    }\n    set text(value) {\n        this.textRenderer.set.text(this.trState, value);\n    }\n    get textRendererOverride() {\n        return this._textRendererOverride;\n    }\n    set textRendererOverride(value) {\n        this._textRendererOverride = value;\n        this.textRenderer.destroyState(this.trState);\n        const textRenderer = this.stage.resolveTextRenderer(this.trState.props, this._textRendererOverride);\n        if (!textRenderer) {\n            console.warn('Text Renderer not found for font', this.trState.props.fontFamily);\n            return;\n        }\n        this.textRenderer = textRenderer;\n        this.trState = this.createState(this.trState.props);\n    }\n    get fontSize() {\n        return this.trState.props.fontSize;\n    }\n    set fontSize(value) {\n        this.textRenderer.set.fontSize(this.trState, value);\n    }\n    get fontFamily() {\n        return this.trState.props.fontFamily;\n    }\n    set fontFamily(value) {\n        this.textRenderer.set.fontFamily(this.trState, value);\n    }\n    get fontStretch() {\n        return this.trState.props.fontStretch;\n    }\n    set fontStretch(value) {\n        this.textRenderer.set.fontStretch(this.trState, value);\n    }\n    get fontStyle() {\n        return this.trState.props.fontStyle;\n    }\n    set fontStyle(value) {\n        this.textRenderer.set.fontStyle(this.trState, value);\n    }\n    get fontWeight() {\n        return this.trState.props.fontWeight;\n    }\n    set fontWeight(value) {\n        this.textRenderer.set.fontWeight(this.trState, value);\n    }\n    get textAlign() {\n        return this.trState.props.textAlign;\n    }\n    set textAlign(value) {\n        this.textRenderer.set.textAlign(this.trState, value);\n    }\n    get contain() {\n        return this.trState.props.contain;\n    }\n    set contain(value) {\n        this.textRenderer.set.contain(this.trState, value);\n    }\n    get scrollable() {\n        return this.trState.props.scrollable;\n    }\n    set scrollable(value) {\n        this.textRenderer.set.scrollable(this.trState, value);\n    }\n    get scrollY() {\n        return this.trState.props.scrollY;\n    }\n    set scrollY(value) {\n        this.textRenderer.set.scrollY(this.trState, value);\n    }\n    get offsetY() {\n        return this.trState.props.offsetY;\n    }\n    set offsetY(value) {\n        this.textRenderer.set.offsetY(this.trState, value);\n    }\n    get letterSpacing() {\n        return this.trState.props.letterSpacing;\n    }\n    set letterSpacing(value) {\n        this.textRenderer.set.letterSpacing(this.trState, value);\n    }\n    get lineHeight() {\n        return this.trState.props.lineHeight;\n    }\n    set lineHeight(value) {\n        this.textRenderer.set.lineHeight(this.trState, value);\n    }\n    get maxLines() {\n        return this.trState.props.maxLines;\n    }\n    set maxLines(value) {\n        this.textRenderer.set.maxLines(this.trState, value);\n    }\n    get textBaseline() {\n        return this.trState.props.textBaseline;\n    }\n    set textBaseline(value) {\n        this.textRenderer.set.textBaseline(this.trState, value);\n    }\n    get verticalAlign() {\n        return this.trState.props.verticalAlign;\n    }\n    set verticalAlign(value) {\n        this.textRenderer.set.verticalAlign(this.trState, value);\n    }\n    get overflowSuffix() {\n        return this.trState.props.overflowSuffix;\n    }\n    set overflowSuffix(value) {\n        this.textRenderer.set.overflowSuffix(this.trState, value);\n    }\n    get debug() {\n        return this.trState.props.debug;\n    }\n    set debug(value) {\n        this.textRenderer.set.debug(this.trState, value);\n    }\n    update(delta, parentClippingRect) {\n        super.update(delta, parentClippingRect);\n        assertTruthy(this.globalTransform);\n        // globalTransform is updated in super.update(delta)\n        this.textRenderer.set.x(this.trState, this.globalTransform.tx);\n        this.textRenderer.set.y(this.trState, this.globalTransform.ty);\n    }\n    checkBasicRenderability() {\n        if (this.worldAlpha === 0 || this.isOutOfBounds() === true) {\n            return false;\n        }\n        if (this.trState && this.trState.props.text !== '') {\n            return true;\n        }\n        return false;\n    }\n    setRenderable(isRenderable) {\n        super.setRenderable(isRenderable);\n        this.textRenderer.setIsRenderable(this.trState, isRenderable);\n    }\n    renderQuads(renderer) {\n        assertTruthy(this.globalTransform);\n        // If the text renderer does not support rendering quads, fallback to the\n        // default renderQuads method\n        if (!this.textRenderer.renderQuads) {\n            super.renderQuads(renderer);\n            return;\n        }\n        // If the text renderer does support rendering quads, use it...\n        // Prevent quad rendering if parent has a render texture\n        // and this node is not the render texture\n        if (this.parentHasRenderTexture) {\n            if (!renderer.renderToTextureActive) {\n                return;\n            }\n            // Prevent quad rendering if parent render texture is not the active render texture\n            if (this.parentRenderTexture !== renderer.activeRttNode) {\n                return;\n            }\n        }\n        if (this.parentHasRenderTexture && this.props.parent?.rtt) {\n            this.globalTransform = Matrix3d.identity();\n            if (this.localTransform) {\n                this.globalTransform.multiply(this.localTransform);\n            }\n        }\n        assertTruthy(this.globalTransform);\n        this.textRenderer.renderQuads(this.trState, this.globalTransform, this.clippingRect, this.worldAlpha, this.parentHasRenderTexture, this.framebufferDimensions);\n    }\n    /**\n     * Destroy the node and cleanup all resources\n     */\n    destroy() {\n        super.destroy();\n        this.textRenderer.destroyState(this.trState);\n    }\n    /**\n     * Resolve a text renderer and a new state based on the current text renderer props provided\n     * @param props\n     * @returns\n     */\n    createState(props) {\n        const textRendererState = this.textRenderer.createState(props, this);\n        textRendererState.emitter.on('loaded', this.onTextLoaded);\n        textRendererState.emitter.on('failed', this.onTextFailed);\n        this.textRenderer.scheduleUpdateState(textRendererState);\n        return textRendererState;\n    }\n}\n//# sourceMappingURL=CoreTextNode.js.map","export function santizeCustomDataMap(d) {\n    const validTypes = {\n        boolean: true,\n        string: true,\n        number: true,\n        undefined: true,\n    };\n    const keys = Object.keys(d);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!key) {\n            continue;\n        }\n        const value = d[key];\n        const valueType = typeof value;\n        // Typescript doesn't understand the above const valueType ¯\\_(ツ)_/¯\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore-next-line\n        if (valueType === 'string' && value.length > 2048) {\n            console.warn(`Custom Data value for ${key} is too long, it will be truncated to 2048 characters`);\n            // same here, see above comment, this can only be a string at this point\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore-next-line\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n            d[key] = value.substring(0, 2048);\n        }\n        if (!validTypes[valueType]) {\n            console.warn(`Custom Data value for ${key} is not a boolean, string, or number, it will be ignored`);\n            delete d[key];\n        }\n    }\n    return d;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { startLoop, getTimeStamp } from './platform.js';\nimport { assertTruthy, setPremultiplyMode } from '../utils.js';\nimport { AnimationManager } from './animations/AnimationManager.js';\nimport { CoreNode, CoreNodeRenderState, } from './CoreNode.js';\nimport { CoreTextureManager } from './CoreTextureManager.js';\nimport { TrFontManager } from './text-rendering/TrFontManager.js';\nimport { CoreShaderManager } from './CoreShaderManager.js';\nimport { TextRenderer, } from './text-rendering/renderers/TextRenderer.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { ContextSpy } from './lib/ContextSpy.js';\nimport { TextureMemoryManager, } from './TextureMemoryManager.js';\nimport { CoreRenderer } from './renderers/CoreRenderer.js';\nimport { CoreTextNode } from './CoreTextNode.js';\nimport { santizeCustomDataMap } from '../main-api/utils.js';\nimport { createBound, createPreloadBounds } from './lib/utils.js';\nimport { ColorTexture } from './textures/ColorTexture.js';\nconst bufferMemory = 2e6;\nconst autoStart = true;\nexport class Stage {\n    options;\n    /// Module Instances\n    animationManager;\n    txManager;\n    txMemManager;\n    fontManager;\n    textRenderers;\n    shManager;\n    renderer;\n    root;\n    boundsMargin;\n    defShaderCtr;\n    strictBound;\n    preloadBound;\n    strictBounds;\n    defaultTexture = null;\n    /**\n     * Renderer Event Bus for the Stage to emit events onto\n     *\n     * @remarks\n     * In reality this is just the RendererMain instance, which is an EventEmitter.\n     * this allows us to directly emit events from the Stage to RendererMain\n     * without having to set up forwarding handlers.\n     */\n    eventBus;\n    /// State\n    deltaTime = 0;\n    lastFrameTime = 0;\n    currentFrameTime = 0;\n    fpsNumFrames = 0;\n    fpsElapsedTime = 0;\n    numQuadsRendered = 0;\n    renderRequested = false;\n    frameEventQueue = [];\n    fontResolveMap = {};\n    /// Debug data\n    contextSpy = null;\n    /**\n     * Stage constructor\n     */\n    constructor(options) {\n        this.options = options;\n        const { canvas, clearColor, appWidth, appHeight, boundsMargin, enableContextSpy, forceWebGL2, numImageWorkers, textureMemory, renderEngine, fontEngines, } = options;\n        this.eventBus = options.eventBus;\n        this.txManager = new CoreTextureManager(this, numImageWorkers);\n        // Wait for the Texture Manager to initialize\n        // once it does, request a render\n        this.txManager.on('initialized', () => {\n            this.requestRender();\n        });\n        this.txMemManager = new TextureMemoryManager(this, textureMemory);\n        this.shManager = new CoreShaderManager();\n        this.animationManager = new AnimationManager();\n        this.contextSpy = enableContextSpy ? new ContextSpy() : null;\n        this.strictBounds = options.strictBounds;\n        let bm = [0, 0, 0, 0];\n        if (boundsMargin) {\n            bm = Array.isArray(boundsMargin)\n                ? boundsMargin\n                : [boundsMargin, boundsMargin, boundsMargin, boundsMargin];\n        }\n        this.boundsMargin = bm;\n        // precalculate our viewport bounds\n        this.strictBound = createBound(0, 0, appWidth, appHeight);\n        this.preloadBound = createPreloadBounds(this.strictBound, bm);\n        const rendererOptions = {\n            stage: this,\n            canvas,\n            pixelRatio: options.devicePhysicalPixelRatio * options.deviceLogicalPixelRatio,\n            clearColor: clearColor ?? 0xff000000,\n            bufferMemory,\n            txManager: this.txManager,\n            txMemManager: this.txMemManager,\n            shManager: this.shManager,\n            contextSpy: this.contextSpy,\n            forceWebGL2,\n        };\n        this.renderer = new renderEngine(rendererOptions);\n        const renderMode = this.renderer.mode || 'webgl';\n        this.createDefaultTexture();\n        this.defShaderCtr = this.renderer.getDefShaderCtr();\n        setPremultiplyMode(renderMode);\n        // Must do this after renderer is created\n        this.txManager.renderer = this.renderer;\n        // Create text renderers\n        this.textRenderers = {};\n        fontEngines.forEach((fontEngineConstructor) => {\n            const fontEngineInstance = new fontEngineConstructor(this);\n            const className = fontEngineInstance.type;\n            if (className === 'sdf' && renderMode === 'canvas') {\n                console.warn('SdfTextRenderer is not compatible with Canvas renderer. Skipping...');\n                return;\n            }\n            if (fontEngineInstance instanceof TextRenderer) {\n                if (className === 'canvas') {\n                    this.textRenderers['canvas'] =\n                        fontEngineInstance;\n                }\n                else if (className === 'sdf') {\n                    this.textRenderers['sdf'] = fontEngineInstance;\n                }\n            }\n        });\n        if (Object.keys(this.textRenderers).length === 0) {\n            console.warn('No text renderers available. Your text will not render.');\n        }\n        this.fontManager = new TrFontManager(this.textRenderers);\n        // create root node\n        const rootNode = new CoreNode(this, {\n            x: 0,\n            y: 0,\n            width: appWidth,\n            height: appHeight,\n            alpha: 1,\n            autosize: false,\n            clipping: false,\n            color: 0x00000000,\n            colorTop: 0x00000000,\n            colorBottom: 0x00000000,\n            colorLeft: 0x00000000,\n            colorRight: 0x00000000,\n            colorTl: 0x00000000,\n            colorTr: 0x00000000,\n            colorBl: 0x00000000,\n            colorBr: 0x00000000,\n            zIndex: 0,\n            zIndexLocked: 0,\n            scaleX: 1,\n            scaleY: 1,\n            mountX: 0,\n            mountY: 0,\n            mount: 0,\n            pivot: 0.5,\n            pivotX: 0.5,\n            pivotY: 0.5,\n            rotation: 0,\n            parent: null,\n            texture: null,\n            textureOptions: {},\n            shader: this.defShaderCtr,\n            rtt: false,\n            src: null,\n            scale: 1,\n            preventCleanup: false,\n            strictBounds: this.strictBounds,\n        });\n        this.root = rootNode;\n        // execute platform start loop\n        if (autoStart) {\n            startLoop(this);\n        }\n    }\n    setClearColor(color) {\n        this.renderer.updateClearColor(color);\n        this.renderRequested = true;\n    }\n    updateFrameTime() {\n        const newFrameTime = getTimeStamp();\n        this.lastFrameTime = this.currentFrameTime;\n        this.currentFrameTime = newFrameTime;\n        this.deltaTime = !this.lastFrameTime\n            ? 100 / 6\n            : newFrameTime - this.lastFrameTime;\n        this.txManager.frameTime = newFrameTime;\n        this.txMemManager.frameTime = newFrameTime;\n        // This event is emitted at the beginning of the frame (before any updates\n        // or rendering), so no need to to use `stage.queueFrameEvent` here.\n        this.eventBus.emit('frameTick', {\n            time: this.currentFrameTime,\n            delta: this.deltaTime,\n        });\n    }\n    /**\n     * Create default PixelTexture\n     */\n    createDefaultTexture() {\n        this.defaultTexture = this.txManager.createTexture('ColorTexture', {\n            color: 0xffffffff,\n        });\n        assertTruthy(this.defaultTexture instanceof ColorTexture);\n        this.txManager.loadTexture(this.defaultTexture, true);\n        // Mark the default texture as ALWAYS renderable\n        // This prevents it from ever being cleaned up.\n        // Fixes https://github.com/lightning-js/renderer/issues/262\n        this.defaultTexture.setRenderableOwner(this, true);\n        // When the default texture is loaded, request a render in case the\n        // RAF is paused. Fixes: https://github.com/lightning-js/renderer/issues/123\n        this.defaultTexture.once('loaded', () => {\n            this.requestRender();\n        });\n    }\n    /**\n     * Update animations\n     */\n    updateAnimations() {\n        const { animationManager } = this;\n        if (!this.root) {\n            return;\n        }\n        // step animation\n        animationManager.update(this.deltaTime);\n    }\n    /**\n     * Check if the scene has updates\n     */\n    hasSceneUpdates() {\n        return (!!this.root.updateType ||\n            this.renderRequested ||\n            this.txManager.hasUpdates());\n    }\n    /**\n     * Start a new frame draw\n     */\n    drawFrame() {\n        const { renderer, renderRequested } = this;\n        assertTruthy(renderer);\n        // Update tree if needed\n        if (this.root.updateType !== 0) {\n            this.root.update(this.deltaTime, this.root.clippingRect);\n        }\n        // Process some textures\n        this.txManager.processSome(this.options.textureProcessingTimeLimit);\n        // Reset render operations and clear the canvas\n        renderer.reset();\n        // Check if we need to cleanup textures\n        if (this.txMemManager.criticalCleanupRequested) {\n            this.txMemManager.cleanup();\n        }\n        // If we have RTT nodes draw them first\n        // So we can use them as textures in the main scene\n        if (renderer.rttNodes.length > 0) {\n            renderer.renderRTTNodes();\n        }\n        // Fill quads buffer\n        this.addQuads(this.root);\n        // Perform render pass\n        renderer?.render();\n        this.calculateFps();\n        this.calculateQuads();\n        // Reset renderRequested flag if it was set\n        if (renderRequested) {\n            this.renderRequested = false;\n        }\n    }\n    /**\n     * Queue an event to be emitted after the current/next frame is rendered\n     *\n     * @remarks\n     * When we are operating in the context of the render loop, we may want to\n     * emit events that are related to the current frame. However, we generally do\n     * NOT want to emit events directly in the middle of the render loop, since\n     * this could enable event handlers to modify the scene graph and cause\n     * unexpected behavior. Instead, we queue up events to be emitted and then\n     * flush the queue after the frame has been rendered.\n     *\n     * @param name\n     * @param data\n     */\n    queueFrameEvent(name, data) {\n        this.frameEventQueue.push([name, data]);\n    }\n    /**\n     * Emit all queued frame events\n     *\n     * @remarks\n     * This method should be called after the frame has been rendered to emit\n     * all events that were queued during the frame.\n     *\n     * See {@link queueFrameEvent} for more information.\n     */\n    flushFrameEvents() {\n        for (const [name, data] of this.frameEventQueue) {\n            this.eventBus.emit(name, data);\n        }\n        this.frameEventQueue = [];\n    }\n    calculateFps() {\n        // If there's an FPS update interval, emit the FPS update event\n        // when the specified interval has elapsed.\n        const { fpsUpdateInterval } = this.options;\n        if (fpsUpdateInterval) {\n            this.fpsNumFrames++;\n            this.fpsElapsedTime += this.deltaTime;\n            if (this.fpsElapsedTime >= fpsUpdateInterval) {\n                const fps = Math.round((this.fpsNumFrames * 1000) / this.fpsElapsedTime);\n                this.fpsNumFrames = 0;\n                this.fpsElapsedTime = 0;\n                this.queueFrameEvent('fpsUpdate', {\n                    fps,\n                    contextSpyData: this.contextSpy?.getData() ?? null,\n                });\n                this.contextSpy?.reset();\n            }\n        }\n    }\n    calculateQuads() {\n        const quads = this.renderer.getQuadCount();\n        if (quads && quads !== this.numQuadsRendered) {\n            this.numQuadsRendered = quads;\n            this.queueFrameEvent('quadsUpdate', {\n                quads,\n            });\n        }\n    }\n    addQuads(node) {\n        assertTruthy(this.renderer);\n        // If the node is renderable and has a loaded texture, render it\n        if (node.isRenderable === true) {\n            node.renderQuads(this.renderer);\n        }\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            if (child === undefined) {\n                continue;\n            }\n            if (child.worldAlpha === 0 ||\n                (child.strictBounds === true &&\n                    child.renderState === CoreNodeRenderState.OutOfBounds)) {\n                continue;\n            }\n            this.addQuads(child);\n        }\n    }\n    /**\n     * Request a render pass without forcing an update\n     */\n    requestRender() {\n        this.renderRequested = true;\n    }\n    /**\n     * Given a font name, and possible renderer override, return the best compatible text renderer.\n     *\n     * @remarks\n     * Will try to return a canvas renderer if no other suitable renderer can be resolved.\n     *\n     * @param fontFamily\n     * @param textRendererOverride\n     * @returns\n     */\n    resolveTextRenderer(trProps, textRendererOverride = null) {\n        const fontCacheString = `${trProps.fontFamily}${trProps.fontStyle}${trProps.fontWeight}${trProps.fontStretch}${textRendererOverride ? textRendererOverride : ''}`;\n        // check our resolve cache first\n        if (this.fontResolveMap[fontCacheString] !== undefined) {\n            return this.fontResolveMap[fontCacheString];\n        }\n        // Resolve the text renderer\n        let rendererId = textRendererOverride;\n        let overrideFallback = false;\n        // Check if the override is valid (if one is provided)\n        if (rendererId) {\n            const possibleRenderer = this.textRenderers[rendererId];\n            if (!possibleRenderer) {\n                console.warn(`Text renderer override '${rendererId}' not found.`);\n                rendererId = null;\n                overrideFallback = true;\n            }\n            else if (!possibleRenderer.canRenderFont(trProps)) {\n                console.warn(`Cannot use override text renderer '${rendererId}' for font`, trProps);\n                rendererId = null;\n                overrideFallback = true;\n            }\n        }\n        if (!rendererId) {\n            // Iterate through the text renderers and find the first one that can render the font\n            for (const [trId, tr] of Object.entries(this.textRenderers)) {\n                if (tr.canRenderFont(trProps)) {\n                    rendererId = trId;\n                    break;\n                }\n            }\n            if (!rendererId && this.textRenderers.canvas !== undefined) {\n                // If no renderer can be found, use the canvas renderer\n                rendererId = 'canvas';\n            }\n        }\n        if (overrideFallback) {\n            console.warn(`Falling back to text renderer ${String(rendererId)}`);\n        }\n        if (!rendererId) {\n            // silently fail if no renderer can be found, the error is already created\n            // at the constructor level\n            return null;\n        }\n        // By now we are guaranteed to have a valid rendererId (at least Canvas);\n        const resolvedTextRenderer = this.textRenderers[rendererId];\n        assertTruthy(resolvedTextRenderer, 'resolvedTextRenderer undefined');\n        // cache the resolved renderer for future use with these trProps\n        this.fontResolveMap[fontCacheString] = resolvedTextRenderer;\n        // Need to explicitly cast to TextRenderer because TS doesn't like\n        // the covariant state argument in the setter method map\n        return resolvedTextRenderer;\n    }\n    /**\n     * Create a shader controller instance\n     *\n     * @param type\n     * @param props\n     * @returns\n     */\n    createShaderCtr(type, props) {\n        return this.shManager.loadShader(type, props);\n    }\n    createNode(props) {\n        const resolvedProps = this.resolveNodeDefaults(props);\n        return new CoreNode(this, resolvedProps);\n    }\n    createTextNode(props) {\n        const fontSize = props.fontSize ?? 16;\n        const resolvedProps = {\n            ...this.resolveNodeDefaults(props),\n            text: props.text ?? '',\n            textRendererOverride: props.textRendererOverride ?? null,\n            fontSize,\n            fontFamily: props.fontFamily ?? 'sans-serif',\n            fontStyle: props.fontStyle ?? 'normal',\n            fontWeight: props.fontWeight ?? 'normal',\n            fontStretch: props.fontStretch ?? 'normal',\n            textAlign: props.textAlign ?? 'left',\n            contain: props.contain ?? 'none',\n            scrollable: props.scrollable ?? false,\n            scrollY: props.scrollY ?? 0,\n            offsetY: props.offsetY ?? 0,\n            letterSpacing: props.letterSpacing ?? 0,\n            lineHeight: props.lineHeight, // `undefined` is a valid value\n            maxLines: props.maxLines ?? 0,\n            textBaseline: props.textBaseline ?? 'alphabetic',\n            verticalAlign: props.verticalAlign ?? 'middle',\n            overflowSuffix: props.overflowSuffix ?? '...',\n            debug: props.debug ?? {},\n            shaderProps: null,\n        };\n        const resolvedTextRenderer = this.resolveTextRenderer(resolvedProps, props.textRendererOverride);\n        if (!resolvedTextRenderer) {\n            throw new Error(`No compatible text renderer found for ${resolvedProps.fontFamily}`);\n        }\n        return new CoreTextNode(this, resolvedProps, resolvedTextRenderer);\n    }\n    /**\n     * Resolves the default property values for a Node\n     *\n     * @remarks\n     * This method is used internally by the RendererMain to resolve the default\n     * property values for a Node. It is exposed publicly so that it can be used\n     * by Core Driver implementations.\n     *\n     * @param props\n     * @returns\n     */\n    resolveNodeDefaults(props) {\n        const color = props.color ?? 0xffffffff;\n        const colorTl = props.colorTl ?? props.colorTop ?? props.colorLeft ?? color;\n        const colorTr = props.colorTr ?? props.colorTop ?? props.colorRight ?? color;\n        const colorBl = props.colorBl ?? props.colorBottom ?? props.colorLeft ?? color;\n        const colorBr = props.colorBr ?? props.colorBottom ?? props.colorRight ?? color;\n        let data = {};\n        if (this.options.inspector === true) {\n            data = santizeCustomDataMap(props.data ?? {});\n        }\n        return {\n            x: props.x ?? 0,\n            y: props.y ?? 0,\n            width: props.width ?? 0,\n            height: props.height ?? 0,\n            alpha: props.alpha ?? 1,\n            autosize: props.autosize ?? false,\n            clipping: props.clipping ?? false,\n            color,\n            colorTop: props.colorTop ?? color,\n            colorBottom: props.colorBottom ?? color,\n            colorLeft: props.colorLeft ?? color,\n            colorRight: props.colorRight ?? color,\n            colorBl,\n            colorBr,\n            colorTl,\n            colorTr,\n            zIndex: props.zIndex ?? 0,\n            zIndexLocked: props.zIndexLocked ?? 0,\n            parent: props.parent ?? null,\n            texture: props.texture ?? null,\n            textureOptions: props.textureOptions ?? {},\n            shader: props.shader ?? this.defShaderCtr,\n            // Since setting the `src` will trigger a texture load, we need to set it after\n            // we set the texture. Otherwise, problems happen.\n            src: props.src ?? null,\n            srcHeight: props.srcHeight,\n            srcWidth: props.srcWidth,\n            srcX: props.srcX,\n            srcY: props.srcY,\n            scale: props.scale ?? null,\n            scaleX: props.scaleX ?? props.scale ?? 1,\n            scaleY: props.scaleY ?? props.scale ?? 1,\n            mount: props.mount ?? 0,\n            mountX: props.mountX ?? props.mount ?? 0,\n            mountY: props.mountY ?? props.mount ?? 0,\n            pivot: props.pivot ?? 0.5,\n            pivotX: props.pivotX ?? props.pivot ?? 0.5,\n            pivotY: props.pivotY ?? props.pivot ?? 0.5,\n            rotation: props.rotation ?? 0,\n            rtt: props.rtt ?? false,\n            data: data,\n            preventCleanup: props.preventCleanup ?? false,\n            imageType: props.imageType,\n            strictBounds: props.strictBounds ?? this.strictBounds,\n        };\n    }\n    /**\n     * Cleanup Orphaned Textures\n     *\n     * @remarks\n     * This method is used to cleanup orphaned textures that are no longer in use.\n     */\n    cleanup() {\n        this.txMemManager.cleanup();\n    }\n}\n//# sourceMappingURL=Stage.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { assertTruthy, isProductionEnvironment } from '../utils.js';\nimport { Stage } from '../core/Stage.js';\nimport { CoreNode } from '../core/CoreNode.js';\nimport {} from '../core/CoreTextNode.js';\n/**\n * The Renderer Main API\n *\n * @remarks\n * This is the primary class used to configure and operate the Renderer.\n *\n * It is used to create and destroy Nodes, as well as Texture and Shader\n * references.\n *\n * Example:\n * ```ts\n * import { RendererMain, MainCoreDriver } from '@lightningjs/renderer';\n *\n * // Initialize the Renderer\n * const renderer = new RendererMain(\n *   {\n *     appWidth: 1920,\n *     appHeight: 1080\n *   },\n *   'app',\n *   new MainCoreDriver(),\n * );\n * ```\n *\n * ## Events\n * - `fpsUpdate`\n *   - Emitted every `fpsUpdateInterval` milliseconds with the current FPS\n * - `frameTick`\n *   - Emitted every frame tick\n * - `quadsUpdate`\n *  - Emitted when number of quads rendered is updated\n * - `idle`\n *   - Emitted when the renderer is idle (no changes to the scene\n *     graph/animations running)\n * - `criticalCleanup`\n *  - Emitted when the Texture Memory Manager Cleanup process is triggered\n *  - Payload: { memUsed: number, criticalThreshold: number }\n *    - `memUsed` - The amount of memory (in bytes) used by textures before the\n *       cleanup process\n *    - `criticalThreshold` - The critical threshold (in bytes)\n * - `criticalCleanupFailed`\n *   - Emitted when the Texture Memory Manager Cleanup process is unable to free\n *     up enough texture memory to reach below the critical threshold.\n *     This can happen when there is not enough non-renderable textures to\n *     free up.\n *   - Payload (object with keys):\n *     - `memUsed` - The amount of memory (in bytes) used by textures after\n *       the cleanup process\n *     - `criticalThreshold` - The critical threshold (in bytes)\n */\nexport class RendererMain extends EventEmitter {\n    root;\n    canvas;\n    settings;\n    stage;\n    inspector = null;\n    /**\n     * Constructs a new Renderer instance\n     *\n     * @param settings Renderer settings\n     * @param target Element ID or HTMLElement to insert the canvas into\n     * @param driver Core Driver to use\n     */\n    constructor(settings, target) {\n        super();\n        const resolvedTxSettings = {\n            criticalThreshold: settings.textureMemory?.criticalThreshold || 124e6,\n            targetThresholdLevel: settings.textureMemory?.targetThresholdLevel || 0.5,\n            cleanupInterval: settings.textureMemory?.cleanupInterval || 30000,\n            debugLogging: settings.textureMemory?.debugLogging || false,\n            baselineMemoryAllocation: settings.textureMemory?.baselineMemoryAllocation || 26e6,\n        };\n        const resolvedSettings = {\n            appWidth: settings.appWidth || 1920,\n            appHeight: settings.appHeight || 1080,\n            textureMemory: resolvedTxSettings,\n            boundsMargin: settings.boundsMargin || 0,\n            deviceLogicalPixelRatio: settings.deviceLogicalPixelRatio || 1,\n            devicePhysicalPixelRatio: settings.devicePhysicalPixelRatio || window.devicePixelRatio,\n            clearColor: settings.clearColor ?? 0x00000000,\n            fpsUpdateInterval: settings.fpsUpdateInterval || 0,\n            numImageWorkers: settings.numImageWorkers !== undefined ? settings.numImageWorkers : 2,\n            enableContextSpy: settings.enableContextSpy ?? false,\n            forceWebGL2: settings.forceWebGL2 ?? false,\n            inspector: settings.inspector ?? false,\n            renderEngine: settings.renderEngine,\n            quadBufferSize: settings.quadBufferSize ?? 4 * 1024 * 1024,\n            fontEngines: settings.fontEngines,\n            strictBounds: settings.strictBounds ?? true,\n            textureProcessingTimeLimit: settings.textureProcessingTimeLimit || 10,\n            canvas: settings.canvas || document.createElement('canvas'),\n        };\n        this.settings = resolvedSettings;\n        const { appWidth, appHeight, deviceLogicalPixelRatio, devicePhysicalPixelRatio, inspector, canvas, } = resolvedSettings;\n        const deviceLogicalWidth = appWidth * deviceLogicalPixelRatio;\n        const deviceLogicalHeight = appHeight * deviceLogicalPixelRatio;\n        this.canvas = canvas;\n        canvas.width = deviceLogicalWidth * devicePhysicalPixelRatio;\n        canvas.height = deviceLogicalHeight * devicePhysicalPixelRatio;\n        canvas.style.width = `${deviceLogicalWidth}px`;\n        canvas.style.height = `${deviceLogicalHeight}px`;\n        // Initialize the stage\n        this.stage = new Stage({\n            appWidth: this.settings.appWidth,\n            appHeight: this.settings.appHeight,\n            boundsMargin: this.settings.boundsMargin,\n            clearColor: this.settings.clearColor,\n            canvas: this.canvas,\n            deviceLogicalPixelRatio: this.settings.deviceLogicalPixelRatio,\n            devicePhysicalPixelRatio: this.settings.devicePhysicalPixelRatio,\n            enableContextSpy: this.settings.enableContextSpy,\n            forceWebGL2: this.settings.forceWebGL2,\n            fpsUpdateInterval: this.settings.fpsUpdateInterval,\n            numImageWorkers: this.settings.numImageWorkers,\n            renderEngine: this.settings.renderEngine,\n            textureMemory: resolvedTxSettings,\n            eventBus: this,\n            quadBufferSize: this.settings.quadBufferSize,\n            fontEngines: this.settings.fontEngines,\n            inspector: this.settings.inspector !== null,\n            strictBounds: this.settings.strictBounds,\n            textureProcessingTimeLimit: this.settings.textureProcessingTimeLimit,\n        });\n        // Extract the root node\n        this.root = this.stage.root;\n        // Get the target element and attach the canvas to it\n        let targetEl;\n        if (typeof target === 'string') {\n            targetEl = document.getElementById(target);\n        }\n        else {\n            targetEl = target;\n        }\n        if (!targetEl) {\n            throw new Error('Could not find target element');\n        }\n        targetEl.appendChild(canvas);\n        // Initialize inspector (if enabled)\n        if (inspector && !isProductionEnvironment()) {\n            this.inspector = new inspector(canvas, resolvedSettings);\n        }\n    }\n    /**\n     * Create a new scene graph node\n     *\n     * @remarks\n     * A node is the main graphical building block of the Renderer scene graph. It\n     * can be a container for other nodes, or it can be a leaf node that renders a\n     * solid color, gradient, image, or specific texture, using a specific shader.\n     *\n     * To create a text node, see {@link createTextNode}.\n     *\n     * See {@link CoreNode} for more details.\n     *\n     * @param props\n     * @returns\n     */\n    createNode(props) {\n        const node = this.stage.createNode(props);\n        if (this.inspector) {\n            return this.inspector.createNode(node);\n        }\n        // FIXME onDestroy event? node.once('beforeDestroy'\n        // FIXME onCreate event?\n        return node;\n    }\n    /**\n     * Create a new scene graph text node\n     *\n     * @remarks\n     * A text node is the second graphical building block of the Renderer scene\n     * graph. It renders text using a specific text renderer that is automatically\n     * chosen based on the font requested and what type of fonts are installed\n     * into an app.\n     *\n     * See {@link ITextNode} for more details.\n     *\n     * @param props\n     * @returns\n     */\n    createTextNode(props) {\n        const textNode = this.stage.createTextNode(props);\n        if (this.inspector) {\n            return this.inspector.createTextNode(textNode);\n        }\n        return textNode;\n    }\n    /**\n     * Destroy a node\n     *\n     * @remarks\n     * This method destroys a node\n     *\n     * @param node\n     * @returns\n     */\n    destroyNode(node) {\n        if (this.inspector) {\n            this.inspector.destroyNode(node.id);\n        }\n        return node.destroy();\n    }\n    /**\n     * Create a new texture reference\n     *\n     * @remarks\n     * This method creates a new reference to a texture. The texture is not\n     * loaded until it is used on a node.\n     *\n     * It can be assigned to a node's `texture` property, or it can be used\n     * when creating a SubTexture.\n     *\n     * @param textureType\n     * @param props\n     * @param options\n     * @returns\n     */\n    createTexture(textureType, props) {\n        return this.stage.txManager.createTexture(textureType, props);\n    }\n    /**\n     * Create a new shader controller for a shader type\n     *\n     * @remarks\n     * This method creates a new Shader Controller for a specific shader type.\n     *\n     * If the shader has not been loaded yet, it will be loaded. Otherwise, the\n     * existing shader will be reused.\n     *\n     * It can be assigned to a Node's `shader` property.\n     *\n     * @param shaderType\n     * @param props\n     * @returns\n     */\n    createShader(shaderType, props) {\n        return this.stage.shManager.loadShader(shaderType, props);\n    }\n    /**\n     * Create a new Dynamic Shader controller\n     *\n     * @remarks\n     * A Dynamic Shader is a shader that can be composed of an array of mulitple\n     * effects. Each effect can be animated or changed after creation (provided\n     * the effect is given a name).\n     *\n     * Example:\n     * ```ts\n     * renderer.createNode({\n     *   shader: renderer.createDynamicShader([\n     *     renderer.createEffect('radius', {\n     *       radius: 0\n     *     }, 'effect1'),\n     *     renderer.createEffect('border', {\n     *       color: 0xff00ffff,\n     *       width: 10,\n     *     }, 'effect2'),\n     *   ]),\n     * });\n     * ```\n     *\n     * @param effects\n     * @returns\n     */\n    createDynamicShader(effects) {\n        return this.stage.shManager.loadDynamicShader({\n            effects: effects,\n        });\n    }\n    /**\n     * Create an effect to be used in a Dynamic Shader\n     *\n     * @remark\n     * The {name} parameter is optional but required if you want to animate the effect\n     * or change the effect's properties after creation.\n     *\n     * See {@link createDynamicShader} for an example.\n     *\n     * @param type\n     * @param props\n     * @param name\n     * @returns\n     */\n    createEffect(type, props, name) {\n        return {\n            name,\n            type,\n            props,\n        };\n    }\n    /**\n     * Get a Node by its ID\n     *\n     * @param id\n     * @returns\n     */\n    getNodeById(id) {\n        const root = this.stage?.root;\n        if (!root) {\n            return null;\n        }\n        const findNode = (node) => {\n            if (node.id === id) {\n                return node;\n            }\n            for (const child of node.children) {\n                const found = findNode(child);\n                if (found) {\n                    return found;\n                }\n            }\n            return null;\n        };\n        return findNode(root);\n    }\n    toggleFreeze() {\n        throw new Error('Not implemented');\n    }\n    advanceFrame() {\n        throw new Error('Not implemented');\n    }\n    getBufferInfo() {\n        return this.stage.renderer.getBufferInfo();\n    }\n    /**\n     * Re-render the current frame without advancing any running animations.\n     *\n     * @remarks\n     * Any state changes will be reflected in the re-rendered frame. Useful for\n     * debugging.\n     *\n     * May not do anything if the render loop is running on a separate worker.\n     */\n    rerender() {\n        this.stage.requestRender();\n    }\n    /**\n     * Cleanup textures that are not being used\n     *\n     * @remarks\n     * This can be used to free up GFX memory used by textures that are no longer\n     * being displayed.\n     *\n     * This routine is also called automatically when the memory used by textures\n     * exceeds the critical threshold on frame generation **OR** when the renderer\n     * is idle and the memory used by textures exceeds the target threshold.\n     *\n     * **NOTE**: This is a heavy operation and should be used sparingly.\n     * **NOTE2**: This will not cleanup textures that are currently being displayed.\n     * **NOTE3**: This will not cleanup textures that are marked as `preventCleanup`.\n     * **NOTE4**: This has nothing to do with the garbage collection of JavaScript.\n     */\n    cleanup() {\n        this.stage.cleanup();\n    }\n    /**\n     * Sets the clear color for the stage.\n     *\n     * @param color - The color to set as the clear color.\n     */\n    setClearColor(color) {\n        this.stage.setClearColor(color);\n    }\n}\n//# sourceMappingURL=Renderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    glw;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    renderToTexture;\n    parentHasRenderTexture;\n    framebufferDimensions;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(glw, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        super();\n        this.glw = glw;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.renderToTexture = renderToTexture;\n        this.parentHasRenderTexture = parentHasRenderTexture;\n        this.framebufferDimensions = framebufferDimensions;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? glw.getParameter(glw.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        let existingIdx = -1;\n        const texturesLength = textures.length;\n        for (let i = 0; i < texturesLength; i++) {\n            const t = textures[i];\n            if (t === texture) {\n                existingIdx = i;\n                break;\n            }\n        }\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        if (texturesLength >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return texturesLength;\n    }\n    draw() {\n        const { glw, shader, shaderProps, options } = this;\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // Clipping\n        if (this.clippingRect.valid) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = this.parentHasRenderTexture ? 1 : options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            let clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            // if parent has render texture, we need to adjust the scissor rect\n            // to be relative to the parent's framebuffer\n            if (this.parentHasRenderTexture) {\n                clipY = this.framebufferDimensions\n                    ? this.framebufferDimensions.height - this.dimensions.height\n                    : 0;\n            }\n            glw.setScissorTest(true);\n            glw.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            glw.setScissorTest(false);\n        }\n        glw.drawElements(glw.TRIANGLES, 6 * this.numQuads, glw.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param glw\n */\nexport function getWebGlParameters(glw) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0, // Code below will replace this with an Int32Array\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = glw.getParameter(glw[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param glw\n */\nexport function getWebGlExtensions(glw) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = glw.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n *\n * @param glw\n * @param size\n */\nexport function createIndexBuffer(glw, size) {\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = glw.createBuffer();\n    glw.elementArrayBufferData(buffer, indices, glw.STATIC_DRAW);\n}\n/**\n * Checks if an object is of type HTMLImageElement.\n * This is used because we cant check for HTMLImageElement directly when the\n * renderer is running in a seperate web worker context.\n *\n * @param obj\n * @returns\n */\nexport function isHTMLImageElement(obj) {\n    return (obj !== null &&\n        ((typeof obj === 'object' &&\n            obj.constructor &&\n            obj.constructor.name === 'HTMLImageElement') ||\n            (typeof HTMLImageElement !== 'undefined' &&\n                obj instanceof HTMLImageElement)));\n}\n//# sourceMappingURL=RendererUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isHTMLImageElement } from './internal/RendererUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    glw;\n    _nativeCtxTexture = null;\n    _w = 0;\n    _h = 0;\n    constructor(glw, memManager, textureSource) {\n        super(memManager, textureSource);\n        this.glw = glw;\n    }\n    get ctxTexture() {\n        if (this.state === 'freed') {\n            this.load();\n            return null;\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this.state === 'loading' || this.state === 'loaded') {\n            return;\n        }\n        this.state = 'loading';\n        this.textureSource.setState('loading');\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        if (this._nativeCtxTexture === null) {\n            this.state = 'failed';\n            this.textureSource.setState('failed', new Error('Could not create WebGL Texture'));\n            console.error('Could not create WebGL Texture');\n            return;\n        }\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            // If the texture has been freed while loading, return early.\n            if (this.state === 'freed') {\n                return;\n            }\n            this.state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n            // cleanup source texture data\n            this.textureSource.freeTextureData();\n        })\n            .catch((err) => {\n            // If the texture has been freed while loading, return early.\n            if (this.state === 'freed') {\n                return;\n            }\n            this.state = 'failed';\n            this.textureSource.setState('failed', err);\n            this.textureSource.freeTextureData();\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        const { glw } = this;\n        const textureData = this.textureSource.textureData;\n        assertTruthy(textureData, 'Texture data is null');\n        // Set to a 1x1 transparent texture\n        glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        this.setTextureMemUse(TRANSPARENT_TEXTURE_DATA.byteLength);\n        // If the texture has been freed while loading, return early.\n        if (!this._nativeCtxTexture) {\n            assertTruthy(this.state === 'freed');\n            return { width: 0, height: 0 };\n        }\n        let width = 0;\n        let height = 0;\n        glw.activeTexture(0);\n        const tdata = textureData.data;\n        const format = glw.RGBA;\n        const formatBytes = 4;\n        const memoryPadding = 1.1; // Add padding to account for GPU Padding\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if ((typeof ImageBitmap !== 'undefined' && tdata instanceof ImageBitmap) ||\n            tdata instanceof ImageData ||\n            // not using typeof HTMLImageElement due to web worker\n            isHTMLImageElement(tdata)) {\n            width = tdata.width;\n            height = tdata.height;\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.pixelStorei(glw.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            glw.texImage2D(0, format, format, glw.UNSIGNED_BYTE, tdata);\n            this.setTextureMemUse(height * width * formatBytes * memoryPadding);\n        }\n        else if (tdata === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.texImage2D(0, format, 1, 1, 0, format, glw.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n            this.setTextureMemUse(TRANSPARENT_TEXTURE_DATA.byteLength);\n        }\n        else if ('mipmaps' in tdata && tdata.mipmaps) {\n            const { mipmaps, width = 0, height = 0, type, glInternalFormat } = tdata;\n            const view = type === 'ktx'\n                ? new DataView(mipmaps[0] ?? new ArrayBuffer(0))\n                : mipmaps[0];\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.compressedTexImage2D(0, glInternalFormat, width, height, 0, view);\n            glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n            glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n            this.setTextureMemUse(view.byteLength);\n        }\n        else if (tdata && tdata instanceof Uint8Array) {\n            // Color Texture\n            width = 1;\n            height = 1;\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.pixelStorei(glw.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            glw.texImage2D(0, format, width, height, 0, format, glw.UNSIGNED_BYTE, tdata);\n            this.setTextureMemUse(width * height * formatBytes);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this.state === 'freed') {\n            return;\n        }\n        this.state = 'freed';\n        this.textureSource.setState('freed');\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        const { glw } = this;\n        glw.deleteTexture(this._nativeCtxTexture);\n        this.setTextureMemUse(0);\n        this._nativeCtxTexture = null;\n        // if the texture still has source data, free it\n        this.textureSource.freeTextureData();\n    }\n    /**\n     * Create native context texture\n     *\n     * @remarks\n     * When this method returns the returned texture will be bound to the GL context state.\n     *\n     * @param width\n     * @param height\n     * @returns\n     */\n    createNativeCtxTexture() {\n        const { glw } = this;\n        const nativeTexture = glw.createTexture();\n        if (!nativeTexture) {\n            return null;\n        }\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        glw.activeTexture(0);\n        glw.bindTexture(nativeTexture);\n        // linear texture filtering\n        glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n        glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n        // texture wrapping method\n        glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n        glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n    }\n    async onLoadRequest() {\n        const props = this.textureSource.textureData;\n        assertTruthy(props, 'SubTexture must have texture data');\n        if (props.data instanceof Uint8Array) {\n            // its a 1x1 Color Texture\n            return { width: 1, height: 1 };\n        }\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { assertTruthy } from '../../utils.js';\nimport { isWebGl2 } from '../renderers/webgl/internal/WebGlUtils.js';\n/**\n * Optimized WebGL Context Wrapper\n *\n * @remarks\n * This class contains the subset of the WebGLRenderingContext & WebGL2RenderingContext\n * API that is used by the renderer. Select high volume WebGL methods include\n * caching optimizations to avoid making WebGL calls if the state is already set\n * to the desired value.\n *\n * While most methods contained are direct passthroughs to the WebGL context,\n * some methods combine multiple WebGL calls into one for convenience, modify\n * arguments to be more convenient, or are replaced by more specific methods.\n *\n * Not all methods are optimized. Only methods that are called frequently\n * and/or have a high cost are optimized.\n *\n * A subset of GLenum constants are also exposed as properties on this class\n * for convenience.\n */\nexport class WebGlContextWrapper {\n    gl;\n    //#region Cached WebGL State\n    activeTextureUnit = 0;\n    texture2dUnits;\n    texture2dParams = new WeakMap();\n    scissorEnabled;\n    scissorX;\n    scissorY;\n    scissorWidth;\n    scissorHeight;\n    blendEnabled;\n    blendSrcRgb;\n    blendDstRgb;\n    blendSrcAlpha;\n    blendDstAlpha;\n    boundArrayBuffer;\n    boundElementArrayBuffer;\n    curProgram;\n    //#endregion Cached WebGL State\n    //#region Canvas\n    canvas;\n    //#endregion Canvas\n    //#region WebGL Enums\n    MAX_RENDERBUFFER_SIZE;\n    MAX_TEXTURE_SIZE;\n    MAX_VIEWPORT_DIMS;\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n    MAX_TEXTURE_IMAGE_UNITS;\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n    MAX_VERTEX_ATTRIBS;\n    MAX_VARYING_VECTORS;\n    MAX_VERTEX_UNIFORM_VECTORS;\n    MAX_FRAGMENT_UNIFORM_VECTORS;\n    TEXTURE_MAG_FILTER;\n    TEXTURE_MIN_FILTER;\n    TEXTURE_WRAP_S;\n    TEXTURE_WRAP_T;\n    LINEAR;\n    CLAMP_TO_EDGE;\n    RGB;\n    RGBA;\n    UNSIGNED_BYTE;\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n    UNPACK_FLIP_Y_WEBGL;\n    FLOAT;\n    TRIANGLES;\n    UNSIGNED_SHORT;\n    ONE;\n    ONE_MINUS_SRC_ALPHA;\n    VERTEX_SHADER;\n    FRAGMENT_SHADER;\n    STATIC_DRAW;\n    COMPILE_STATUS;\n    LINK_STATUS;\n    DYNAMIC_DRAW;\n    COLOR_ATTACHMENT0;\n    INVALID_ENUM;\n    INVALID_OPERATION;\n    //#endregion WebGL Enums\n    constructor(gl) {\n        this.gl = gl;\n        // The following code extracts the current state of the WebGL context\n        // to our local JavaScript cached version of it. This is so we can\n        // avoid making WebGL calls if we don't need to.\n        // We could assume that the WebGL context is in a default state, but\n        // in the future we may want to support restoring a broken WebGL context\n        // and this will help with that.\n        this.activeTextureUnit =\n            gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0;\n        const maxTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        // save current texture units\n        this.texture2dUnits = new Array(maxTextureUnits)\n            .fill(undefined)\n            .map((_, i) => {\n            this.activeTexture(i);\n            return gl.getParameter(gl.TEXTURE_BINDING_2D);\n        });\n        // restore active texture unit\n        this.activeTexture(this.activeTextureUnit);\n        this.scissorEnabled = gl.isEnabled(gl.SCISSOR_TEST);\n        const scissorBox = gl.getParameter(gl.SCISSOR_BOX);\n        this.scissorX = scissorBox[0];\n        this.scissorY = scissorBox[1];\n        this.scissorWidth = scissorBox[2];\n        this.scissorHeight = scissorBox[3];\n        this.blendEnabled = gl.isEnabled(gl.BLEND);\n        this.blendSrcRgb = gl.getParameter(gl.BLEND_SRC_RGB);\n        this.blendDstRgb = gl.getParameter(gl.BLEND_DST_RGB);\n        this.blendSrcAlpha = gl.getParameter(gl.BLEND_SRC_ALPHA);\n        this.blendDstAlpha = gl.getParameter(gl.BLEND_DST_ALPHA);\n        this.boundArrayBuffer = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n        this.boundElementArrayBuffer = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this.curProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n        this.canvas = gl.canvas;\n        // Extract GLenums\n        this.MAX_RENDERBUFFER_SIZE = gl.MAX_RENDERBUFFER_SIZE;\n        this.MAX_TEXTURE_SIZE = gl.MAX_TEXTURE_SIZE;\n        this.MAX_VIEWPORT_DIMS = gl.MAX_VIEWPORT_DIMS;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.MAX_TEXTURE_IMAGE_UNITS = gl.MAX_TEXTURE_IMAGE_UNITS;\n        this.MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n        this.MAX_VERTEX_ATTRIBS = gl.MAX_VERTEX_ATTRIBS;\n        this.MAX_VARYING_VECTORS = gl.MAX_VARYING_VECTORS;\n        this.MAX_VERTEX_UNIFORM_VECTORS = gl.MAX_VERTEX_UNIFORM_VECTORS;\n        this.MAX_FRAGMENT_UNIFORM_VECTORS = gl.MAX_FRAGMENT_UNIFORM_VECTORS;\n        this.TEXTURE_MAG_FILTER = gl.TEXTURE_MAG_FILTER;\n        this.TEXTURE_MIN_FILTER = gl.TEXTURE_MIN_FILTER;\n        this.TEXTURE_WRAP_S = gl.TEXTURE_WRAP_S;\n        this.TEXTURE_WRAP_T = gl.TEXTURE_WRAP_T;\n        this.LINEAR = gl.LINEAR;\n        this.CLAMP_TO_EDGE = gl.CLAMP_TO_EDGE;\n        this.RGB = gl.RGB;\n        this.RGBA = gl.RGBA;\n        this.UNSIGNED_BYTE = gl.UNSIGNED_BYTE;\n        this.UNPACK_PREMULTIPLY_ALPHA_WEBGL = gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n        this.UNPACK_FLIP_Y_WEBGL = gl.UNPACK_FLIP_Y_WEBGL;\n        this.FLOAT = gl.FLOAT;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.ONE = gl.ONE;\n        this.ONE_MINUS_SRC_ALPHA = gl.ONE_MINUS_SRC_ALPHA;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.VERTEX_SHADER = gl.VERTEX_SHADER;\n        this.FRAGMENT_SHADER = gl.FRAGMENT_SHADER;\n        this.STATIC_DRAW = gl.STATIC_DRAW;\n        this.COMPILE_STATUS = gl.COMPILE_STATUS;\n        this.LINK_STATUS = gl.LINK_STATUS;\n        this.DYNAMIC_DRAW = gl.DYNAMIC_DRAW;\n        this.COLOR_ATTACHMENT0 = gl.COLOR_ATTACHMENT0;\n        this.INVALID_ENUM = gl.INVALID_ENUM;\n        this.INVALID_OPERATION = gl.INVALID_OPERATION;\n    }\n    /**\n     * Returns true if the WebGL context is WebGL2\n     *\n     * @returns\n     */\n    isWebGl2() {\n        return isWebGl2(this.gl);\n    }\n    /**\n     * ```\n     * gl.activeTexture(textureUnit + gl.TEXTURE0);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: `textureUnit` is based from 0, not `gl.TEXTURE0`.\n     *\n     * @param textureUnit\n     */\n    activeTexture(textureUnit) {\n        const { gl } = this;\n        if (this.activeTextureUnit !== textureUnit) {\n            gl.activeTexture(textureUnit + gl.TEXTURE0);\n            this.activeTextureUnit = textureUnit;\n        }\n    }\n    /**\n     * ```\n     * gl.bindTexture(gl.TEXTURE_2D, texture);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param texture\n     */\n    bindTexture(texture) {\n        const { gl, activeTextureUnit, texture2dUnits } = this;\n        if (texture2dUnits[activeTextureUnit] === texture) {\n            return;\n        }\n        texture2dUnits[activeTextureUnit] = texture;\n        gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    }\n    _getActiveTexture() {\n        const { activeTextureUnit, texture2dUnits } = this;\n        return texture2dUnits[activeTextureUnit];\n    }\n    /**\n     * ```\n     * gl.texParameteri(gl.TEXTURE_2D, pname, param);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param pname\n     * @param param\n     * @returns\n     */\n    texParameteri(pname, param) {\n        const { gl, texture2dParams } = this;\n        const activeTexture = this._getActiveTexture();\n        if (!activeTexture) {\n            throw new Error('No active texture');\n        }\n        let textureParams = texture2dParams.get(activeTexture);\n        if (!textureParams) {\n            textureParams = {};\n            texture2dParams.set(activeTexture, textureParams);\n        }\n        if (textureParams[pname] === param) {\n            return;\n        }\n        textureParams[pname] = param;\n        gl.texParameteri(gl.TEXTURE_2D, pname, param);\n    }\n    texImage2D(level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels) {\n        const { gl } = this;\n        if (format) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource);\n        }\n    }\n    /**\n     * ```\n     * gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, data);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    compressedTexImage2D(level, internalformat, width, height, border, data) {\n        const { gl } = this;\n        gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalformat, width, height, border, data);\n    }\n    /**\n     * ```\n     * gl.pixelStorei(pname, param);\n     * ```\n     *\n     * @param pname\n     * @param param\n     */\n    pixelStorei(pname, param) {\n        const { gl } = this;\n        gl.pixelStorei(pname, param);\n    }\n    /**\n     * ```\n     * gl.generateMipmap(gl.TEXTURE_2D);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    generateMipmap() {\n        const { gl } = this;\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    /**\n     * ```\n     * gl.createTexture();\n     * ```\n     *\n     * @returns\n     */\n    createTexture() {\n        const { gl } = this;\n        return gl.createTexture();\n    }\n    /**\n     * ```\n     * gl.deleteTexture(texture);\n     * ```\n     *\n     * @param texture\n     */\n    deleteTexture(texture) {\n        const { gl } = this;\n        if (texture) {\n            this.texture2dParams.delete(texture);\n        }\n        gl.deleteTexture(texture);\n    }\n    /**\n     * ```\n     * gl.deleteFramebuffer(framebuffer);\n     *\n     * @param framebuffer\n     */\n    deleteFramebuffer(framebuffer) {\n        this.gl.deleteFramebuffer(framebuffer);\n    }\n    /**\n     * ```\n     * gl.viewport(x, y, width, height);\n     * ```\n     */\n    viewport(x, y, width, height) {\n        const { gl } = this;\n        gl.viewport(x, y, width, height);\n    }\n    /**\n     * ```\n     * gl.clearColor(red, green, blue, alpha);\n     * ```\n     *\n     * @param red\n     * @param green\n     * @param blue\n     * @param alpha\n     */\n    clearColor(red, green, blue, alpha) {\n        const { gl } = this;\n        gl.clearColor(red, green, blue, alpha);\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.SCISSOR_TEST);\n     * ```\n     * @param enable\n     */\n    setScissorTest(enable) {\n        const { gl, scissorEnabled } = this;\n        if (enable === scissorEnabled) {\n            return;\n        }\n        if (enable) {\n            gl.enable(gl.SCISSOR_TEST);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        this.scissorEnabled = enable;\n    }\n    /**\n     * ```\n     * gl.scissor(x, y, width, height);\n     * ```\n     *\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n    scissor(x, y, width, height) {\n        const { gl, scissorX, scissorY, scissorWidth, scissorHeight } = this;\n        if (x !== scissorX ||\n            y !== scissorY ||\n            width !== scissorWidth ||\n            height !== scissorHeight) {\n            gl.scissor(x, y, width, height);\n            this.scissorX = x;\n            this.scissorY = y;\n            this.scissorWidth = width;\n            this.scissorHeight = height;\n        }\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.BLEND);\n     * ```\n     *\n     * @param blend\n     * @returns\n     */\n    setBlend(blend) {\n        const { gl, blendEnabled } = this;\n        if (blend === blendEnabled) {\n            return;\n        }\n        if (blend) {\n            gl.enable(gl.BLEND);\n        }\n        else {\n            gl.disable(gl.BLEND);\n        }\n        this.blendEnabled = blend;\n    }\n    /**\n     * ```\n     * gl.blendFunc(src, dst);\n     * ```\n     *\n     * @param src\n     * @param dst\n     */\n    blendFunc(src, dst) {\n        const { gl, blendSrcRgb, blendDstRgb, blendSrcAlpha, blendDstAlpha } = this;\n        if (src !== blendSrcRgb ||\n            dst !== blendDstRgb ||\n            src !== blendSrcAlpha ||\n            dst !== blendDstAlpha) {\n            gl.blendFunc(src, dst);\n            this.blendSrcRgb = src;\n            this.blendDstRgb = dst;\n            this.blendSrcAlpha = src;\n            this.blendDstAlpha = dst;\n        }\n    }\n    /**\n     * ```\n     * gl.createBuffer();\n     * ```\n     *\n     * @returns\n     */\n    createBuffer() {\n        const { gl } = this;\n        return gl.createBuffer();\n    }\n    /**\n     * ```\n     * gl.createFramebuffer();\n     * ```\n     * @returns\n     */\n    createFramebuffer() {\n        const { gl } = this;\n        return gl.createFramebuffer();\n    }\n    /**\n     * ```\n     * gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n     * ```\n     *\n     * @param framebuffer\n     */\n    bindFramebuffer(framebuffer) {\n        const { gl } = this;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    /**\n     * ```\n     * gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.FRAMEBUFFER` and textarget is always `gl.TEXTURE_2D`\n     */\n    framebufferTexture2D(attachment, texture, level) {\n        const { gl } = this;\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, level);\n    }\n    /**\n     * ```\n     * gl.clear(gl.COLOR_BUFFER_BIT);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Clear mask is always `gl.COLOR_BUFFER_BIT`\n     */\n    clear() {\n        const { gl } = this;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    arrayBufferData(buffer, data, usage) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n     * ```\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    elementArrayBufferData(buffer, data, usage) {\n        const { gl, boundElementArrayBuffer } = this;\n        if (boundElementArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n            this.boundElementArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.vertexAttribPointer` are combined into one function.\n     *\n     * @param buffer\n     * @param index\n     * @param size\n     * @param type\n     * @param normalized\n     * @param stride\n     * @param offset\n     */\n    vertexAttribPointer(buffer, index, size, type, normalized, stride, offset) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n    /**\n     * ```\n     * gl.useProgram(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    useProgram(program) {\n        const { gl, curProgram } = this;\n        if (curProgram === program) {\n            return;\n        }\n        gl.useProgram(program);\n        this.curProgram = program;\n    }\n    /**\n     * Sets the value of a single float uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param v0 - The value to set.\n     */\n    uniform1f(location, v0) {\n        const { gl } = this;\n        gl.uniform1f(location, v0);\n    }\n    /**\n     * Sets the value of a float array uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param value - The array of values to set.\n     */\n    uniform1fv(location, value) {\n        const { gl } = this;\n        gl.uniform1fv(location, value);\n    }\n    /**\n     * Sets the value of a single integer uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param v0 - The value to set.\n     */\n    uniform1i(location, v0) {\n        const { gl } = this;\n        gl.uniform1i(location, v0);\n    }\n    /**\n     * Sets the value of an integer array uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param value - The array of values to set.\n     */\n    uniform1iv(location, value) {\n        const { gl } = this;\n        gl.uniform1iv(location, value);\n    }\n    /**\n     * Sets the value of a vec2 uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param v0 - The first component of the vector.\n     * @param v1 - The second component of the vector.\n     */\n    uniform2f(location, v0, v1) {\n        const { gl } = this;\n        gl.uniform2f(location, v0, v1);\n    }\n    /**\n     * Sets the value of a vec2 array uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param value - The array of vec2 values to set.\n     */\n    uniform2fv(location, value) {\n        const { gl } = this;\n        gl.uniform2fv(location, value);\n    }\n    /**\n     * Sets the value of a ivec2 uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param v0 - The first component of the vector.\n     * @param v1 - The second component of the vector.\n     */\n    uniform2i(location, v0, v1) {\n        const { gl } = this;\n        gl.uniform2i(location, v0, v1);\n    }\n    /**\n     * Sets the value of an ivec2 array uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param value - The array of ivec2 values to set.\n     */\n    uniform2iv(location, value) {\n        const { gl } = this;\n        gl.uniform2iv(location, value);\n    }\n    /**\n     * Sets the value of a vec3 uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param v0 - The first component of the vector.\n     * @param v1 - The second component of the vector.\n     * @param v2 - The third component of the vector.\n     */\n    uniform3f(location, v0, v1, v2) {\n        const { gl } = this;\n        gl.uniform3f(location, v0, v1, v2);\n    }\n    /**\n     * Sets the value of a vec3 array uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param value - The array of vec3 values to set.\n     */\n    uniform3fv(location, value) {\n        const { gl } = this;\n        gl.uniform3fv(location, value);\n    }\n    /**\n     * Sets the value of a ivec3 uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param v0 - The first component of the vector.\n     * @param v1 - The second component of the vector.\n     * @param v2 - The third component of the vector.\n     */\n    uniform3i(location, v0, v1, v2) {\n        const { gl } = this;\n        gl.uniform3i(location, v0, v1, v2);\n    }\n    /**\n     * Sets the value of an ivec3 array uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param value - The array of ivec3 values to set.\n     */\n    uniform3iv(location, value) {\n        const { gl } = this;\n        gl.uniform3iv(location, value);\n    }\n    /**\n     * Sets the value of a vec4 uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param v0 - The first component of the vector.\n     * @param v1 - The second component of the vector.\n     * @param v2 - The third component of the vector.\n     * @param v3 - The fourth component of the vector.\n     */\n    uniform4f(location, v0, v1, v2, v3) {\n        const { gl } = this;\n        gl.uniform4f(location, v0, v1, v2, v3);\n    }\n    /**\n     * Sets the value of a vec4 array uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param value - The array of vec4 values to set.\n     */\n    uniform4fv(location, value) {\n        const { gl } = this;\n        gl.uniform4fv(location, value);\n    }\n    /**\n     * Sets the value of a ivec4 uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param v0 - The first component of the vector.\n     * @param v1 - The second component of the vector.\n     * @param v2 - The third component of the vector.\n     * @param v3 - The fourth component of the vector.\n     */\n    uniform4i(location, v0, v1, v2, v3) {\n        const { gl } = this;\n        gl.uniform4i(location, v0, v1, v2, v3);\n    }\n    /**\n     * Sets the value of an ivec4 array uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param value - The array of ivec4 values to set.\n     */\n    uniform4iv(location, value) {\n        const { gl } = this;\n        gl.uniform4iv(location, value);\n    }\n    /**\n     * Sets the value of a mat2 uniform variable.\n     *\n     * @param location - The location of the uniform variable.\n     * @param transpose - Whether to transpose the matrix.\n     * @param value - The array of mat2 values to set.\n     */\n    uniformMatrix2fv(location, value) {\n        const { gl } = this;\n        gl.uniformMatrix2fv(location, false, value);\n    }\n    /**\n     * Sets the value of a mat2 uniform variable.\n     * @param location - The location of the uniform variable.\n     * @param value - The array of mat2 values to set.\n     */\n    uniformMatrix3fv(location, value) {\n        const { gl } = this;\n        gl.uniformMatrix3fv(location, false, value);\n    }\n    /**\n     * Sets the value of a mat4 uniform variable.\n     * @param location - The location of the uniform variable.\n     * @param value - The array of mat4 values to set.\n     */\n    uniformMatrix4fv(location, value) {\n        const { gl } = this;\n        gl.uniformMatrix4fv(location, false, value);\n    }\n    /**\n     * ```\n     * gl.getParameter(pname);\n     * ```\n     *\n     * @param pname\n     * @returns\n     */\n    getParameter(pname) {\n        const { gl } = this;\n        return gl.getParameter(pname);\n    }\n    /**\n     * ```\n     * gl.drawElements(mode, count, type, offset);\n     * ```\n     *\n     * @param mode\n     * @param count\n     * @param type\n     * @param offset\n     */\n    drawElements(mode, count, type, offset) {\n        const { gl } = this;\n        gl.drawElements(mode, count, type, offset);\n    }\n    /**\n     * ```\n     * gl.drawArrays(mode, first, count);\n     * ```\n     *\n     * @param name\n     * @returns\n     */\n    getExtension(name) {\n        const { gl } = this;\n        return gl.getExtension(name);\n    }\n    /**\n     * ```\n     * gl.getError(type);\n     * ```\n     *\n     * @returns\n     */\n    getError() {\n        const { gl } = this;\n        return gl.getError();\n    }\n    /**\n     * ```\n     * gl.createVertexArray();\n     * ```\n     *\n     * @returns\n     */\n    createVertexArray() {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        return gl.createVertexArray();\n    }\n    /**\n     * ```\n     * gl.bindVertexArray(vertexArray);\n     * ```\n     *\n     * @param vertexArray\n     */\n    bindVertexArray(vertexArray) {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        gl.bindVertexArray(vertexArray);\n    }\n    /**\n     * ```\n     * gl.getAttribLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getAttribLocation(program, name) {\n        const { gl } = this;\n        return gl.getAttribLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.getUniformLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getUniformLocation(program, name) {\n        const { gl } = this;\n        return gl.getUniformLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.enableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    enableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.enableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.disableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    disableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.disableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.createShader(type);\n     * ```\n     *\n     * @param type\n     * @returns\n     */\n    createShader(type) {\n        const { gl } = this;\n        return gl.createShader(type);\n    }\n    /**\n     * ```\n     * gl.compileShader(shader);\n     * ```\n     *\n     * @param shader\n     * @returns\n     */\n    compileShader(shader) {\n        const { gl } = this;\n        gl.compileShader(shader);\n    }\n    /**\n     * ```\n     * gl.attachShader(program, shader);\n     * ```\n     *\n     * @param program\n     * @param shader\n     */\n    attachShader(program, shader) {\n        const { gl } = this;\n        gl.attachShader(program, shader);\n    }\n    /**\n     * ```\n     * gl.linkProgram(program);\n     * ```\n     *\n     * @param program\n     */\n    linkProgram(program) {\n        const { gl } = this;\n        gl.linkProgram(program);\n    }\n    /**\n     * ```\n     * gl.deleteProgram(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteProgram(shader) {\n        const { gl } = this;\n        gl.deleteProgram(shader);\n    }\n    /**\n     * ```\n     * gl.getShaderParameter(shader, pname);\n     * ```\n     *\n     * @param shader\n     * @param pname\n     */\n    getShaderParameter(shader, pname) {\n        const { gl } = this;\n        return gl.getShaderParameter(shader, pname);\n    }\n    /**\n     * ```\n     * gl.getShaderInfoLog(shader);\n     * ```\n     *\n     * @param shader\n     */\n    getShaderInfoLog(shader) {\n        const { gl } = this;\n        return gl.getShaderInfoLog(shader);\n    }\n    /**\n     * ```\n     * gl.createProgram();\n     * ```\n     *\n     * @returns\n     */\n    createProgram() {\n        const { gl } = this;\n        return gl.createProgram();\n    }\n    /**\n     * ```\n     * gl.getProgramParameter(program, pname);\n     * ```\n     *\n     * @param program\n     * @param pname\n     * @returns\n     */\n    getProgramParameter(program, pname) {\n        const { gl } = this;\n        return gl.getProgramParameter(program, pname);\n    }\n    /**\n     * ```\n     * gl.getProgramInfoLog(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    getProgramInfoLog(program) {\n        const { gl } = this;\n        return gl.getProgramInfoLog(program);\n    }\n    /**\n     * ```\n     * gl.shaderSource(shader, source);\n     * ```\n     *\n     * @param shader\n     * @param source\n     */\n    shaderSource(shader, source) {\n        const { gl } = this;\n        gl.shaderSource(shader, source);\n    }\n    /**\n     * ```\n     * gl.deleteShader(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteShader(shader) {\n        const { gl } = this;\n        gl.deleteShader(shader);\n    }\n}\n/**\n * Compare two arrays for equality.\n *\n * @remarks\n * This function will not try to compare nested arrays or Float32Arrays and\n * instead will always return false when they are encountered.\n *\n * @param a\n * @param b\n * @returns\n */\nexport function compareArrays(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    let result = false;\n    for (let i = 0; i < a.length; i++) {\n        if (Array.isArray(a[i]) || a[i] instanceof Float32Array) {\n            result = false;\n            break;\n        }\n        if (a[i] !== b[i]) {\n            result = false;\n            break;\n        }\n        result = true;\n    }\n    return result;\n}\n//# sourceMappingURL=WebGlContextWrapper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2024 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxRenderTexture extends WebGlCoreCtxTexture {\n    framebuffer = null;\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n    }\n    async onLoadRequest() {\n        const { glw } = this;\n        const nativeTexture = (this._nativeCtxTexture =\n            this.createNativeCtxTexture());\n        const { width, height } = this.textureSource;\n        // Create Framebuffer object\n        this.framebuffer = glw.createFramebuffer();\n        // Set the dimensions of the render texture\n        glw.texImage2D(0, glw.RGBA, width, height, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        // Update the texture memory manager\n        this.setTextureMemUse(width * height * 4);\n        // Bind the framebuffer\n        glw.bindFramebuffer(this.framebuffer);\n        // Attach the texture to the framebuffer\n        glw.framebufferTexture2D(glw.COLOR_ATTACHMENT0, nativeTexture, 0);\n        // Unbind the framebuffer\n        glw.bindFramebuffer(null);\n        return {\n            width,\n            height,\n        };\n    }\n    free() {\n        super.free();\n        // Delete the framebuffer\n        this.glw.deleteFramebuffer(this.framebuffer);\n        this.framebuffer = null;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxRenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn } from '../../../utils.js';\nimport { CoreRenderer, } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture, TextureType } from '../../textures/Texture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { WebGlContextWrapper } from '../../lib/WebGlContextWrapper.js';\nimport { RenderTexture } from '../../textures/RenderTexture.js';\nimport { CoreNodeRenderState } from '../../CoreNode.js';\nimport { WebGlCoreCtxRenderTexture } from './WebGlCoreCtxRenderTexture.js';\nconst WORDS_PER_QUAD = 24;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    glw;\n    system;\n    //// Persistent data\n    quadBuffer;\n    fQuadBuffer;\n    uiQuadBuffer;\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    rttNodes = [];\n    activeRttNode = null;\n    //// Default Shader\n    defShaderCtrl;\n    defaultShader;\n    quadBufferCollection;\n    clearColor = {\n        raw: 0x00000000,\n        normalized: [0, 0, 0, 0],\n    };\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    quadBufferUsage = 0;\n    numQuadsRendered = 0;\n    /**\n     * Whether the renderer is currently rendering to a texture.\n     */\n    renderToTextureActive = false;\n    constructor(options) {\n        super(options);\n        this.quadBuffer = new ArrayBuffer(this.stage.options.quadBufferSize);\n        this.fQuadBuffer = new Float32Array(this.quadBuffer);\n        this.uiQuadBuffer = new Uint32Array(this.quadBuffer);\n        this.mode = 'webgl';\n        const { canvas, clearColor, bufferMemory } = options;\n        const gl = createWebGLContext(canvas, options.forceWebGL2, options.contextSpy);\n        const glw = (this.glw = new WebGlContextWrapper(gl));\n        glw.viewport(0, 0, canvas.width, canvas.height);\n        this.updateClearColor(clearColor);\n        glw.setBlend(true);\n        glw.blendFunc(glw.ONE, glw.ONE_MINUS_SRC_ALPHA);\n        createIndexBuffer(glw, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(this.glw),\n            extensions: getWebGlExtensions(this.glw),\n        };\n        this.shManager.renderer = this;\n        this.defShaderCtrl = this.shManager.loadShader('DefaultShader');\n        this.defaultShader = this.defShaderCtrl.shader;\n        const quadBuffer = glw.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2, // 2 components per iteration\n                        type: glw.FLOAT, // the data is 32bit floats\n                        normalized: false, // don't normalize the data\n                        stride, // 0 = move forward size * sizeof(type) each iteration to get the next position\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: glw.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        const { glw } = this;\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        glw.setScissorTest(false);\n        glw.clear();\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.glw, this.txMemManager, textureSource);\n        }\n        else if (textureSource instanceof RenderTexture) {\n            return new WebGlCoreCtxRenderTexture(this.glw, this.txMemManager, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.glw, this.txMemManager, textureSource);\n    }\n    /**\n     * This function adds a quad (a rectangle composed of two triangles) to the WebGL rendering pipeline.\n     *\n     * It takes a set of options that define the quad's properties, such as its dimensions, colors, texture, shader, and transformation matrix.\n     * The function first updates the shader properties with the current dimensions if necessary, then sets the default texture if none is provided.\n     * It then checks if a new render operation is needed, based on the current shader and clipping rectangle.\n     * If a new render operation is needed, it creates one and updates the current render operation.\n     * The function then adjusts the texture coordinates based on the texture options and adds the texture to the texture manager.\n     *\n     * Finally, it calculates the vertices for the quad, taking into account any transformations, and adds them to the quad buffer.\n     * The function updates the length and number of quads in the current render operation, and updates the current buffer index.\n     */\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        let texture = params.texture;\n        assertTruthy(texture !== null, 'Texture is required');\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions and or alpha that will be used to render the quad.\n         */\n        if (params.shaderProps !== null) {\n            if (hasOwn(params.shaderProps, '$dimensions') == true) {\n                const dimensions = params.shaderProps.$dimensions;\n                dimensions.width = params.width;\n                dimensions.height = params.height;\n            }\n            if (hasOwn(params.shaderProps, '$alpha') === true) {\n                params.shaderProps.$alpha = params.alpha;\n            }\n        }\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = { width: -1, height: -1 };\n        targetDims.width = params.width;\n        targetDims.height = params.height;\n        const targetShader = params.shader || this.defaultShader;\n        assertTruthy(targetShader.getUniformLocation !== undefined, 'Invalid WebGL shader');\n        if (this.reuseRenderOp(params) === false) {\n            this.newRenderOp(targetShader, params.shaderProps, params.alpha, targetDims, params.clippingRect, bufferIdx, params.rtt, params.parentHasRenderTexture, params.framebufferDimensions);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture.type === TextureType.subTexture) {\n            const { x: tx, y: ty, width: tw, height: th, } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture.dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        if (texture.type === TextureType.image &&\n            params.textureOptions !== null &&\n            params.textureOptions.resizeMode !== undefined &&\n            texture.dimensions !== null) {\n            const resizeMode = params.textureOptions.resizeMode;\n            const { width: tw, height: th } = texture.dimensions;\n            if (resizeMode.type === 'cover') {\n                const scaleX = params.width / tw;\n                const scaleY = params.height / th;\n                const scale = Math.max(scaleX, scaleY);\n                const precision = 1 / scale;\n                // Determine based on width\n                if (scale && scaleX && scaleX < scale) {\n                    const desiredSize = precision * params.width;\n                    texCoordX1 = (1 - desiredSize / tw) * (resizeMode.clipX ?? 0.5);\n                    texCoordX2 = texCoordX1 + desiredSize / tw;\n                }\n                // Determine based on height\n                if (scale && scaleY && scaleY < scale) {\n                    const desiredSize = precision * params.height;\n                    texCoordY1 = (1 - desiredSize / th) * (resizeMode.clipY ?? 0.5);\n                    texCoordY2 = texCoordY1 + desiredSize / th;\n                }\n            }\n        }\n        // Flip texture coordinates if dictated by texture options\n        let flipY = 0;\n        if (params.textureOptions !== null) {\n            if (params.textureOptions.flipX === true) {\n                [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n            }\n            // convert to integer for bitwise operation below\n            flipY = +(params.textureOptions.flipY || false);\n        }\n        // Eitherone should be true\n        if (flipY ^ +(texture.type === TextureType.renderToTexture)) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const ctxTexture = texture.ctxTexture;\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        assertTruthy(this.curRenderOp !== null);\n        if (params.renderCoords) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = params.renderCoords.x1; // vertexX\n            fQuadBuffer[bufferIdx++] = params.renderCoords.y1; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = params.colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = params.renderCoords.x2;\n            fQuadBuffer[bufferIdx++] = params.renderCoords.y2;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = params.colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = params.renderCoords.x4;\n            fQuadBuffer[bufferIdx++] = params.renderCoords.y4;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = params.colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = params.renderCoords.x3;\n            fQuadBuffer[bufferIdx++] = params.renderCoords.y3;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = params.colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else if (params.tb !== 0 || params.tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = params.tx; // vertexX\n            fQuadBuffer[bufferIdx++] = params.ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = params.colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = params.tx + params.width * params.ta;\n            fQuadBuffer[bufferIdx++] = params.ty + params.width * params.tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = params.colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = params.tx + params.height * params.tb;\n            fQuadBuffer[bufferIdx++] = params.ty + params.height * params.td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = params.colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] =\n                params.tx + params.width * params.ta + params.height * params.tb;\n            fQuadBuffer[bufferIdx++] =\n                params.ty + params.width * params.tc + params.height * params.td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = params.colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = params.tx + params.width * params.ta;\n            const rightCornerY = params.ty + params.height * params.td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = params.tx; // vertexX\n            fQuadBuffer[bufferIdx++] = params.ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = params.colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = params.ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = params.colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = params.tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = params.colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = params.colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        this.curRenderOp.length += WORDS_PER_QUAD;\n        this.curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        const curRenderOp = new WebGlCoreRenderOp(this.glw, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0, // Z-Index is only used for explictly added Render Ops\n        renderToTexture, parentHasRenderTexture, framebufferDimensions);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            this.newRenderOp(curRenderOp.shader, curRenderOp.shaderProps, curRenderOp.alpha, curRenderOp.dimensions, curRenderOp.clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * Test if the current Render operation can be reused for the specified parameters.\n     * @param params\n     * @returns\n     */\n    reuseRenderOp(params) {\n        const { shader, shaderProps, parentHasRenderTexture, rtt, clippingRect } = params;\n        const targetShader = shader || this.defaultShader;\n        // Switching shader program will require a new render operation\n        if (this.curRenderOp?.shader !== targetShader) {\n            return false;\n        }\n        // Switching clipping rect will require a new render operation\n        if (compareRect(this.curRenderOp.clippingRect, clippingRect) === false) {\n            return false;\n        }\n        // Force new render operation if rendering to texture\n        // @todo: This needs to be improved, render operations could also be reused\n        // for rendering to texture\n        if (parentHasRenderTexture !== undefined || rtt !== undefined) {\n            return false;\n        }\n        // Check if the shader can batch the shader properties\n        if (this.curRenderOp.shader !== this.defaultShader &&\n            (shaderProps === null ||\n                this.curRenderOp.shader.canBatchShaderProps(this.curRenderOp.shaderProps, shaderProps) === false)) {\n            return false;\n        }\n        // Render operation can be reused\n        return true;\n    }\n    /**\n     * add RenderOp to the render pipeline\n     */\n    addRenderOp(renderable) {\n        this.renderOps.push(renderable);\n        this.curRenderOp = null;\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { glw, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') || null;\n        glw.arrayBufferData(buffer, arr, glw.STATIC_DRAW);\n        for (let i = 0, length = this.renderOps.length; i < length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.renderOps[i].draw();\n        }\n        this.quadBufferUsage = this.curBufferIdx * arr.BYTES_PER_ELEMENT;\n        // Calculate the size of each quad in bytes (4 vertices per quad) times the size of each vertex in bytes\n        const QUAD_SIZE_IN_BYTES = 4 * (6 * arr.BYTES_PER_ELEMENT); // 6 attributes per vertex\n        this.numQuadsRendered = this.quadBufferUsage / QUAD_SIZE_IN_BYTES;\n    }\n    getQuadCount() {\n        return this.numQuadsRendered;\n    }\n    renderToTexture(node) {\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            if (this.rttNodes[i] === node) {\n                return;\n            }\n        }\n        this.insertRTTNodeInOrder(node);\n    }\n    /**\n     * Inserts an RTT node into `this.rttNodes` while maintaining the correct rendering order based on hierarchy.\n     *\n     * Rendering order for RTT nodes is critical when nested RTT nodes exist in a parent-child relationship.\n     * Specifically:\n     *  - Child RTT nodes must be rendered before their RTT-enabled parents to ensure proper texture composition.\n     *  - If an RTT node is added and it has existing RTT children, it should be rendered after those children.\n     *\n     * This function addresses both cases by:\n     * 1. **Checking Upwards**: It traverses the node's hierarchy upwards to identify any RTT parent\n     *    already in `rttNodes`. If an RTT parent is found, the new node is placed before this parent.\n     * 2. **Checking Downwards**: It traverses the node’s children recursively to find any RTT-enabled\n     *    children that are already in `rttNodes`. If such children are found, the new node is inserted\n     *    after the last (highest index) RTT child node.\n     *\n     * The final calculated insertion index ensures the new node is positioned in `rttNodes` to respect\n     * both parent-before-child and child-before-parent rendering rules, preserving the correct order\n     * for the WebGL renderer.\n     *\n     * @param node - The RTT-enabled CoreNode to be added to `rttNodes` in the appropriate hierarchical position.\n     */\n    insertRTTNodeInOrder(node) {\n        let insertIndex = this.rttNodes.length; // Default to the end of the array\n        // 1. Traverse upwards to ensure the node is placed before its RTT parent (if any).\n        let currentNode = node;\n        while (currentNode) {\n            if (!currentNode.parent) {\n                break;\n            }\n            const parentIndex = this.rttNodes.indexOf(currentNode.parent);\n            if (parentIndex !== -1) {\n                // Found an RTT parent in the list; set insertIndex to place node before the parent\n                insertIndex = parentIndex;\n                break;\n            }\n            currentNode = currentNode.parent;\n        }\n        // 2. Traverse downwards to ensure the node is placed after any RTT children.\n        // Look through each child recursively to see if any are already in rttNodes.\n        const maxChildIndex = this.findMaxChildRTTIndex(node);\n        if (maxChildIndex !== -1) {\n            // Adjust insertIndex to be after the last child RTT node\n            insertIndex = Math.max(insertIndex, maxChildIndex + 1);\n        }\n        // 3. Insert the node at the calculated position\n        this.rttNodes.splice(insertIndex, 0, node);\n    }\n    // Helper function to find the highest index of any RTT children of a node within rttNodes\n    findMaxChildRTTIndex(node) {\n        let maxIndex = -1;\n        const traverseChildren = (currentNode) => {\n            const currentIndex = this.rttNodes.indexOf(currentNode);\n            if (currentIndex !== -1) {\n                maxIndex = Math.max(maxIndex, currentIndex);\n            }\n            // Recursively check all children of the current node\n            for (const child of currentNode.children) {\n                traverseChildren(child);\n            }\n        };\n        // Start traversal directly with the provided node\n        traverseChildren(node);\n        return maxIndex;\n    }\n    renderRTTNodes() {\n        const { glw } = this;\n        const { txManager } = this.stage;\n        // Render all associated RTT nodes to their textures\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            const node = this.rttNodes[i];\n            // Skip nodes that don't have RTT updates\n            if (node === undefined || node.hasRTTupdates === false) {\n                continue;\n            }\n            // Skip nodes that are not visible\n            if (node.worldAlpha === 0 ||\n                (node.strictBounds === true &&\n                    node.renderState === CoreNodeRenderState.OutOfBounds)) {\n                continue;\n            }\n            // Skip nodes that do not have a loaded texture\n            if (node.texture === null || node.texture.state !== 'loaded') {\n                continue;\n            }\n            // Set the active RTT node to the current node\n            // So we can prevent rendering children of nested RTT nodes\n            this.activeRttNode = node;\n            assertTruthy(node.texture, 'RTT node missing texture');\n            const ctxTexture = node.texture.ctxTexture;\n            assertTruthy(ctxTexture instanceof WebGlCoreCtxRenderTexture);\n            this.renderToTextureActive = true;\n            // Bind the the texture's framebuffer\n            glw.bindFramebuffer(ctxTexture.framebuffer);\n            glw.viewport(0, 0, ctxTexture.w, ctxTexture.h);\n            // Set the clear color to transparent\n            glw.clearColor(0, 0, 0, 0);\n            glw.clear();\n            // Render all associated quads to the texture\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (child === undefined) {\n                    continue;\n                }\n                this.stage.addQuads(child);\n                child.hasRTTupdates = false;\n            }\n            // Render all associated quads to the texture\n            this.render();\n            // Reset render operations\n            this.renderOps.length = 0;\n            node.hasRTTupdates = false;\n        }\n        const clearColor = this.clearColor.normalized;\n        // Restore the default clear color\n        glw.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n        // Bind the default framebuffer\n        glw.bindFramebuffer(null);\n        glw.viewport(0, 0, this.glw.canvas.width, this.glw.canvas.height);\n        this.renderToTextureActive = false;\n    }\n    removeRTTNode(node) {\n        const index = this.rttNodes.indexOf(node);\n        if (index === -1) {\n            return;\n        }\n        this.rttNodes.splice(index, 1);\n    }\n    getBufferInfo() {\n        const bufferInfo = {\n            totalAvailable: this.stage.options.quadBufferSize,\n            totalUsed: this.quadBufferUsage,\n        };\n        return bufferInfo;\n    }\n    getDefShaderCtr() {\n        return this.defShaderCtrl;\n    }\n    /**\n     * Updates the WebGL context's clear color and clears the color buffer.\n     *\n     * @param color - The color to set as the clear color, represented as a 32-bit integer.\n     */\n    updateClearColor(color) {\n        if (this.clearColor.raw === color) {\n            return;\n        }\n        const glw = this.glw;\n        const normalizedColor = getNormalizedRgbaComponents(color);\n        glw.clearColor(normalizedColor[0], normalizedColor[1], normalizedColor[2], normalizedColor[3]);\n        this.clearColor = {\n            raw: color,\n            normalized: normalizedColor,\n        };\n        glw.clear();\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderer.js.map","import { SdfTrFontFace, WebTrFontFace, RendererMain, } from '@lightningjs/renderer';\nexport let renderer;\nexport const getRenderer = () => renderer;\nexport function startLightningRenderer(options, rootId = 'app') {\n    renderer = new RendererMain(options, rootId);\n    return renderer;\n}\nexport function loadFonts(fonts) {\n    const stage = renderer.stage;\n    for (const font of fonts) {\n        if ('type' in font && (font.type === 'msdf' || font.type === 'ssdf')) {\n            if (renderer.stage.renderer.mode === 'webgl') {\n                stage.fontManager.addFontFace(new SdfTrFontFace(font.type, {\n                    ...font,\n                    stage,\n                }));\n            }\n        }\n        else if ('fontUrl' in font) {\n            stage.fontManager.addFontFace(new WebTrFontFace(font));\n        }\n    }\n}\n//# sourceMappingURL=lightningInit.js.map","function isDevEnv() {\n    return !!(import.meta.env && import.meta.env.DEV);\n}\nexport const isDev = isDevEnv() || false;\nfunction shadersEnabled() {\n    return !(import.meta.env && import.meta.env.VITE_DISABLE_SHADERS === 'true');\n}\nexport const SHADERS_ENABLED = shadersEnabled();\nexport const Config = {\n    debug: false,\n    focusDebug: false,\n    keyDebug: false,\n    animationsEnabled: true,\n    animationSettings: {\n        duration: 250,\n        easing: 'ease-in-out',\n    },\n    fontSettings: {\n        fontFamily: 'Ubuntu',\n        fontSize: 100,\n    },\n    setActiveElement: () => { },\n    focusStateKey: '$focus',\n};\n//# sourceMappingURL=config.js.map","export const NodeType = {\n    Element: 'element',\n    TextNode: 'textNode',\n    Text: 'text',\n};\n//# sourceMappingURL=nodeTypes.js.map","import { Config, isDev } from './config.js';\nimport { ElementNode } from './elementNode.js';\nimport { NodeType } from './nodeTypes.js';\nfunction hasDebug(node) {\n    return isObject(node) && node.debug;\n}\nexport function log(msg, node, ...args) {\n    if (isDev) {\n        if (Config.debug || hasDebug(node) || hasDebug(args[0])) {\n            console.log(msg, node, ...args);\n        }\n    }\n}\nexport const isFunc = (obj) => obj instanceof Function;\nexport const isFunction = (obj) => typeof obj === 'function';\nexport function isObject(item) {\n    return typeof item === 'object';\n}\nexport function isArray(item) {\n    return Array.isArray(item);\n}\nexport function isString(item) {\n    return typeof item === 'string';\n}\nexport function isNumber(item) {\n    return typeof item === 'number';\n}\nexport function isInteger(item) {\n    return Number.isInteger(item);\n}\nexport function isINode(node) {\n    return 'destroy' in node && typeof node.destroy === 'function';\n}\nexport function isElementNode(node) {\n    return node instanceof ElementNode;\n}\nexport function isElementText(node) {\n    return node._type === NodeType.TextNode;\n}\nexport function isTextNode(node) {\n    return node._type === NodeType.Text;\n}\nexport function keyExists(obj, keys) {\n    for (const key of keys) {\n        if (key in obj) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function flattenStyles(obj, result = {}) {\n    if (isArray(obj)) {\n        obj.forEach((item) => {\n            flattenStyles(item, result);\n        });\n    }\n    else if (obj) {\n        // handle the case where the object is not an array\n        for (const key in obj) {\n            // be careful of 0 values\n            if (result[key] === undefined) {\n                result[key] = obj[key];\n            }\n        }\n    }\n    return result;\n}\nexport function logRenderTree(node) {\n    const tree = [node];\n    let parent = node.parent;\n    while (parent) {\n        tree.push(parent);\n        parent = parent.parent;\n    }\n    tree.reverse();\n    let output = `\nfunction convertEffectsToShader(styleEffects) {\n  const effects = [];\n  let index = 0;\n\n  for (const [type, props] of Object.entries(styleEffects)) {\n    effects.push({ type, props });\n    index++;\n  }\n  return createShader('DynamicShader', { effects });\n}\n`;\n    tree.forEach((node, i) => {\n        if (!node._rendererProps) {\n            return;\n        }\n        node._rendererProps.parent = undefined;\n        node._rendererProps.shader = undefined;\n        const props = JSON.stringify(node._rendererProps, null, 2);\n        const effects = node._effects\n            ? `props${i}.shader = convertEffectsToShader(${JSON.stringify(node._effects, null, 2)});`\n            : '';\n        const parent = i === 0 ? 'rootNode' : `node${i - 1}`;\n        output += `\nconst props${i} = ${props};\nprops${i}.parent = ${parent};\n${effects}\nconst node${i} = renderer.createNode(props${i});\n`;\n    });\n    return output;\n}\n//# sourceMappingURL=utils.js.map","import { isArray, isString } from './utils.js';\nexport default class States extends Array {\n    onChange;\n    constructor(callback, initialState = {}) {\n        if (isArray(initialState)) {\n            super(...initialState);\n        }\n        else if (isString(initialState)) {\n            super(initialState); // Assert as DollarString\n        }\n        else {\n            super(...Object.entries(initialState)\n                .filter(([_key, value]) => value)\n                .map(([key]) => key));\n        }\n        this.onChange = callback;\n        return this;\n    }\n    has(state) {\n        // temporary check for $ prefix\n        return this.indexOf(state) >= 0 || this.indexOf(`$${state}`) >= 0;\n    }\n    is(state) {\n        return this.indexOf(state) >= 0;\n    }\n    add(state) {\n        if (this.has(state)) {\n            return;\n        }\n        this.push(state);\n        this.onChange();\n    }\n    toggle(state, force) {\n        if (force === true) {\n            this.add(state);\n        }\n        else if (force === false) {\n            this.remove(state);\n        }\n        else {\n            if (this.has(state)) {\n                this.remove(state);\n            }\n            else {\n                this.add(state);\n            }\n        }\n    }\n    merge(newStates) {\n        if (isArray(newStates)) {\n            this.length = 0; // Clear the current states\n            this.push(...newStates);\n        }\n        else if (isString(newStates)) {\n            this.length = 0; // Clear the current states\n            this.push(newStates); // Assert as DollarString\n        }\n        else {\n            for (const state in newStates) {\n                const value = newStates[state];\n                if (value) {\n                    if (!this.has(state)) {\n                        this.push(state);\n                    }\n                }\n                else {\n                    const stateIndexToRemove = this.indexOf(state);\n                    if (stateIndexToRemove >= 0) {\n                        this.splice(stateIndexToRemove, 1);\n                    }\n                }\n            }\n        }\n        return this;\n    }\n    remove(state) {\n        const stateIndexToRemove = this.indexOf(state);\n        if (stateIndexToRemove >= 0) {\n            this.splice(stateIndexToRemove, 1);\n            this.onChange();\n        }\n    }\n}\n//# sourceMappingURL=states.js.map","import { isTextNode, isElementText } from './utils.js';\nexport default function (node) {\n    const children = [];\n    let hasOrder = false;\n    let growSize = 0;\n    for (let i = 0; i < node.children.length; i++) {\n        const c = node.children[i];\n        if (isElementText(c) && c.text && !(c.width || c.height)) {\n            return false;\n        }\n        // Filter empty text nodes which are place holders for <Show> and elements missing dimensions\n        if (isTextNode(c) || c.flexItem === false) {\n            continue;\n        }\n        if (c.flexOrder !== undefined) {\n            hasOrder = true;\n        }\n        if (c.flexGrow !== undefined) {\n            growSize += c.flexGrow;\n        }\n        children.push(c);\n    }\n    if (hasOrder) {\n        children.sort((a, b) => (a.flexOrder || 0) - (b.flexOrder || 0));\n    }\n    else if (node.direction === 'rtl') {\n        children.reverse();\n    }\n    const numChildren = children.length;\n    const direction = node.flexDirection || 'row';\n    const isRow = direction === 'row';\n    const dimension = isRow ? 'width' : 'height';\n    const crossDimension = isRow ? 'height' : 'width';\n    const marginOne = isRow ? 'marginLeft' : 'marginTop';\n    const crossMarginOne = isRow ? 'marginTop' : 'marginLeft';\n    const marginTwo = isRow ? 'marginRight' : 'marginBottom';\n    const crossMarginTwo = isRow ? 'marginBottom' : 'marginRight';\n    const prop = isRow ? 'x' : 'y';\n    const crossProp = isRow ? 'y' : 'x';\n    const containerSize = node[dimension] || 0;\n    let containerCrossSize = node[crossDimension] || 0;\n    const gap = node.gap || 0;\n    const justify = node.justifyContent || 'flexStart';\n    const align = node.alignItems || (node.flexWrap ? 'flexStart' : undefined);\n    let containerUpdated = false;\n    // if there is only 1 child by default it inherits the parent size so we can skip\n    if (growSize && numChildren > 1) {\n        node.flexBoundary = node.flexBoundary || 'fixed'; // cant change size of flex container\n        const flexBasis = children.reduce((prev, c) => prev +\n            (c.flexGrow != null && c.flexGrow >= 0 ? 0 : c[dimension] || 0) +\n            (c[marginOne] || 0) +\n            (c[marginTwo] || 0), 0);\n        const growFactor = (containerSize - flexBasis - gap * (numChildren - 1)) / growSize;\n        if (growFactor >= 0) {\n            for (let i = 0; i < numChildren; i++) {\n                const c = children[i];\n                if (c.flexGrow != null && c.flexGrow >= 0) {\n                    c[dimension] = c.flexGrow * growFactor;\n                }\n            }\n        }\n        else {\n            console.warn('Negative growFactor, flexGrow not applied');\n        }\n    }\n    let itemSize = 0;\n    if (justify === 'center' ||\n        justify === 'spaceBetween' ||\n        justify === 'spaceEvenly') {\n        itemSize = children.reduce((prev, c) => prev + (c[dimension] || 0) + (c[marginOne] || 0) + (c[marginTwo] || 0), 0);\n    }\n    const crossAlignChild = containerCrossSize\n        ? (c, crossStart = 0) => {\n            const alignSelf = c.alignSelf || align;\n            if (!alignSelf) {\n                return;\n            }\n            else if (alignSelf === 'flexStart') {\n                c[crossProp] = crossStart + (c[crossMarginOne] || 0);\n            }\n            else if (alignSelf === 'center') {\n                c[crossProp] =\n                    crossStart +\n                        (containerCrossSize - (c[crossDimension] || 0)) / 2 +\n                        (c[crossMarginOne] || 0);\n            }\n            else if (alignSelf === 'flexEnd') {\n                c[crossProp] =\n                    crossStart +\n                        containerCrossSize -\n                        (c[crossDimension] || 0) -\n                        (c[crossMarginTwo] || 0);\n            }\n        }\n        : (c) => c;\n    if (isRow && node._calcHeight && !node.flexCrossBoundary) {\n        // Assuming all the children have the same height\n        const newHeight = children[0]?.height || node.height;\n        if (newHeight !== node.height) {\n            containerUpdated = true;\n            node.height = containerCrossSize = newHeight;\n        }\n    }\n    if (justify === 'flexStart') {\n        let start = node.padding || 0;\n        if (node.flexWrap === 'wrap') {\n            let crossStart = 0;\n            const crossGap = isRow ? (node.columnGap ?? gap) : (node.rowGap ?? gap);\n            for (let i = 0; i < children.length; i++) {\n                const c = children[i];\n                const nextSize = (c[dimension] || 0) + (c[marginOne] || 0) + (c[marginTwo] || 0);\n                if (start + nextSize > containerSize) {\n                    start = node.padding || 0;\n                    crossStart += containerCrossSize + crossGap;\n                }\n                c[prop] = start + (c[marginOne] || 0);\n                start += nextSize + gap;\n                crossAlignChild(c, crossStart);\n            }\n            node[`preFlex${crossDimension}`] = containerCrossSize;\n            node[crossDimension] = crossStart + containerCrossSize;\n        }\n        else {\n            for (let i = 0; i < children.length; i++) {\n                const c = children[i];\n                c[prop] = start + (c[marginOne] || 0);\n                start +=\n                    (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n                crossAlignChild(c);\n            }\n        }\n        // Update container size\n        if (node.flexBoundary !== 'fixed' && node.flexWrap !== 'wrap') {\n            const calculatedSize = start - gap + (node.padding || 0);\n            if (calculatedSize !== containerSize) {\n                // store the original size for Row & Column\n                node[`preFlex${dimension}`] = containerSize;\n                node[dimension] = calculatedSize;\n                return true;\n            }\n        }\n    }\n    else if (justify === 'flexEnd') {\n        let start = containerSize;\n        for (let i = numChildren - 1; i >= 0; i--) {\n            const c = children[i];\n            c[prop] = start - (c[dimension] || 0) - (c[marginTwo] || 0);\n            start -=\n                (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    else if (justify === 'center') {\n        let start = (containerSize - (itemSize + gap * (numChildren - 1))) / 2;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    else if (justify === 'spaceBetween') {\n        const toPad = (containerSize - itemSize) / (numChildren - 1);\n        let start = 0;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + toPad + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    else if (justify === 'spaceEvenly') {\n        const toPad = (containerSize - itemSize) / (numChildren + 1);\n        let start = toPad;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + toPad + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    // Container was not updated\n    return containerUpdated;\n}\n//# sourceMappingURL=flex.js.map","import { Config, isDev } from './config.js';\nimport { isFunction } from './utils.js';\nconst keyMapEntries = {\n    ArrowLeft: 'Left',\n    ArrowRight: 'Right',\n    ArrowUp: 'Up',\n    ArrowDown: 'Down',\n    Enter: 'Enter',\n    l: 'Last',\n    ' ': 'Space',\n    Backspace: 'Back',\n    Escape: 'Escape',\n};\nconst keyHoldMapEntries = {\n// Enter: 'EnterHold',\n};\nconst flattenKeyMap = (keyMap, targetMap) => {\n    for (const [key, value] of Object.entries(keyMap)) {\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                targetMap[v] = key;\n            });\n        }\n        else if (value === null) {\n            delete targetMap[key];\n        }\n        else {\n            targetMap[value] = key;\n        }\n    }\n};\nlet needFocusDebugStyles = true;\nconst addFocusDebug = (prevFocusPath, newFocusPath) => {\n    if (needFocusDebugStyles) {\n        const style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = `\n      [data-focus=\"3\"] {\n        border: 2px solid rgba(255, 33, 33, 0.2);\n        border-radius: 5px;\n        transition: border-color 0.3s ease;\n      }\n\n      [data-focus=\"2\"] {\n        border: 2px solid rgba(255, 33, 33, 0.4);\n        border-radius: 5px;\n        transition: border-color 0.3s ease;\n      }\n\n      [data-focus=\"1\"] {\n        border: 4px solid rgba(255, 33, 33, 0.9);\n        border-radius: 5px;\n        transition: border-color 0.5s ease;\n      }\n    `;\n        document.head.appendChild(style);\n        needFocusDebugStyles = false;\n    }\n    prevFocusPath.forEach((elm) => {\n        elm.data = {\n            ...elm.data,\n            focus: undefined,\n        };\n    });\n    newFocusPath.forEach((elm, i) => {\n        elm.data = {\n            ...elm.data,\n            focus: i + 1,\n        };\n    });\n};\nlet activeElement;\nexport const setActiveElement = (elm) => {\n    updateFocusPath(elm, activeElement);\n    activeElement = elm;\n    // Callback for libraries to use signals / refs\n    Config.setActiveElement(elm);\n};\nlet focusPath = [];\nconst updateFocusPath = (currentFocusedElm, prevFocusedElm) => {\n    let current = currentFocusedElm;\n    const fp = [];\n    while (current) {\n        if (!current.states.has(Config.focusStateKey) ||\n            current === currentFocusedElm) {\n            current.states.add(Config.focusStateKey);\n            current.onFocus?.call(current, currentFocusedElm, prevFocusedElm);\n            current.onFocusChanged?.call(current, true, currentFocusedElm, prevFocusedElm);\n        }\n        fp.push(current);\n        current = current.parent;\n    }\n    focusPath.forEach((elm) => {\n        if (!fp.includes(elm)) {\n            elm.states.remove(Config.focusStateKey);\n            elm.onBlur?.call(elm, currentFocusedElm, prevFocusedElm);\n            elm.onFocusChanged?.call(elm, false, currentFocusedElm, prevFocusedElm);\n        }\n    });\n    if (Config.focusDebug) {\n        addFocusDebug(focusPath, fp);\n    }\n    focusPath = fp;\n    return fp;\n};\nconst propagateKeyPress = (e, mappedEvent, isHold = false, isUp = false) => {\n    let finalFocusElm;\n    let handlerAvailable;\n    const numItems = focusPath.length;\n    for (let i = numItems - 1; i >= 0; i--) {\n        const elm = focusPath[i];\n        const captureKey = `capture${e.key}`;\n        const captureHandler = elm[captureKey] || elm.captureKey;\n        if (isFunction(captureHandler)) {\n            handlerAvailable = elm;\n            if (captureHandler.call(elm, e, elm, finalFocusElm) === true) {\n                return true;\n            }\n        }\n    }\n    for (let i = 0; i < numItems; i++) {\n        const elm = focusPath[i];\n        if (!finalFocusElm)\n            finalFocusElm = elm;\n        if (mappedEvent) {\n            const eventHandler = isUp\n                ? elm[`on${mappedEvent}Release`]\n                : elm[`on${mappedEvent}`];\n            if (isFunction(eventHandler)) {\n                handlerAvailable = elm;\n                if (eventHandler.call(elm, e, elm, finalFocusElm) === true) {\n                    return true;\n                }\n            }\n        }\n        if (!isUp) {\n            const fallbackHandler = isHold ? elm.onKeyHold : elm.onKeyPress;\n            if (isFunction(fallbackHandler)) {\n                handlerAvailable = elm;\n                if (fallbackHandler.call(elm, e, mappedEvent, elm, finalFocusElm) === true) {\n                    return true;\n                }\n            }\n        }\n    }\n    if (isDev && Config.keyDebug && !isUp) {\n        if (handlerAvailable) {\n            console.log(`Keypress bubbled, key=\"${e.key}\", mappedEvent=${mappedEvent}, isHold=${isHold}, isUp=${isUp}`, handlerAvailable);\n        }\n        else {\n            console.log(`No event handler available for keypress: key=\"${e.key}\", mappedEvent=${mappedEvent}, isHold=${isHold}, isUp=${isUp}`);\n        }\n    }\n    return false;\n};\nconst DEFAULT_KEY_HOLD_THRESHOLD = 500; // ms\nconst keyHoldTimeouts = {};\nconst handleKeyEvents = (delay, keydown, keyup) => {\n    if (keydown) {\n        const key = keydown.key || keydown.keyCode;\n        const mappedKeyHoldEvent = keyHoldMapEntries[keydown.key] || keyHoldMapEntries[keydown.keyCode];\n        const mappedKeyEvent = keyMapEntries[keydown.key] || keyMapEntries[keydown.keyCode];\n        if (mappedKeyHoldEvent) {\n            if (!keyHoldTimeouts[key]) {\n                keyHoldTimeouts[key] = window.setTimeout(() => {\n                    keyHoldTimeouts[key] = true;\n                    propagateKeyPress(keydown, mappedKeyHoldEvent, true);\n                }, delay);\n            }\n            return;\n        }\n        propagateKeyPress(keydown, mappedKeyEvent, false);\n    }\n    else if (keyup) {\n        const key = keyup.key || keyup.keyCode;\n        const mappedKeyEvent = keyMapEntries[keyup.key] || keyMapEntries[keyup.keyCode];\n        if (keyHoldTimeouts[key] === true) {\n            delete keyHoldTimeouts[key];\n        }\n        else if (keyHoldTimeouts[key]) {\n            clearTimeout(keyHoldTimeouts[key]);\n            delete keyHoldTimeouts[key];\n            // trigger key down event when hold didn't finish\n            propagateKeyPress(keyup, mappedKeyEvent, false);\n        }\n        propagateKeyPress(keyup, mappedKeyEvent, false, true);\n    }\n};\nexport const useFocusManager = ({ userKeyMap, keyHoldOptions, ownerContext = (cb) => {\n    cb();\n}, } = {}) => {\n    if (userKeyMap) {\n        flattenKeyMap(userKeyMap, keyMapEntries);\n    }\n    if (keyHoldOptions?.userKeyHoldMap) {\n        flattenKeyMap(keyHoldOptions.userKeyHoldMap, keyHoldMapEntries);\n    }\n    const delay = keyHoldOptions?.holdThreshold || DEFAULT_KEY_HOLD_THRESHOLD;\n    const runKeyEvent = handleKeyEvents.bind(null, delay);\n    // Owner context is for frameworks that need effects\n    const keyPressHandler = (event) => ownerContext(() => {\n        runKeyEvent(event, undefined);\n    });\n    const keyUpHandler = (event) => ownerContext(() => {\n        runKeyEvent(undefined, event);\n    });\n    document.addEventListener('keyup', keyUpHandler);\n    document.addEventListener('keydown', keyPressHandler);\n    return {\n        cleanup: () => {\n            document.removeEventListener('keydown', keyPressHandler);\n            document.removeEventListener('keyup', keyUpHandler);\n            for (const [_, timeout] of Object.entries(keyHoldTimeouts)) {\n                if (timeout && timeout !== true)\n                    clearTimeout(timeout);\n            }\n        },\n        focusPath: () => focusPath,\n    };\n};\n//# sourceMappingURL=focusManager.js.map","import { renderer } from './lightningInit.js';\nimport States from './states.js';\nimport calculateFlex from './flex.js';\nimport { log, isArray, isNumber, isFunc, keyExists, isINode, isElementNode, isElementText, logRenderTree, isFunction, } from './utils.js';\nimport { Config, isDev, SHADERS_ENABLED } from './config.js';\nimport { assertTruthy } from '@lightningjs/renderer/utils';\nimport { NodeType } from './nodeTypes.js';\nimport { setActiveElement } from './focusManager.js';\nconst layoutQueue = new Set();\nfunction runLayout() {\n    const queue = [...layoutQueue];\n    layoutQueue.clear();\n    for (let i = queue.length - 1; i >= 0; i--) {\n        const node = queue[i];\n        node.updateLayout();\n    }\n}\nfunction convertEffectsToShader(node, styleEffects) {\n    const effects = [];\n    for (const type in styleEffects) {\n        // @ts-ignore getting the right type info is hard\n        effects.push(renderer.createEffect(type, styleEffects[type], type));\n    }\n    return renderer.createShader('DynamicShader', { effects });\n}\nfunction updateShaderEffects(node, styleEffects) {\n    const shader = node.lng.shader;\n    for (const type in styleEffects) {\n        // @ts-ignore getting the right type info is hard\n        Object.assign(shader.props[type], styleEffects[type]);\n    }\n}\nfunction borderAccessor(direction = '') {\n    return {\n        set(value) {\n            // Format: width || { width, color }\n            if (isNumber(value)) {\n                value = { width: value, color: 0x000000ff };\n            }\n            this.effects = this.effects\n                ? {\n                    ...(this.effects || {}),\n                    ...{ [`border${direction}`]: value },\n                }\n                : { [`border${direction}`]: value };\n        },\n        get() {\n            return this.effects?.[`border${direction}`];\n        },\n    };\n}\nconst LightningRendererNumberProps = [\n    'alpha',\n    'color',\n    'colorTop',\n    'colorRight',\n    'colorLeft',\n    'colorBottom',\n    'colorTl',\n    'colorTr',\n    'colorBl',\n    'colorBr',\n    'height',\n    'fontSize',\n    'lineHeight',\n    'mount',\n    'mountX',\n    'mountY',\n    'pivot',\n    'pivotX',\n    'pivotY',\n    'rotation',\n    'scale',\n    'scaleX',\n    'scaleY',\n    'width',\n    'worldX',\n    'worldY',\n    'x',\n    'y',\n    'zIndex',\n    'zIndexLocked',\n];\nconst LightningRendererNonAnimatingProps = [\n    'absX',\n    'absY',\n    'autosize',\n    'clipping',\n    'contain',\n    'data',\n    'fontFamily',\n    'fontStretch',\n    'fontStyle',\n    'fontWeight',\n    'imageType',\n    'letterSpacing',\n    'maxLines',\n    'offsetY',\n    'overflowSuffix',\n    'preventCleanup',\n    'rtt',\n    'scrollable',\n    'scrollY',\n    'srcHeight',\n    'srcWidth',\n    'srcX',\n    'srcY',\n    'strictBounds',\n    'text',\n    'textAlign',\n    'textBaseline',\n    'textOverflow',\n    'texture',\n    'textureOptions',\n    'verticalAlign',\n    'wordWrap',\n];\nexport class ElementNode extends Object {\n    constructor(name) {\n        super();\n        this._type = name === 'text' ? NodeType.TextNode : NodeType.Element;\n        this.rendered = false;\n        this.lng = {};\n        this.children = [];\n    }\n    get effects() {\n        return this._effects;\n    }\n    set effects(v) {\n        this._effects = v;\n        if (SHADERS_ENABLED && this.rendered) {\n            this.lng.shader = convertEffectsToShader(this, v);\n            // if (this.lng.shader) {\n            //   updateShaderEffects(this, v);\n            // } else {\n            // }\n        }\n    }\n    set id(id) {\n        this._id = id;\n        if (Config.rendererOptions?.inspector) {\n            this.data = { ...this.data, testId: id };\n        }\n    }\n    get id() {\n        return this._id;\n    }\n    get parent() {\n        return this._parent;\n    }\n    set parent(p) {\n        this._parent = p;\n        if (this.rendered) {\n            this.lng.parent = p?.lng ?? null;\n        }\n    }\n    insertChild(node, beforeNode) {\n        node.parent = this;\n        if (beforeNode) {\n            // SolidJS can move nodes around in the children array.\n            // We need to insert following DOM insertBefore which moves elements.\n            this.removeChild(node);\n            const index = this.children.indexOf(beforeNode);\n            if (index >= 0) {\n                this.children.splice(index, 0, node);\n                return;\n            }\n        }\n        this.children.push(node);\n    }\n    removeChild(node) {\n        const nodeIndexToRemove = this.children.indexOf(node);\n        if (nodeIndexToRemove >= 0) {\n            this.children.splice(nodeIndexToRemove, 1);\n        }\n    }\n    get selectedNode() {\n        const selectedIndex = this.selected || 0;\n        for (let i = selectedIndex; i < this.children.length; i++) {\n            const element = this.children[i];\n            if (isElementNode(element)) {\n                this.selected = i;\n                return element;\n            }\n        }\n        return undefined;\n    }\n    set shader(shaderProps) {\n        let shProps = shaderProps;\n        if (isArray(shaderProps)) {\n            shProps = renderer.createShader(...shaderProps);\n        }\n        this.lng.shader = shProps;\n    }\n    _sendToLightningAnimatable(name, value) {\n        if (this.transition &&\n            this.rendered &&\n            Config.animationsEnabled &&\n            (this.transition === true || this.transition[name])) {\n            const animationSettings = this.transition === true || this.transition[name] === true\n                ? undefined\n                : this.transition[name];\n            const animationController = this.animate({ [name]: value }, animationSettings);\n            if (this.onAnimation) {\n                const animationEvents = Object.keys(this.onAnimation);\n                for (const event of animationEvents) {\n                    const handler = this.onAnimation[event];\n                    animationController.on(event, (controller, props) => {\n                        handler.call(this, controller, name, value, props);\n                    });\n                }\n            }\n            return animationController.start();\n        }\n        this.lng[name] = value;\n    }\n    animate(props, animationSettings) {\n        assertTruthy(this.rendered, 'Node must be rendered before animating');\n        return this.lng.animate(props, animationSettings || this.animationSettings || {});\n    }\n    chain(props, animationSettings) {\n        if (this._animationRunning) {\n            this._animationQueue = [];\n            this._animationRunning = false;\n        }\n        if (animationSettings) {\n            this._animationQueueSettings = animationSettings;\n        }\n        else if (!this._animationQueueSettings) {\n            this._animationQueueSettings =\n                animationSettings || this.animationSettings;\n        }\n        animationSettings = animationSettings || this._animationQueueSettings;\n        this._animationQueue = this._animationQueue || [];\n        this._animationQueue.push({ props, animationSettings });\n        return this;\n    }\n    async start() {\n        let animation = this._animationQueue.shift();\n        while (animation) {\n            this._animationRunning = true;\n            await this.animate(animation.props, animation.animationSettings)\n                .start()\n                .waitUntilStopped();\n            animation = this._animationQueue.shift();\n        }\n        this._animationRunning = false;\n        this._animationQueueSettings = undefined;\n    }\n    emit(event, ...args) {\n        let current = this;\n        const capitalizedEvent = `on${event.charAt(0).toUpperCase()}${event.slice(1)}`;\n        while (current) {\n            const handler = current[capitalizedEvent];\n            if (isFunction(handler)) {\n                if (handler.call(current, this, ...args) === true) {\n                    return true;\n                }\n            }\n            current = current.parent;\n        }\n        return false;\n    }\n    setFocus() {\n        if (this.rendered) {\n            // can be 0\n            if (this.forwardFocus !== undefined) {\n                if (isFunc(this.forwardFocus)) {\n                    if (this.forwardFocus.call(this, this) !== false) {\n                        return;\n                    }\n                }\n                else {\n                    const focusedIndex = typeof this.forwardFocus === 'number' ? this.forwardFocus : null;\n                    const nodes = this.children;\n                    if (focusedIndex !== null && focusedIndex < nodes.length) {\n                        const child = nodes[focusedIndex];\n                        isElementNode(child) && child.setFocus();\n                        return;\n                    }\n                }\n            }\n            // Delay setting focus so children can render (useful for Row + Column)\n            queueMicrotask(() => setActiveElement(this));\n        }\n        else {\n            this._autofocus = true;\n        }\n    }\n    _layoutOnLoad() {\n        this.lng.on('loaded', () => {\n            this.parent.updateLayout();\n        });\n    }\n    getText() {\n        let result = '';\n        for (let i = 0; i < this.children.length; i++) {\n            result += this.children[i].text;\n        }\n        return result;\n    }\n    destroy() {\n        if (this.onDestroy) {\n            const destroyPromise = this.onDestroy(this);\n            // If onDestroy returns a promise, wait for it to resolve before destroying\n            // Useful with animations waitUntilStopped method which returns promise\n            if (destroyPromise instanceof Promise) {\n                destroyPromise.then(() => this._destroy());\n            }\n            else {\n                this._destroy();\n            }\n        }\n        else {\n            this._destroy();\n        }\n    }\n    _destroy() {\n        if (this._queueDelete && isINode(this.lng)) {\n            this.lng.destroy();\n            if (this.parent?.requiresLayout()) {\n                this.parent.updateLayout();\n            }\n        }\n    }\n    set style(style) {\n        if (isDev && this._style) {\n            // Avoid processing style changes again\n            console.warn('Style already set: https://lightning-tv.github.io/solid/#/essentials/styling?id=style-patterns-to-avoid');\n        }\n        if (Config.lockStyles && this._style) {\n            return;\n        }\n        if (!style) {\n            return;\n        }\n        this._style = style;\n        // Keys set in JSX are more important\n        for (const key in this._style) {\n            // be careful of 0 values\n            if (this[key] === undefined) {\n                this[key] = this._style[key];\n            }\n        }\n    }\n    get style() {\n        return this._style;\n    }\n    get hasChildren() {\n        return this.children.length > 0;\n    }\n    set src(src) {\n        if (typeof src === 'string') {\n            this.lng.src = src;\n            if (!this.color && this.rendered) {\n                this.color = 0xffffffff;\n            }\n        }\n        else {\n            this.color = 0x00000000;\n        }\n    }\n    get src() {\n        return this.lng.src;\n    }\n    getChildById(id) {\n        return this.children.find((c) => c.id === id);\n    }\n    searchChildrenById(id) {\n        // traverse all the childrens children\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children[i];\n            if (isElementNode(child)) {\n                if (child.id === id) {\n                    return child;\n                }\n                const found = child.searchChildrenById(id);\n                if (found) {\n                    return found;\n                }\n            }\n        }\n    }\n    set states(states) {\n        this._states = this._states\n            ? this._states.merge(states)\n            : new States(this._stateChanged.bind(this), states);\n        if (this.rendered) {\n            this._stateChanged();\n        }\n    }\n    get states() {\n        this._states = this._states || new States(this._stateChanged.bind(this));\n        return this._states;\n    }\n    get animationSettings() {\n        return this._animationSettings || Config.animationSettings;\n    }\n    set animationSettings(animationSettings) {\n        this._animationSettings = animationSettings;\n    }\n    set hidden(val) {\n        this.alpha = val ? 0 : 1;\n    }\n    get hidden() {\n        return this.alpha === 0;\n    }\n    /**\n     * Sets the autofocus state of the element.\n     * When set to a truthy value, the element will automatically gain focus.\n     * You can also set it to a signal to recalculate\n     *\n     * @param val - A value to determine if the element should autofocus.\n     *              A truthy value enables autofocus, otherwise disables it.\n     */\n    set autofocus(val) {\n        this._autofocus = val;\n        // Delay setting focus so children can render (useful for Row + Column)\n        // which now uses forwardFocus\n        val && queueMicrotask(() => this.setFocus());\n    }\n    get autofocus() {\n        return this._autofocus;\n    }\n    requiresLayout() {\n        return this.display === 'flex' || this.onLayout;\n    }\n    set updateLayoutOn(v) {\n        this.updateLayout();\n    }\n    get updateLayoutOn() {\n        return null;\n    }\n    updateLayout() {\n        if (this.hasChildren) {\n            log('Layout: ', this);\n            if (this.display === 'flex') {\n                if (calculateFlex(this)) {\n                    this.parent?.updateLayout();\n                }\n            }\n            if (isFunc(this.onLayout) && this.onLayout.call(this, this)) {\n                this.parent?.updateLayout();\n            }\n        }\n    }\n    _stateChanged() {\n        log('State Changed: ', this, this.states);\n        if (this.forwardStates) {\n            // apply states to children first\n            const states = this.states.slice();\n            this.children.forEach((c) => {\n                c.states = states;\n            });\n        }\n        const states = this.states;\n        if (this._undoStyles || keyExists(this, states)) {\n            let stylesToUndo;\n            if (this._undoStyles && this._undoStyles.length) {\n                stylesToUndo = {};\n                this._undoStyles.forEach((styleKey) => {\n                    if (isDev) {\n                        if (this.style[styleKey] === undefined) {\n                            console.warn('fallback style key not found: ', styleKey);\n                        }\n                    }\n                    stylesToUndo[styleKey] = this.style[styleKey];\n                });\n            }\n            const numStates = states.length;\n            if (numStates === 0) {\n                Object.assign(this, stylesToUndo);\n                this._undoStyles = [];\n                return;\n            }\n            let newStyles;\n            if (numStates === 1) {\n                newStyles = this[states[0]];\n                newStyles = stylesToUndo\n                    ? { ...stylesToUndo, ...newStyles }\n                    : newStyles;\n            }\n            else {\n                newStyles = states.reduce((acc, state) => {\n                    const styles = this[state];\n                    return styles ? { ...acc, ...styles } : acc;\n                }, stylesToUndo || {});\n            }\n            if (newStyles) {\n                this._undoStyles = Object.keys(newStyles);\n                // Apply transition first\n                if (newStyles.transition !== undefined) {\n                    this.transition = newStyles.transition;\n                }\n                // Apply the styles\n                Object.assign(this, newStyles);\n            }\n            else {\n                this._undoStyles = [];\n            }\n        }\n    }\n    render(topNode) {\n        // Elements are inserted from the inside out, then rendered from the outside in.\n        // Render starts when an element is insertered with a parent that is already renderered.\n        const node = this;\n        const parent = this.parent;\n        if (!parent) {\n            console.warn('Parent not set - no node created for: ', this);\n            return;\n        }\n        if (!parent.rendered) {\n            console.warn('Parent not rendered yet: ', this);\n            return;\n        }\n        if (parent.requiresLayout()) {\n            layoutQueue.add(parent);\n        }\n        if (this.rendered) {\n            // This happens if Array of items is reordered to reuse elements.\n            // We return after layout is queued so the change can trigger layout updates.\n            return;\n        }\n        if (this._states) {\n            this._stateChanged();\n        }\n        const props = node.lng;\n        props.x = props.x || 0;\n        props.y = props.y || 0;\n        props.parent = parent.lng;\n        if (this.right || this.right === 0) {\n            props.x = (parent.width || 0) - this.right;\n            props.mountX = 1;\n        }\n        if (this.bottom || this.bottom === 0) {\n            props.y = (parent.height || 0) - this.bottom;\n            props.mountY = 1;\n        }\n        if (this.center) {\n            this.centerX = this.centerY = true;\n        }\n        if (this.centerX) {\n            props.x += (parent.width || 0) / 2;\n            props.mountX = 0.5;\n        }\n        if (this.centerY) {\n            props.y += (parent.height || 0) / 2;\n            props.mountY = 0.5;\n        }\n        if (isElementText(node)) {\n            const textProps = props;\n            if (Config.fontSettings) {\n                for (const key in Config.fontSettings) {\n                    if (textProps[key] === undefined) {\n                        textProps[key] = Config.fontSettings[key];\n                    }\n                }\n            }\n            textProps.text = textProps.text || node.getText();\n            if (textProps.textAlign && !textProps.contain) {\n                console.warn('Text align requires contain: ', node.getText());\n            }\n            // contain is either width or both\n            if (textProps.contain) {\n                if (!textProps.width) {\n                    textProps.width =\n                        (parent.width || 0) - textProps.x - (textProps.marginRight || 0);\n                }\n                if (textProps.contain === 'both' &&\n                    !textProps.height &&\n                    !textProps.maxLines) {\n                    textProps.height =\n                        (parent.height || 0) - textProps.y - (textProps.marginBottom || 0);\n                }\n                else if (textProps.maxLines === 1) {\n                    textProps.height = (textProps.height ||\n                        textProps.lineHeight ||\n                        textProps.fontSize);\n                }\n            }\n            // Can you put effects on Text nodes? Need to confirm...\n            if (SHADERS_ENABLED && node._effects) {\n                props.shader = convertEffectsToShader(node, node._effects);\n            }\n            log('Rendering: ', this, props);\n            node.lng = renderer.createTextNode(props);\n            if (parent.requiresLayout()) {\n                if (!props.width || !props.height) {\n                    node._layoutOnLoad();\n                }\n            }\n        }\n        else {\n            // If its not an image or texture apply some defaults\n            if (!props.texture) {\n                // Set width and height to parent less offset\n                if (isNaN(props.width)) {\n                    props.width = (parent.width || 0) - props.x;\n                    node._calcWidth = true;\n                }\n                if (isNaN(props.height)) {\n                    props.height = (parent.height || 0) - props.y;\n                    node._calcHeight = true;\n                }\n                if (props.rtt && !props.color) {\n                    props.color = 0xffffffff;\n                }\n                if (!props.color && !props.src) {\n                    // Default color to transparent - If you later set a src, you'll need\n                    // to set color '#ffffffff'\n                    props.color = 0x00000000;\n                }\n            }\n            if (SHADERS_ENABLED && node._effects) {\n                props.shader = convertEffectsToShader(node, node._effects);\n            }\n            log('Rendering: ', this, props);\n            node.lng = renderer.createNode(props);\n        }\n        node.rendered = true;\n        if (isDev) {\n            // Store props so we can recreate raw renderer code\n            node._rendererProps = props;\n        }\n        if (node.autosize && parent.requiresLayout()) {\n            node._layoutOnLoad();\n        }\n        isFunc(this.onCreate) && this.onCreate.call(this, node);\n        if (node.onEvent) {\n            for (const [name, handler] of Object.entries(node.onEvent)) {\n                node.lng.on(name, (_inode, data) => handler.call(node, node, data));\n            }\n        }\n        // L3 Inspector adds div to the lng object\n        //@ts-expect-error - div is not in the typings\n        if (node.lng?.div) {\n            //@ts-expect-error - div is not in the typings\n            node.lng.div.element = node;\n        }\n        if (node._type === NodeType.Element) {\n            // only element nodes will have children that need rendering\n            const numChildren = node.children.length;\n            for (let i = 0; i < numChildren; i++) {\n                const c = node.children[i];\n                assertTruthy(c, 'Child is undefined');\n                if (isElementNode(c)) {\n                    c.render();\n                }\n            }\n        }\n        if (topNode) {\n            //Do one pass of layout, then another with Text completed\n            runLayout();\n        }\n        node._autofocus && node.setFocus();\n    }\n}\nfor (const key of LightningRendererNumberProps) {\n    Object.defineProperty(ElementNode.prototype, key, {\n        get() {\n            return this.lng[key];\n        },\n        set(v) {\n            this._sendToLightningAnimatable(key, v);\n        },\n    });\n}\nfor (const key of LightningRendererNonAnimatingProps) {\n    Object.defineProperty(ElementNode.prototype, key, {\n        get() {\n            return this.lng[key];\n        },\n        set(v) {\n            this.lng[key] = v;\n        },\n    });\n}\n// Add Border Helpers\nfunction createEffectAccessor(key) {\n    return {\n        set(value) {\n            this.effects = this.effects\n                ? {\n                    ...this.effects,\n                    [key]: value,\n                }\n                : { [key]: value };\n        },\n        get() {\n            return this.effects?.[key];\n        },\n    };\n}\nif (isDev) {\n    ElementNode.prototype.lngTree = function () {\n        return logRenderTree(this);\n    };\n}\nObject.defineProperties(ElementNode.prototype, {\n    border: borderAccessor(),\n    borderLeft: borderAccessor('Left'),\n    borderRight: borderAccessor('Right'),\n    borderTop: borderAccessor('Top'),\n    borderBottom: borderAccessor('Bottom'),\n    linearGradient: createEffectAccessor('linearGradient'),\n    radialGradient: createEffectAccessor('radialGradient'),\n    radialProgress: createEffectAccessor('radialProgressGradient'),\n    borderRadius: {\n        set(radius) {\n            this.effects = this.effects\n                ? {\n                    ...this.effects,\n                    radius: { radius },\n                }\n                : { radius: { radius } };\n        },\n        get() {\n            return this.effects?.radius?.radius;\n        },\n    },\n});\n//# sourceMappingURL=elementNode.js.map","let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = (n + m) >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;\n      else if (cmp < 0) n = k - 1;\n      else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst IS_DEV = false;\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst SUPPORTS_PROXY = typeof Proxy === \"function\";\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned\n      ? UNOWNED\n      : {\n          owned: null,\n          cleanups: null,\n          context: current ? current.context : null,\n          owner: current\n        },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);\n      else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(\n      () => {\n        fn ? fn() : untrack(onInvalidate);\n        fn = undefined;\n      },\n      undefined,\n      false,\n      0\n    ),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (typeof pFetcher === \"function\") {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  } else {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = \"initialValue\" in options,\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;\n    else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() =>\n          options.onHydrated(key, {\n            value: v\n          })\n        );\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);\n          else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p =\n      initP !== NO_INIT\n        ? initP\n        : untrack(() =>\n            fetcher(lookup, {\n              value: value(),\n              refetching\n            })\n          );\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);\n      else loadEnd(pr, undefined, castError(p.value), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => (scheduled = false));\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(\n      v => loadEnd(p, v, undefined, lookup),\n      e => loadEnd(p, undefined, castError(e), lookup)\n    );\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));\n  else load(false);\n  return [\n    read,\n    {\n      refetch: load,\n      mutate: setValue\n    }\n  ];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(\n    () => {\n      if (!t || !t.fn)\n        t = requestCallback(\n          () => setDeferred(() => node.value),\n          timeout !== undefined\n            ? {\n                timeout\n              }\n            : undefined\n        );\n      return source();\n    },\n    undefined,\n    true\n  );\n  const [deferred, setDeferred] = createSignal(\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    options\n  );\n  updateComputation(node);\n  setDeferred(() =>\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n  );\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(\n    p => {\n      const v = source();\n      for (const [key, val] of subs.entries())\n        if (fn(key, v) !== fn(key, p)) {\n          for (const c of val.values()) {\n            c.state = STALE;\n            if (c.pure) Updates.push(c);\n            else Effects.push(c);\n          }\n        }\n      return v;\n    },\n    undefined,\n    true,\n    STALE\n  );\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if ((l = subs.get(key))) l.add(listener);\n      else subs.set(key, (l = new Set([listener])));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(\n      key,\n      Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n    );\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null);\n  else if (Owner.cleanups === null) Owner.cleanups = [fn];\n  else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t =\n        Transition ||\n        (Transition = {\n          sources: new Set(),\n          effects: [],\n          promises: new Set(),\n          disposed: new Set(),\n          queue: new Set(),\n          running: true\n        });\n      t.done || (t.done = new Promise(res => (t.resolve = res)));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/ createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined\n    ? value\n    : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const { factory: oldFactory, untrack: oldUntrack } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current =\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);\n            else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;\n          else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (IS_DEV);\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(\n    node,\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    time\n  );\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null);\n  else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];\n      else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];\n      else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;\n  else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);\n    else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);\n    else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;\n  else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))\n          runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;\n      else o.state = PENDING;\n      if (o.pure) Updates.push(o);\n      else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (node.tOwned) {\n    for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n    delete node.tOwned;\n  }\n  if (Transition && Transition.running && node.pure) {\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;\n  else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, (owner && owner.owner) || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects)\n    Effects.push({\n      fn() {\n        runErrors(error, fns, owner);\n      },\n      state: STALE\n    });\n  else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(\n      () =>\n        (res = untrack(() => {\n          Owner.context = {\n            ...Owner.context,\n            [id]: props.value\n          };\n          return children(() => props.children);\n        })),\n      undefined\n    );\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null);\n  else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler =\n        typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer, initalValue = undefined) {\n  const [s, set] = createSignal(initalValue, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => (\"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub()));\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (\n          start = 0, end = Math.min(len, newLen);\n          start < end && items[start] === newItems[start];\n          start++\n        );\n        for (\n          end = len - 1, newEnd = newLen - 1;\n          end >= start && newEnd >= start && items[end] === newItems[newEnd];\n          end--, newEnd--\n        ) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, (len = newLen));\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return (mapped = mapped.slice(0, len));\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || (!!s && $PROXY in s);\n    sources[i] = typeof s === \"function\" ? ((proxy = true), createMemo(s)) : s;\n  }\n  if (SUPPORTS_PROXY && proxy) {\n    return new Proxy(\n      {\n        get(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            const v = resolveSource(sources[i])[property];\n            if (v !== undefined) return v;\n          }\n        },\n        has(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            if (property in resolveSource(sources[i])) return true;\n          }\n          return false;\n        },\n        keys() {\n          const keys = [];\n          for (let i = 0; i < sources.length; i++)\n            keys.push(...Object.keys(resolveSource(sources[i])));\n          return [...new Set(keys)];\n        }\n      },\n      propTraps\n    );\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get\n          ? {\n              enumerable: true,\n              configurable: true,\n              get: resolveSources.bind((sourcesMap[key] = [desc.get.bind(source)]))\n            }\n          : desc.value !== undefined\n          ? desc\n          : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));\n          else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);\n    else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if (SUPPORTS_PROXY && $PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy(\n        {\n          get(property) {\n            return k.includes(property) ? props[property] : undefined;\n          },\n          has(property) {\n            return k.includes(property) && property in props;\n          },\n          keys() {\n            return k.filter(property => property in props);\n          }\n        },\n        propTraps\n      );\n    });\n    res.push(\n      new Proxy(\n        {\n          get(property) {\n            return blocked.has(property) ? undefined : props[property];\n          },\n          has(property) {\n            return blocked.has(property) ? false : property in props;\n          },\n          keys() {\n            return Object.keys(props).filter(k => !blocked.has(k));\n          }\n        },\n        propTraps\n      )\n    );\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc =\n      !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc\n          ? (objects[objectIndex][propName] = desc.value)\n          : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc\n        ? (otherObject[propName] = desc.value)\n        : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() =>\n      (Comp = comp())\n        ? untrack(() => {\n            if (IS_DEV);\n            if (!ctx || sharedConfig.done) return Comp(props);\n            const c = sharedConfig.context;\n            setHydrateContext(ctx);\n            const r = Comp(props);\n            setHydrateContext(c);\n            return r;\n          })\n        : \"\"\n    );\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => (comp = () => mod.default)), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const conditionValue = createMemo(() => props.when, undefined, undefined);\n  const condition = keyed\n    ? conditionValue\n    : createMemo(conditionValue, undefined, {\n        equals: (a, b) => !a === !b\n      });\n  return createMemo(\n    () => {\n      const c = condition();\n      if (c) {\n        const child = props.children;\n        const fn = typeof child === \"function\" && child.length > 0;\n        return fn\n          ? untrack(() =>\n              child(\n                keyed\n                  ? c\n                  : () => {\n                      if (!untrack(condition)) throw narrowedError(\"Show\");\n                      return conditionValue();\n                    }\n              )\n            )\n          : child;\n      }\n      return props.fallback;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Switch(props) {\n  const chs = children(() => props.children);\n  const switchFunc = createMemo(() => {\n    const ch = chs();\n    const mps = Array.isArray(ch) ? ch : [ch];\n    let func = () => undefined;\n    for (let i = 0; i < mps.length; i++) {\n      const index = i;\n      const mp = mps[i];\n      const prevFunc = func;\n      const conditionValue = createMemo(\n        () => (prevFunc() ? undefined : mp.when),\n        undefined,\n        undefined\n      );\n      const condition = mp.keyed\n        ? conditionValue\n        : createMemo(conditionValue, undefined, {\n            equals: (a, b) => !a === !b\n          });\n      func = () => prevFunc() || (condition() ? [index, conditionValue, mp] : undefined);\n    }\n    return func;\n  });\n  return createMemo(\n    () => {\n      const sel = switchFunc()();\n      if (!sel) return props.fallback;\n      const [index, conditionValue, mp] = sel;\n      const child = mp.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn\n        ? untrack(() =>\n            child(\n              mp.keyed\n                ? conditionValue()\n                : () => {\n                    if (untrack(switchFunc)()?.[0] !== index) throw narrowedError(\"Match\");\n                    return conditionValue();\n                  }\n            )\n          )\n        : child;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load)\n    err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(\n    () => {\n      let e;\n      if ((e = errored())) {\n        const f = props.fallback;\n        return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n      }\n      return catchError(() => props.children, setErrored);\n    },\n    undefined,\n    undefined\n  );\n}\n\nconst suspenseListEquals = (a, b) =>\n  a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */ createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(\n    prev => {\n      const reveal = props.revealOrder,\n        tail = props.tail,\n        { showContent = true, showFallback = true } = show ? show() : {},\n        reg = registry(),\n        reverse = reveal === \"backwards\";\n      if (reveal === \"together\") {\n        const all = reg.every(inFallback => !inFallback());\n        const res = reg.map(() => ({\n          showContent: all && showContent,\n          showFallback\n        }));\n        res.inFallback = !all;\n        return res;\n      }\n      let stop = false;\n      let inFallback = prev.inFallback;\n      const res = [];\n      for (let i = 0, len = reg.length; i < len; i++) {\n        const n = reverse ? len - i - 1 : i,\n          s = reg[n]();\n        if (!stop && !s) {\n          res[n] = {\n            showContent,\n            showFallback\n          };\n        } else {\n          const next = !stop;\n          if (next) inFallback = true;\n          res[n] = {\n            showContent: next,\n            showFallback: !tail || (next && tail === \"collapsed\") ? showFallback : false\n          };\n          stop = true;\n        }\n      }\n      if (!stop) inFallback = false;\n      res.inFallback = inFallback;\n      return res;\n    },\n    {\n      inFallback: false\n    }\n  );\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;\n      else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(\n        () => {\n          if (sharedConfig.done) return set();\n          sharedConfig.gather(key);\n          setHydrateContext(ctx);\n          set();\n          setHydrateContext();\n        },\n        err => {\n          error = err;\n          set();\n        }\n      );\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return (flicker = undefined);\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            { showContent = true, showFallback = true } = show ? show() : {};\n          if ((!inFallback || (p && p !== \"$$f\")) && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport {\n  $DEVCOMP,\n  $PROXY,\n  $TRACK,\n  DEV,\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  batch,\n  cancelCallback,\n  catchError,\n  children,\n  createComponent,\n  createComputed,\n  createContext,\n  createDeferred,\n  createEffect,\n  createMemo,\n  createReaction,\n  createRenderEffect,\n  createResource,\n  createRoot,\n  createSelector,\n  createSignal,\n  createUniqueId,\n  enableExternalSource,\n  enableHydration,\n  enableScheduling,\n  equalFn,\n  from,\n  getListener,\n  getOwner,\n  indexArray,\n  lazy,\n  mapArray,\n  mergeProps,\n  observable,\n  on,\n  onCleanup,\n  onError,\n  onMount,\n  requestCallback,\n  resetErrorBoundaries,\n  runWithOwner,\n  sharedConfig,\n  splitProps,\n  startTransition,\n  untrack,\n  useContext,\n  useTransition\n};\n","import { createSignal } from 'solid-js';\nexport const [activeElement, setActiveElement] = createSignal(undefined);\n//# sourceMappingURL=activeElement.js.map","import { isInteger } from '@lightningtv/core';\nimport { createMemo } from 'solid-js';\n/**\n * Converts a color string to a color number value.\n */\nexport function hexColor(color = '') {\n    if (isInteger(color)) {\n        return color;\n    }\n    if (typeof color === 'string') {\n        // Renderer expects RGBA values\n        if (color.startsWith('#')) {\n            return Number(color.replace('#', '0x') + (color.length === 7 ? 'ff' : ''));\n        }\n        if (color.startsWith('0x')) {\n            return Number(color);\n        }\n        return Number('0x' + (color.length === 6 ? color + 'ff' : color));\n    }\n    return 0x00000000;\n}\nexport function combineStyles(style1, style2) {\n    if (!style1) {\n        return style2;\n    }\n    if (!style2) {\n        return style1;\n    }\n    return {\n        ...style2,\n        ...style1,\n    };\n}\nexport function combineStylesMemo(style1, style2) {\n    if (!style1) {\n        return () => style2;\n    }\n    if (!style2) {\n        return () => style1;\n    }\n    return createMemo(() => ({\n        ...style2,\n        ...style1,\n    }));\n}\n//# sourceMappingURL=utils.js.map","import {\n  createRoot,\n  createRenderEffect,\n  mergeProps,\n  createMemo,\n  createComponent,\n  untrack\n} from \"solid-js\";\n\nfunction createRenderer$1({\n  createElement,\n  createTextNode,\n  isTextNode,\n  replaceText,\n  insertNode,\n  removeNode,\n  setProperty,\n  getParentNode,\n  getFirstChild,\n  getNextSibling\n}) {\n  function insert(parent, accessor, marker, initial) {\n    if (marker !== undefined && !initial) initial = [];\n    if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n    createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n  }\n  function insertExpression(parent, value, current, marker, unwrapArray) {\n    while (typeof current === \"function\") current = current();\n    if (value === current) return current;\n    const t = typeof value,\n      multi = marker !== undefined;\n    if (t === \"string\" || t === \"number\") {\n      if (t === \"number\") value = value.toString();\n      if (multi) {\n        let node = current[0];\n        if (node && isTextNode(node)) {\n          replaceText(node, value);\n        } else node = createTextNode(value);\n        current = cleanChildren(parent, current, marker, node);\n      } else {\n        if (current !== \"\" && typeof current === \"string\") {\n          replaceText(getFirstChild(parent), (current = value));\n        } else {\n          cleanChildren(parent, current, marker, createTextNode(value));\n          current = value;\n        }\n      }\n    } else if (value == null || t === \"boolean\") {\n      current = cleanChildren(parent, current, marker);\n    } else if (t === \"function\") {\n      createRenderEffect(() => {\n        let v = value();\n        while (typeof v === \"function\") v = v();\n        current = insertExpression(parent, v, current, marker);\n      });\n      return () => current;\n    } else if (Array.isArray(value)) {\n      const array = [];\n      if (normalizeIncomingArray(array, value, unwrapArray)) {\n        createRenderEffect(\n          () => (current = insertExpression(parent, array, current, marker, true))\n        );\n        return () => current;\n      }\n      if (array.length === 0) {\n        const replacement = cleanChildren(parent, current, marker);\n        if (multi) return (current = replacement);\n      } else {\n        if (Array.isArray(current)) {\n          if (current.length === 0) {\n            appendNodes(parent, array, marker);\n          } else reconcileArrays(parent, current, array);\n        } else if (current == null || current === \"\") {\n          appendNodes(parent, array);\n        } else {\n          reconcileArrays(parent, (multi && current) || [getFirstChild(parent)], array);\n        }\n      }\n      current = array;\n    } else {\n      if (Array.isArray(current)) {\n        if (multi) return (current = cleanChildren(parent, current, marker, value));\n        cleanChildren(parent, current, null, value);\n      } else if (current == null || current === \"\" || !getFirstChild(parent)) {\n        insertNode(parent, value);\n      } else replaceNode(parent, value, getFirstChild(parent));\n      current = value;\n    }\n    return current;\n  }\n  function normalizeIncomingArray(normalized, array, unwrap) {\n    let dynamic = false;\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i],\n        t;\n      if (item == null || item === true || item === false);\n      else if (Array.isArray(item)) {\n        dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n      } else if ((t = typeof item) === \"string\" || t === \"number\") {\n        normalized.push(createTextNode(item));\n      } else if (t === \"function\") {\n        if (unwrap) {\n          while (typeof item === \"function\") item = item();\n          dynamic =\n            normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n        } else {\n          normalized.push(item);\n          dynamic = true;\n        }\n      } else normalized.push(item);\n    }\n    return dynamic;\n  }\n  function reconcileArrays(parentNode, a, b) {\n    let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = getNextSibling(a[aEnd - 1]),\n      map = null;\n    while (aStart < aEnd || bStart < bEnd) {\n      if (a[aStart] === b[bStart]) {\n        aStart++;\n        bStart++;\n        continue;\n      }\n      while (a[aEnd - 1] === b[bEnd - 1]) {\n        aEnd--;\n        bEnd--;\n      }\n      if (aEnd === aStart) {\n        const node =\n          bEnd < bLength ? (bStart ? getNextSibling(b[bStart - 1]) : b[bEnd - bStart]) : after;\n        while (bStart < bEnd) insertNode(parentNode, b[bStart++], node);\n      } else if (bEnd === bStart) {\n        while (aStart < aEnd) {\n          if (!map || !map.has(a[aStart])) removeNode(parentNode, a[aStart]);\n          aStart++;\n        }\n      } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n        const node = getNextSibling(a[--aEnd]);\n        insertNode(parentNode, b[bStart++], getNextSibling(a[aStart++]));\n        insertNode(parentNode, b[--bEnd], node);\n        a[aEnd] = b[bEnd];\n      } else {\n        if (!map) {\n          map = new Map();\n          let i = bStart;\n          while (i < bEnd) map.set(b[i], i++);\n        }\n        const index = map.get(a[aStart]);\n        if (index != null) {\n          if (bStart < index && index < bEnd) {\n            let i = aStart,\n              sequence = 1,\n              t;\n            while (++i < aEnd && i < bEnd) {\n              if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n              sequence++;\n            }\n            if (sequence > index - bStart) {\n              const node = a[aStart];\n              while (bStart < index) insertNode(parentNode, b[bStart++], node);\n            } else replaceNode(parentNode, b[bStart++], a[aStart++]);\n          } else aStart++;\n        } else removeNode(parentNode, a[aStart++]);\n      }\n    }\n  }\n  function cleanChildren(parent, current, marker, replacement) {\n    if (marker === undefined) {\n      let removed;\n      while ((removed = getFirstChild(parent))) removeNode(parent, removed);\n      replacement && insertNode(parent, replacement);\n      return \"\";\n    }\n    const node = replacement || createTextNode(\"\");\n    if (current.length) {\n      let inserted = false;\n      for (let i = current.length - 1; i >= 0; i--) {\n        const el = current[i];\n        if (node !== el) {\n          const isParent = getParentNode(el) === parent;\n          if (!inserted && !i)\n            isParent ? replaceNode(parent, node, el) : insertNode(parent, node, marker);\n          else isParent && removeNode(parent, el);\n        } else inserted = true;\n      }\n    } else insertNode(parent, node, marker);\n    return [node];\n  }\n  function appendNodes(parent, array, marker) {\n    for (let i = 0, len = array.length; i < len; i++) insertNode(parent, array[i], marker);\n  }\n  function replaceNode(parent, newNode, oldNode) {\n    insertNode(parent, newNode, oldNode);\n    removeNode(parent, oldNode);\n  }\n  function spreadExpression(node, props, prevProps = {}, skipChildren) {\n    props || (props = {});\n    if (!skipChildren) {\n      createRenderEffect(\n        () => (prevProps.children = insertExpression(node, props.children, prevProps.children))\n      );\n    }\n    createRenderEffect(() => props.ref && props.ref(node));\n    createRenderEffect(() => {\n      for (const prop in props) {\n        if (prop === \"children\" || prop === \"ref\") continue;\n        const value = props[prop];\n        if (value === prevProps[prop]) continue;\n        setProperty(node, prop, value, prevProps[prop]);\n        prevProps[prop] = value;\n      }\n    });\n    return prevProps;\n  }\n  return {\n    render(code, element) {\n      let disposer;\n      createRoot(dispose => {\n        disposer = dispose;\n        insert(element, code());\n      });\n      return disposer;\n    },\n    insert,\n    spread(node, accessor, skipChildren) {\n      if (typeof accessor === \"function\") {\n        createRenderEffect(current => spreadExpression(node, accessor(), current, skipChildren));\n      } else spreadExpression(node, accessor, undefined, skipChildren);\n    },\n    createElement,\n    createTextNode,\n    insertNode,\n    setProp(node, name, value, prev) {\n      setProperty(node, name, value, prev);\n      return value;\n    },\n    mergeProps,\n    effect: createRenderEffect,\n    memo: createMemo,\n    createComponent,\n    use(fn, element, arg) {\n      return untrack(() => fn(element, arg));\n    }\n  };\n}\n\nfunction createRenderer(options) {\n  const renderer = createRenderer$1(options);\n  renderer.mergeProps = mergeProps;\n  return renderer;\n}\n\nexport { createRenderer };\n","import { assertTruthy, isElementText, ElementNode, NodeType, log, } from '@lightningtv/core';\nexport default {\n    createElement(name) {\n        return new ElementNode(name);\n    },\n    createTextNode(text) {\n        // A text node is just a string - not the <text> node\n        return { _type: NodeType.Text, text };\n    },\n    replaceText(node, value) {\n        log('Replace Text: ', node, value);\n        node.text = value;\n        const parent = node.parent;\n        assertTruthy(parent);\n        parent.text = parent.getText();\n    },\n    setProperty(node, name, value = true) {\n        node[name] = value;\n    },\n    insertNode(parent, node, anchor) {\n        log('INSERT: ', parent, node, anchor);\n        parent.insertChild(node, anchor);\n        node._queueDelete = false;\n        if (node instanceof ElementNode) {\n            parent.rendered && node.render(true);\n        }\n        else if (isElementText(parent)) {\n            // TextNodes can be placed outside of <text> nodes when <Show> is used as placeholder\n            parent.text = parent.getText();\n        }\n    },\n    isTextNode(node) {\n        return isElementText(node);\n    },\n    removeNode(parent, node) {\n        log('REMOVE: ', parent, node);\n        parent.removeChild(node);\n        node._queueDelete = true;\n        if (node instanceof ElementNode) {\n            // Solid replacesNodes to move them (via insert and remove),\n            // so we need to wait for the next microtask to destroy the node\n            // in the event it gets a new parent.\n            queueMicrotask(() => node.destroy());\n        }\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getNextSibling(node) {\n        const children = node.parent.children || [];\n        const index = children.indexOf(node) + 1;\n        if (index < children.length) {\n            return children[index];\n        }\n        return undefined;\n    },\n};\n//# sourceMappingURL=solidOpts.js.map","import { createRenderer as solidCreateRenderer } from 'solid-js/universal';\nimport { Config, startLightningRenderer, } from '@lightningtv/core';\nimport nodeOpts from './solidOpts.js';\nimport { splitProps, createMemo, createRenderEffect, untrack, } from 'solid-js';\nimport { activeElement, setActiveElement } from './activeElement.js';\nconst solidRenderer = solidCreateRenderer(nodeOpts);\nlet renderer;\nexport const rootNode = nodeOpts.createElement('App');\nconst render = function (code) {\n    // @ts-expect-error - code is jsx element and not SolidElement yet\n    return solidRenderer.render(code, rootNode);\n};\nexport function createRenderer(rendererOptions, node) {\n    const options = rendererOptions || Config.rendererOptions;\n    renderer = startLightningRenderer(options, node || 'app');\n    //Prevent this from happening automatically\n    Config.setActiveElement = setActiveElement;\n    rootNode.lng = renderer.root;\n    rootNode.rendered = true;\n    renderer.on('idle', () => {\n        tasksEnabled = true;\n        processTasks();\n    });\n    return {\n        renderer,\n        rootNode,\n        render,\n    };\n}\nexport const { effect, memo, createComponent, createElement, createTextNode, insertNode, insert, spread, setProp, mergeProps, use, } = solidRenderer;\nconst taskQueue = [];\nlet tasksEnabled = false;\ncreateRenderEffect(() => {\n    // should change whenever a keypress occurs, so we disable the task queue\n    // until the renderer is idle again.\n    activeElement();\n    tasksEnabled = false;\n});\nexport function setTasksEnabled(enabled) {\n    tasksEnabled = enabled;\n}\nexport function clearTasks() {\n    taskQueue.length = 0;\n}\nexport function scheduleTask(callback, priority = 'low') {\n    if (priority === 'high') {\n        taskQueue.unshift(callback);\n    }\n    else {\n        taskQueue.push(callback);\n    }\n    processTasks();\n}\nfunction processTasks() {\n    if (tasksEnabled && taskQueue.length) {\n        setTimeout(() => {\n            const task = taskQueue.shift();\n            if (task) {\n                task();\n                processTasks();\n            }\n        }, Config.taskDelay || 50);\n    }\n}\n/**\n * renders an arbitrary custom or native component and passes the other props\n * ```typescript\n * <Dynamic component={multiline() ? 'textarea' : 'input'} value={value()} />\n * ```\n * @description https://www.solidjs.com/docs/latest/api#dynamic\n */\nexport function Dynamic(props) {\n    const [p, others] = splitProps(props, ['component']);\n    const cached = createMemo(() => p.component);\n    return createMemo(() => {\n        const component = cached();\n        switch (typeof component) {\n            case 'function':\n                return untrack(() => component(others));\n            case 'string': {\n                const el = createElement(component);\n                spread(el, others);\n                return el;\n            }\n            default:\n                break;\n        }\n    });\n}\n// Dont use JSX as it creates circular dependencies and causes trouble with the playground.\nexport const View = (props) => {\n    const el = createElement('node');\n    spread(el, props, false);\n    return el;\n};\nexport const Text = (props) => {\n    const el = createElement('text');\n    spread(el, props, false);\n    return el;\n};\n//# sourceMappingURL=render.js.map","import { createEffect, on, createSignal, onCleanup, getOwner, runWithOwner, } from 'solid-js';\nimport { Config } from '@lightningtv/core';\nimport { useFocusManager as useFocusManagerCore, } from '@lightningtv/core/focusManager';\nimport { activeElement, setActiveElement } from '../activeElement.js';\nconst [focusPath, setFocusPath] = createSignal([]);\nexport { focusPath };\nexport const useFocusManager = (userKeyMap, keyHoldOptions) => {\n    const owner = getOwner();\n    const ownerContext = runWithOwner.bind(this, owner);\n    Config.setActiveElement = (activeElm) => ownerContext(() => setActiveElement(activeElm));\n    const { cleanup, focusPath: focusPathCore } = useFocusManagerCore({\n        userKeyMap,\n        keyHoldOptions,\n        ownerContext,\n    });\n    createEffect(on(activeElement, () => {\n        setFocusPath([...focusPathCore()]);\n    }, { defer: true }));\n    onCleanup(cleanup);\n};\n//# sourceMappingURL=useFocusManager.js.map","import {\n  createRoot,\n  createRenderEffect,\n  untrack,\n  sharedConfig,\n  enableHydration,\n  getOwner,\n  createEffect,\n  runWithOwner,\n  createMemo,\n  createSignal,\n  onCleanup,\n  splitProps\n} from \"solid-js\";\nexport {\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  createComponent,\n  createRenderEffect as effect,\n  getOwner,\n  createMemo as memo,\n  mergeProps,\n  untrack\n} from \"solid-js\";\n\nconst booleans = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"indeterminate\",\n  \"inert\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\"\n];\nconst Properties = /*#__PURE__*/ new Set([\n  \"className\",\n  \"value\",\n  \"readOnly\",\n  \"formNoValidate\",\n  \"isMap\",\n  \"noModule\",\n  \"playsInline\",\n  ...booleans\n]);\nconst ChildProperties = /*#__PURE__*/ new Set([\n  \"innerHTML\",\n  \"textContent\",\n  \"innerText\",\n  \"children\"\n]);\nconst Aliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? (a[tagName] ? a[\"$\"] : undefined) : a;\n}\nconst DelegatedEvents = /*#__PURE__*/ new Set([\n  \"beforeinput\",\n  \"click\",\n  \"dblclick\",\n  \"contextmenu\",\n  \"focusin\",\n  \"focusout\",\n  \"input\",\n  \"keydown\",\n  \"keyup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"pointerdown\",\n  \"pointermove\",\n  \"pointerout\",\n  \"pointerover\",\n  \"pointerup\",\n  \"touchend\",\n  \"touchmove\",\n  \"touchstart\"\n]);\nconst SVGElements = /*#__PURE__*/ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feDropShadow\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/ new Set([\n  \"html\",\n  \"base\",\n  \"head\",\n  \"link\",\n  \"meta\",\n  \"style\",\n  \"title\",\n  \"body\",\n  \"address\",\n  \"article\",\n  \"aside\",\n  \"footer\",\n  \"header\",\n  \"main\",\n  \"nav\",\n  \"section\",\n  \"body\",\n  \"blockquote\",\n  \"dd\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"figcaption\",\n  \"figure\",\n  \"hr\",\n  \"li\",\n  \"ol\",\n  \"p\",\n  \"pre\",\n  \"ul\",\n  \"a\",\n  \"abbr\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"br\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"kbd\",\n  \"mark\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"time\",\n  \"u\",\n  \"var\",\n  \"wbr\",\n  \"area\",\n  \"audio\",\n  \"img\",\n  \"map\",\n  \"track\",\n  \"video\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"param\",\n  \"picture\",\n  \"portal\",\n  \"source\",\n  \"svg\",\n  \"math\",\n  \"canvas\",\n  \"noscript\",\n  \"script\",\n  \"del\",\n  \"ins\",\n  \"caption\",\n  \"col\",\n  \"colgroup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"tr\",\n  \"button\",\n  \"datalist\",\n  \"fieldset\",\n  \"form\",\n  \"input\",\n  \"label\",\n  \"legend\",\n  \"meter\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"progress\",\n  \"select\",\n  \"textarea\",\n  \"details\",\n  \"dialog\",\n  \"menu\",\n  \"summary\",\n  \"details\",\n  \"slot\",\n  \"template\",\n  \"acronym\",\n  \"applet\",\n  \"basefont\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"center\",\n  \"content\",\n  \"dir\",\n  \"font\",\n  \"frame\",\n  \"frameset\",\n  \"hgroup\",\n  \"image\",\n  \"keygen\",\n  \"marquee\",\n  \"menuitem\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"plaintext\",\n  \"rb\",\n  \"rtc\",\n  \"shadow\",\n  \"spacer\",\n  \"strike\",\n  \"tt\",\n  \"xmp\",\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"address\",\n  \"applet\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"basefont\",\n  \"bdi\",\n  \"bdo\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"center\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"content\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"dir\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"font\",\n  \"footer\",\n  \"form\",\n  \"frame\",\n  \"frameset\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"image\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"marquee\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"plaintext\",\n  \"portal\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"shadow\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"spacer\",\n  \"span\",\n  \"strike\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"tt\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\",\n  \"xmp\",\n  \"input\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\"\n]);\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? (bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart]) : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document\n      ? code()\n      : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isImportNode, isSVG, isMathML) {\n  let node;\n  const create = () => {\n    const t = isMathML\n      ? document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"template\")\n      : document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : isMathML ? t.firstChild : t.content.firstChild;\n  };\n  const fn = isImportNode\n    ? () => untrack(() => document.importNode(node || (node = create()), true))\n    : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);\n  else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);\n  else node.setAttributeNS(namespace, name, value);\n}\nfunction setBoolAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  value ? node.setAttribute(name, \"\") : node.removeAttribute(name);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");\n  else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, (handler[0] = e => handlerFn.call(node, handler[1], e)));\n  } else node.addEventListener(name, handler, typeof handler !== \"function\" && handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return (nodeStyle.cssText = value);\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(\n      () => (prevProps.children = insertExpression(node, props.children, prevProps.children))\n    );\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get((key = getHydrationKey())))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;\n        else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const { completed, events } = sharedConfig;\n      if (!events) return;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++)\n    node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef, props) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev, typeof prev !== \"function\" && prev);\n    value && node.addEventListener(e, value, typeof value !== \"function\" && value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if (prop.slice(0, 5) === \"bool:\") {\n    setBoolAttribute(node, prop.slice(5), value);\n  } else if (\n    (forceProp = prop.slice(0, 5) === \"prop:\") ||\n    (isChildProp = ChildProperties.has(prop)) ||\n    (!isSVG &&\n      ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop)))) ||\n    (isCE = node.nodeName.includes(\"-\") || \"is\" in props)\n  ) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);\n    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;\n    else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);\n    else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  let node = e.target;\n  const key = `$$${e.type}`;\n  const oriTarget = e.target;\n  const oriCurrentTarget = e.currentTarget;\n  const retarget = value =>\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value\n    });\n  const handleNode = () => {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node.host &&\n      typeof node.host !== \"string\" &&\n      !node.host._$host &&\n      node.contains(e.target) &&\n      retarget(node.host);\n    return true;\n  };\n  const walkUpTree = () => {\n    while (handleNode() && (node = node._$host || node.parentNode || node.host));\n  };\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  if (e.composedPath) {\n    const path = e.composedPath();\n    retarget(path[0]);\n    for (let i = 0; i < path.length - 2; i++) {\n      node = path[i];\n      if (!handleNode()) break;\n      if (node._$host) {\n        node = node._$host;\n        walkUpTree();\n        break;\n      }\n      if (node.parentNode === oriCurrentTarget) {\n        break;\n      }\n    }\n  } else walkUpTree();\n  retarget(oriTarget);\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();\n      else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = (multi && current[0] && current[0].parentNode) || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => (current = insertExpression(parent, array, current, marker, true)));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return (current = [...parent.childNodes]);\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return (current = nodes);\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return (current = multi ? [value] : value);\n    if (Array.isArray(current)) {\n      if (multi) return (current = cleanChildren(parent, current, marker, value));\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false);\n    else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic =\n          normalizeIncomingArray(\n            normalized,\n            Array.isArray(item) ? item : [item],\n            Array.isArray(prev) ? prev : [prev]\n          ) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);\n      else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return (parent.textContent = \"\");\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key))\n      sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const { useShadow } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(\n    () => {\n      if (hydrating) getOwner().user = hydrating = false;\n      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n      const el = mount();\n      if (el instanceof HTMLHeadElement) {\n        const [clean, setClean] = createSignal(false);\n        const cleanup = () => setClean(true);\n        createRoot(dispose => insert(el, () => (!clean() ? content() : dispose()), null));\n        onCleanup(cleanup);\n      } else {\n        const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot =\n            useShadow && container.attachShadow\n              ? container.attachShadow({\n                  mode: \"open\"\n                })\n              : container;\n        Object.defineProperty(container, \"_$host\", {\n          get() {\n            return marker.parentNode;\n          },\n          configurable: true\n        });\n        insert(renderRoot, content);\n        el.appendChild(container);\n        props.ref && props.ref(container);\n        onCleanup(() => el.removeChild(container));\n      }\n    },\n    undefined,\n    {\n      render: !hydrating\n    }\n  );\n  return marker;\n}\nfunction createDynamic(component, props) {\n  const cached = createMemo(component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(props));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, props, isSvg);\n        return el;\n    }\n  });\n}\nfunction Dynamic(props) {\n  const [, others] = splitProps(props, [\"component\"]);\n  return createDynamic(() => props.component, others);\n}\n\nexport {\n  Aliases,\n  voidFn as Assets,\n  ChildProperties,\n  DOMElements,\n  DelegatedEvents,\n  Dynamic,\n  Hydration,\n  voidFn as HydrationScript,\n  NoHydration,\n  Portal,\n  Properties,\n  RequestContext,\n  SVGElements,\n  SVGNamespace,\n  addEventListener,\n  assign,\n  classList,\n  className,\n  clearDelegatedEvents,\n  createDynamic,\n  delegateEvents,\n  dynamicProperty,\n  escape,\n  voidFn as generateHydrationScript,\n  voidFn as getAssets,\n  getHydrationKey,\n  getNextElement,\n  getNextMarker,\n  getNextMatch,\n  getPropAlias,\n  voidFn as getRequestEvent,\n  hydrate,\n  innerHTML,\n  insert,\n  isDev,\n  isServer,\n  render,\n  renderToStream,\n  renderToString,\n  renderToStringAsync,\n  resolveSSRNode,\n  runHydrationEvents,\n  setAttribute,\n  setAttributeNS,\n  setBoolAttribute,\n  setProperty,\n  spread,\n  ssr,\n  ssrAttribute,\n  ssrClassList,\n  ssrElement,\n  ssrHydrationKey,\n  ssrSpread,\n  ssrStyle,\n  style,\n  template,\n  use,\n  voidFn as useAssets\n};\n","import { isServer } from \"solid-js/web\";\nexport function createBeforeLeave() {\n    let listeners = new Set();\n    function subscribe(listener) {\n        listeners.add(listener);\n        return () => listeners.delete(listener);\n    }\n    let ignore = false;\n    function confirm(to, options) {\n        if (ignore)\n            return !(ignore = false);\n        const e = {\n            to,\n            options,\n            defaultPrevented: false,\n            preventDefault: () => (e.defaultPrevented = true)\n        };\n        for (const l of listeners)\n            l.listener({\n                ...e,\n                from: l.location,\n                retry: (force) => {\n                    force && (ignore = true);\n                    l.navigate(to, { ...options, resolve: false });\n                }\n            });\n        return !e.defaultPrevented;\n    }\n    return {\n        subscribe,\n        confirm\n    };\n}\n// The following supports browser initiated blocking (eg back/forward)\nlet depth;\nexport function saveCurrentDepth() {\n    if (!window.history.state || window.history.state._depth == null) {\n        window.history.replaceState({ ...window.history.state, _depth: window.history.length - 1 }, \"\");\n    }\n    depth = window.history.state._depth;\n}\nif (!isServer) {\n    saveCurrentDepth();\n}\nexport function keepDepth(state) {\n    return {\n        ...state,\n        _depth: window.history.state && window.history.state._depth\n    };\n}\nexport function notifyIfNotBlocked(notify, block) {\n    let ignore = false;\n    return () => {\n        const prevDepth = depth;\n        saveCurrentDepth();\n        const delta = prevDepth == null ? null : depth - prevDepth;\n        if (ignore) {\n            ignore = false;\n            return;\n        }\n        if (delta && block(delta)) {\n            ignore = true;\n            window.history.go(-delta);\n        }\n        else {\n            notify();\n        }\n    };\n}\n","import { createMemo, getOwner, runWithOwner } from \"solid-js\";\nconst hasSchemeRegex = /^(?:[a-z0-9]+:)?\\/\\//i;\nconst trimPathRegex = /^\\/+|(\\/)\\/+$/g;\nexport const mockBase = \"http://sr\";\nexport function normalizePath(path, omitSlash = false) {\n    const s = path.replace(trimPathRegex, \"$1\");\n    return s ? (omitSlash || /^[?#]/.test(s) ? s : \"/\" + s) : \"\";\n}\nexport function resolvePath(base, path, from) {\n    if (hasSchemeRegex.test(path)) {\n        return undefined;\n    }\n    const basePath = normalizePath(base);\n    const fromPath = from && normalizePath(from);\n    let result = \"\";\n    if (!fromPath || path.startsWith(\"/\")) {\n        result = basePath;\n    }\n    else if (fromPath.toLowerCase().indexOf(basePath.toLowerCase()) !== 0) {\n        result = basePath + fromPath;\n    }\n    else {\n        result = fromPath;\n    }\n    return (result || \"/\") + normalizePath(path, !result);\n}\nexport function invariant(value, message) {\n    if (value == null) {\n        throw new Error(message);\n    }\n    return value;\n}\nexport function joinPaths(from, to) {\n    return normalizePath(from).replace(/\\/*(\\*.*)?$/g, \"\") + normalizePath(to);\n}\nexport function extractSearchParams(url) {\n    const params = {};\n    url.searchParams.forEach((value, key) => {\n        if (key in params) {\n            if (Array.isArray(params[key]))\n                params[key].push(value);\n            else\n                params[key] = [params[key], value];\n        }\n        else\n            params[key] = value;\n    });\n    return params;\n}\nexport function createMatcher(path, partial, matchFilters) {\n    const [pattern, splat] = path.split(\"/*\", 2);\n    const segments = pattern.split(\"/\").filter(Boolean);\n    const len = segments.length;\n    return (location) => {\n        const locSegments = location.split(\"/\").filter(Boolean);\n        const lenDiff = locSegments.length - len;\n        if (lenDiff < 0 || (lenDiff > 0 && splat === undefined && !partial)) {\n            return null;\n        }\n        const match = {\n            path: len ? \"\" : \"/\",\n            params: {}\n        };\n        const matchFilter = (s) => matchFilters === undefined ? undefined : matchFilters[s];\n        for (let i = 0; i < len; i++) {\n            const segment = segments[i];\n            const dynamic = segment[0] === \":\";\n            const locSegment = dynamic ? locSegments[i] : locSegments[i].toLowerCase();\n            const key = dynamic ? segment.slice(1) : segment.toLowerCase();\n            if (dynamic && matchSegment(locSegment, matchFilter(key))) {\n                match.params[key] = locSegment;\n            }\n            else if (dynamic || !matchSegment(locSegment, key)) {\n                return null;\n            }\n            match.path += `/${locSegment}`;\n        }\n        if (splat) {\n            const remainder = lenDiff ? locSegments.slice(-lenDiff).join(\"/\") : \"\";\n            if (matchSegment(remainder, matchFilter(splat))) {\n                match.params[splat] = remainder;\n            }\n            else {\n                return null;\n            }\n        }\n        return match;\n    };\n}\nfunction matchSegment(input, filter) {\n    const isEqual = (s) => s === input;\n    if (filter === undefined) {\n        return true;\n    }\n    else if (typeof filter === \"string\") {\n        return isEqual(filter);\n    }\n    else if (typeof filter === \"function\") {\n        return filter(input);\n    }\n    else if (Array.isArray(filter)) {\n        return filter.some(isEqual);\n    }\n    else if (filter instanceof RegExp) {\n        return filter.test(input);\n    }\n    return false;\n}\nexport function scoreRoute(route) {\n    const [pattern, splat] = route.pattern.split(\"/*\", 2);\n    const segments = pattern.split(\"/\").filter(Boolean);\n    return segments.reduce((score, segment) => score + (segment.startsWith(\":\") ? 2 : 3), segments.length - (splat === undefined ? 0 : 1));\n}\nexport function createMemoObject(fn) {\n    const map = new Map();\n    const owner = getOwner();\n    return new Proxy({}, {\n        get(_, property) {\n            if (!map.has(property)) {\n                runWithOwner(owner, () => map.set(property, createMemo(() => fn()[property])));\n            }\n            return map.get(property)();\n        },\n        getOwnPropertyDescriptor() {\n            return {\n                enumerable: true,\n                configurable: true\n            };\n        },\n        ownKeys() {\n            return Reflect.ownKeys(fn());\n        }\n    });\n}\nexport function mergeSearchString(search, params) {\n    const merged = new URLSearchParams(search);\n    Object.entries(params).forEach(([key, value]) => {\n        if (value == null || value === \"\" || (value instanceof Array && !value.length)) {\n            merged.delete(key);\n        }\n        else {\n            if (value instanceof Array) {\n                // Delete all instances of the key before appending\n                merged.delete(key);\n                value.forEach(v => {\n                    merged.append(key, String(v));\n                });\n            }\n            else {\n                merged.set(key, String(value));\n            }\n        }\n    });\n    const s = merged.toString();\n    return s ? `?${s}` : \"\";\n}\nexport function expandOptionals(pattern) {\n    let match = /(\\/?\\:[^\\/]+)\\?/.exec(pattern);\n    if (!match)\n        return [pattern];\n    let prefix = pattern.slice(0, match.index);\n    let suffix = pattern.slice(match.index + match[0].length);\n    const prefixes = [prefix, (prefix += match[1])];\n    // This section handles adjacent optional params. We don't actually want all permuations since\n    // that will lead to equivalent routes which have the same number of params. For example\n    // `/:a?/:b?/:c`? only has the unique expansion: `/`, `/:a`, `/:a/:b`, `/:a/:b/:c` and we can\n    // discard `/:b`, `/:c`, `/:b/:c` by building them up in order and not recursing. This also helps\n    // ensure predictability where earlier params have precidence.\n    while ((match = /^(\\/\\:[^\\/]+)\\?/.exec(suffix))) {\n        prefixes.push((prefix += match[1]));\n        suffix = suffix.slice(match[0].length);\n    }\n    return expandOptionals(suffix).reduce((results, expansion) => [...results, ...prefixes.map(p => p + expansion)], []);\n}\n","import { runWithOwner, batch } from \"solid-js\";\nimport { createComponent, createContext, createMemo, createRenderEffect, createSignal, on, onCleanup, untrack, useContext, startTransition, resetErrorBoundaries } from \"solid-js\";\nimport { isServer, getRequestEvent } from \"solid-js/web\";\nimport { createBeforeLeave } from \"./lifecycle.js\";\nimport { mockBase, createMemoObject, extractSearchParams, invariant, resolvePath, createMatcher, joinPaths, scoreRoute, mergeSearchString, expandOptionals } from \"./utils.js\";\nconst MAX_REDIRECTS = 100;\nexport const RouterContextObj = createContext();\nexport const RouteContextObj = createContext();\nexport const useRouter = () => invariant(useContext(RouterContextObj), \"<A> and 'use' router primitives can be only used inside a Route.\");\nlet TempRoute;\nexport const useRoute = () => TempRoute || useContext(RouteContextObj) || useRouter().base;\nexport const useResolvedPath = (path) => {\n    const route = useRoute();\n    return createMemo(() => route.resolvePath(path()));\n};\nexport const useHref = (to) => {\n    const router = useRouter();\n    return createMemo(() => {\n        const to_ = to();\n        return to_ !== undefined ? router.renderPath(to_) : to_;\n    });\n};\n/**\n * Retrieves method to do navigation. The method accepts a path to navigate to and an optional object with the following options:\n *\n * - resolve (*boolean*, default `true`): resolve the path against the current route\n * - replace (*boolean*, default `false`): replace the history entry\n * - scroll (*boolean*, default `true`): scroll to top after navigation\n * - state (*any*, default `undefined`): pass custom state to `location.state`\n *\n * **Note**: The state is serialized using the structured clone algorithm which does not support all object types.\n *\n * @example\n * ```js\n * const navigate = useNavigate();\n *\n * if (unauthorized) {\n *   navigate(\"/login\", { replace: true });\n * }\n * ```\n */\nexport const useNavigate = () => useRouter().navigatorFactory();\n/**\n * Retrieves reactive `location` object useful for getting things like `pathname`.\n *\n * @example\n * ```js\n * const location = useLocation();\n *\n * const pathname = createMemo(() => parsePath(location.pathname));\n * ```\n */\nexport const useLocation = () => useRouter().location;\n/**\n * Retrieves signal that indicates whether the route is currently in a *Transition*.\n * Useful for showing stale/pending state when the route resolution is *Suspended* during concurrent rendering.\n *\n * @example\n * ```js\n * const isRouting = useIsRouting();\n *\n * return (\n *   <div classList={{ \"grey-out\": isRouting() }}>\n *     <MyAwesomeContent />\n *   </div>\n * );\n * ```\n */\nexport const useIsRouting = () => useRouter().isRouting;\n/**\n * usePreloadRoute returns a function that can be used to preload a route manual.\n * This is what happens automatically with link hovering and similar focus based behavior, but it is available here as an API.\n *\n * @example\n * ```js\n * const preload = usePreloadRoute();\n *\n * preload(`/users/settings`, { preloadData: true });\n * ```\n */\nexport const usePreloadRoute = () => {\n    const pre = useRouter().preloadRoute;\n    return (url, options = {}) => pre(url instanceof URL ? url : new URL(url, mockBase), options.preloadData);\n};\n/**\n * `useMatch` takes an accessor that returns the path and creates a `Memo` that returns match information if the current path matches the provided path.\n * Useful for determining if a given path matches the current route.\n *\n * @example\n * ```js\n * const match = useMatch(() => props.href);\n *\n * return <div classList={{ active: Boolean(match()) }} />;\n * ```\n */\nexport const useMatch = (path, matchFilters) => {\n    const location = useLocation();\n    const matchers = createMemo(() => expandOptionals(path()).map(path => createMatcher(path, undefined, matchFilters)));\n    return createMemo(() => {\n        for (const matcher of matchers()) {\n            const match = matcher(location.pathname);\n            if (match)\n                return match;\n        }\n    });\n};\n/**\n * `useCurrentMatches` returns all the matches for the current matched route.\n * Useful for getting all the route information.\n *\n * @example\n * ```js\n * const matches = useCurrentMatches();\n *\n * const breadcrumbs = createMemo(() => matches().map(m => m.route.info.breadcrumb))\n * ```\n */\nexport const useCurrentMatches = () => useRouter().matches;\n/**\n * Retrieves a reactive, store-like object containing the current route path parameters as defined in the Route.\n *\n * @example\n * ```js\n * const params = useParams();\n *\n * // fetch user based on the id path parameter\n * const [user] = createResource(() => params.id, fetchUser);\n * ```\n */\nexport const useParams = () => useRouter().params;\n/**\n * Retrieves a tuple containing a reactive object to read the current location's query parameters and a method to update them.\n * The object is a proxy so you must access properties to subscribe to reactive updates.\n * **Note** that values will be strings and property names will retain their casing.\n *\n * The setter method accepts an object whose entries will be merged into the current query string.\n * Values `''`, `undefined` and `null` will remove the key from the resulting query string.\n * Updates will behave just like a navigation and the setter accepts the same optional second parameter as `navigate` and auto-scrolling is disabled by default.\n *\n * @examples\n * ```js\n * const [searchParams, setSearchParams] = useSearchParams();\n *\n * return (\n *   <div>\n *     <span>Page: {searchParams.page}</span>\n *     <button\n *       onClick={() =>\n *         setSearchParams({ page: (parseInt(searchParams.page) || 0) + 1 })\n *       }\n *     >\n *       Next Page\n *     </button>\n *   </div>\n * );\n * ```\n */\nexport const useSearchParams = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const setSearchParams = (params, options) => {\n        const searchString = untrack(() => mergeSearchString(location.search, params) + location.hash);\n        navigate(searchString, {\n            scroll: false,\n            resolve: false,\n            ...options\n        });\n    };\n    return [location.query, setSearchParams];\n};\n/**\n * useBeforeLeave takes a function that will be called prior to leaving a route.\n * The function will be called with:\n *\n * - from (*Location*): current location (before change).\n * - to (*string | number*): path passed to `navigate`.\n * - options (*NavigateOptions*): options passed to navigate.\n * - preventDefault (*function*): call to block the route change.\n * - defaultPrevented (*readonly boolean*): `true` if any previously called leave handlers called `preventDefault`.\n * - retry (*function*, force?: boolean ): call to retry the same navigation, perhaps after confirming with the user. Pass `true` to skip running the leave handlers again (i.e. force navigate without confirming).\n *\n * @example\n * ```js\n * useBeforeLeave((e: BeforeLeaveEventArgs) => {\n *   if (form.isDirty && !e.defaultPrevented) {\n *     // preventDefault to block immediately and prompt user async\n *     e.preventDefault();\n *     setTimeout(() => {\n *       if (window.confirm(\"Discard unsaved changes - are you sure?\")) {\n *         // user wants to proceed anyway so retry with force=true\n *         e.retry(true);\n *       }\n *     }, 100);\n *   }\n * });\n * ```\n */\nexport const useBeforeLeave = (listener) => {\n    const s = useRouter().beforeLeave.subscribe({\n        listener,\n        location: useLocation(),\n        navigate: useNavigate()\n    });\n    onCleanup(s);\n};\nexport function createRoutes(routeDef, base = \"\") {\n    const { component, preload, load, children, info } = routeDef;\n    const isLeaf = !children || (Array.isArray(children) && !children.length);\n    const shared = {\n        key: routeDef,\n        component,\n        preload: preload || load,\n        info\n    };\n    return asArray(routeDef.path).reduce((acc, originalPath) => {\n        for (const expandedPath of expandOptionals(originalPath)) {\n            const path = joinPaths(base, expandedPath);\n            let pattern = isLeaf ? path : path.split(\"/*\", 1)[0];\n            pattern = pattern\n                .split(\"/\")\n                .map((s) => {\n                return s.startsWith(\":\") || s.startsWith(\"*\") ? s : encodeURIComponent(s);\n            })\n                .join(\"/\");\n            acc.push({\n                ...shared,\n                originalPath,\n                pattern,\n                matcher: createMatcher(pattern, !isLeaf, routeDef.matchFilters)\n            });\n        }\n        return acc;\n    }, []);\n}\nexport function createBranch(routes, index = 0) {\n    return {\n        routes,\n        score: scoreRoute(routes[routes.length - 1]) * 10000 - index,\n        matcher(location) {\n            const matches = [];\n            for (let i = routes.length - 1; i >= 0; i--) {\n                const route = routes[i];\n                const match = route.matcher(location);\n                if (!match) {\n                    return null;\n                }\n                matches.unshift({\n                    ...match,\n                    route\n                });\n            }\n            return matches;\n        }\n    };\n}\nfunction asArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\nexport function createBranches(routeDef, base = \"\", stack = [], branches = []) {\n    const routeDefs = asArray(routeDef);\n    for (let i = 0, len = routeDefs.length; i < len; i++) {\n        const def = routeDefs[i];\n        if (def && typeof def === \"object\") {\n            if (!def.hasOwnProperty(\"path\"))\n                def.path = \"\";\n            const routes = createRoutes(def, base);\n            for (const route of routes) {\n                stack.push(route);\n                const isEmptyArray = Array.isArray(def.children) && def.children.length === 0;\n                if (def.children && !isEmptyArray) {\n                    createBranches(def.children, route.pattern, stack, branches);\n                }\n                else {\n                    const branch = createBranch([...stack], branches.length);\n                    branches.push(branch);\n                }\n                stack.pop();\n            }\n        }\n    }\n    // Stack will be empty on final return\n    return stack.length ? branches : branches.sort((a, b) => b.score - a.score);\n}\nexport function getRouteMatches(branches, location) {\n    for (let i = 0, len = branches.length; i < len; i++) {\n        const match = branches[i].matcher(location);\n        if (match) {\n            return match;\n        }\n    }\n    return [];\n}\nfunction createLocation(path, state, queryWrapper) {\n    const origin = new URL(mockBase);\n    const url = createMemo(prev => {\n        const path_ = path();\n        try {\n            return new URL(path_, origin);\n        }\n        catch (err) {\n            console.error(`Invalid path ${path_}`);\n            return prev;\n        }\n    }, origin, {\n        equals: (a, b) => a.href === b.href\n    });\n    const pathname = createMemo(() => url().pathname);\n    const search = createMemo(() => url().search, true);\n    const hash = createMemo(() => url().hash);\n    const key = () => \"\";\n    const queryFn = on(search, () => extractSearchParams(url()));\n    return {\n        get pathname() {\n            return pathname();\n        },\n        get search() {\n            return search();\n        },\n        get hash() {\n            return hash();\n        },\n        get state() {\n            return state();\n        },\n        get key() {\n            return key();\n        },\n        query: queryWrapper ? queryWrapper(queryFn) : createMemoObject(queryFn)\n    };\n}\nlet intent;\nexport function getIntent() {\n    return intent;\n}\nlet inPreloadFn = false;\nexport function getInPreloadFn() {\n    return inPreloadFn;\n}\nexport function setInPreloadFn(value) {\n    inPreloadFn = value;\n}\nexport function createRouterContext(integration, branches, getContext, options = {}) {\n    const { signal: [source, setSource], utils = {} } = integration;\n    const parsePath = utils.parsePath || (p => p);\n    const renderPath = utils.renderPath || (p => p);\n    const beforeLeave = utils.beforeLeave || createBeforeLeave();\n    const basePath = resolvePath(\"\", options.base || \"\");\n    if (basePath === undefined) {\n        throw new Error(`${basePath} is not a valid base path`);\n    }\n    else if (basePath && !source().value) {\n        setSource({ value: basePath, replace: true, scroll: false });\n    }\n    const [isRouting, setIsRouting] = createSignal(false);\n    // Keep track of last target, so that last call to transition wins\n    let lastTransitionTarget;\n    // Transition the location to a new value\n    const transition = (newIntent, newTarget) => {\n        if (newTarget.value === reference() && newTarget.state === state())\n            return;\n        if (lastTransitionTarget === undefined)\n            setIsRouting(true);\n        intent = newIntent;\n        lastTransitionTarget = newTarget;\n        startTransition(() => {\n            if (lastTransitionTarget !== newTarget)\n                return;\n            setReference(lastTransitionTarget.value);\n            setState(lastTransitionTarget.state);\n            resetErrorBoundaries();\n            if (!isServer)\n                submissions[1](subs => subs.filter(s => s.pending));\n        }).finally(() => {\n            if (lastTransitionTarget !== newTarget)\n                return;\n            // Batch, in order for isRouting and final source update to happen together\n            batch(() => {\n                intent = undefined;\n                if (newIntent === \"navigate\")\n                    navigateEnd(lastTransitionTarget);\n                setIsRouting(false);\n                lastTransitionTarget = undefined;\n            });\n        });\n    };\n    const [reference, setReference] = createSignal(source().value);\n    const [state, setState] = createSignal(source().state);\n    const location = createLocation(reference, state, utils.queryWrapper);\n    const referrers = [];\n    const submissions = createSignal(isServer ? initFromFlash() : []);\n    const matches = createMemo(() => {\n        if (typeof options.transformUrl === \"function\") {\n            return getRouteMatches(branches(), options.transformUrl(location.pathname));\n        }\n        return getRouteMatches(branches(), location.pathname);\n    });\n    const buildParams = () => {\n        const m = matches();\n        const params = {};\n        for (let i = 0; i < m.length; i++) {\n            Object.assign(params, m[i].params);\n        }\n        return params;\n    };\n    const params = utils.paramsWrapper\n        ? utils.paramsWrapper(buildParams, branches)\n        : createMemoObject(buildParams);\n    const baseRoute = {\n        pattern: basePath,\n        path: () => basePath,\n        outlet: () => null,\n        resolvePath(to) {\n            return resolvePath(basePath, to);\n        }\n    };\n    // Create a native transition, when source updates\n    createRenderEffect(on(source, source => transition(\"native\", source), { defer: true }));\n    return {\n        base: baseRoute,\n        location,\n        params,\n        isRouting,\n        renderPath,\n        parsePath,\n        navigatorFactory,\n        matches,\n        beforeLeave,\n        preloadRoute,\n        singleFlight: options.singleFlight === undefined ? true : options.singleFlight,\n        submissions\n    };\n    function navigateFromRoute(route, to, options) {\n        // Untrack in case someone navigates in an effect - don't want to track `reference` or route paths\n        untrack(() => {\n            if (typeof to === \"number\") {\n                if (!to) {\n                    // A delta of 0 means stay at the current location, so it is ignored\n                }\n                else if (utils.go) {\n                    utils.go(to);\n                }\n                else {\n                    console.warn(\"Router integration does not support relative routing\");\n                }\n                return;\n            }\n            const queryOnly = !to || to[0] === \"?\";\n            const { replace, resolve, scroll, state: nextState } = {\n                replace: false,\n                resolve: !queryOnly,\n                scroll: true,\n                ...options\n            };\n            const resolvedTo = resolve\n                ? route.resolvePath(to)\n                : resolvePath((queryOnly && location.pathname) || \"\", to);\n            if (resolvedTo === undefined) {\n                throw new Error(`Path '${to}' is not a routable path`);\n            }\n            else if (referrers.length >= MAX_REDIRECTS) {\n                throw new Error(\"Too many redirects\");\n            }\n            const current = reference();\n            if (resolvedTo !== current || nextState !== state()) {\n                if (isServer) {\n                    const e = getRequestEvent();\n                    e && (e.response = { status: 302, headers: new Headers({ Location: resolvedTo }) });\n                    setSource({ value: resolvedTo, replace, scroll, state: nextState });\n                }\n                else if (beforeLeave.confirm(resolvedTo, options)) {\n                    referrers.push({ value: current, replace, scroll, state: state() });\n                    transition(\"navigate\", {\n                        value: resolvedTo,\n                        state: nextState\n                    });\n                }\n            }\n        });\n    }\n    function navigatorFactory(route) {\n        // Workaround for vite issue (https://github.com/vitejs/vite/issues/3803)\n        route = route || useContext(RouteContextObj) || baseRoute;\n        return (to, options) => navigateFromRoute(route, to, options);\n    }\n    function navigateEnd(next) {\n        const first = referrers[0];\n        if (first) {\n            setSource({\n                ...next,\n                replace: first.replace,\n                scroll: first.scroll\n            });\n            referrers.length = 0;\n        }\n    }\n    function preloadRoute(url, preloadData) {\n        const matches = getRouteMatches(branches(), url.pathname);\n        const prevIntent = intent;\n        intent = \"preload\";\n        for (let match in matches) {\n            const { route, params } = matches[match];\n            route.component &&\n                route.component.preload &&\n                route.component.preload();\n            const { preload } = route;\n            inPreloadFn = true;\n            preloadData &&\n                preload &&\n                runWithOwner(getContext(), () => preload({\n                    params,\n                    location: {\n                        pathname: url.pathname,\n                        search: url.search,\n                        hash: url.hash,\n                        query: extractSearchParams(url),\n                        state: null,\n                        key: \"\"\n                    },\n                    intent: \"preload\"\n                }));\n            inPreloadFn = false;\n        }\n        intent = prevIntent;\n    }\n    function initFromFlash() {\n        const e = getRequestEvent();\n        return (e && e.router && e.router.submission ? [e.router.submission] : []);\n    }\n}\nexport function createRouteContext(router, parent, outlet, match) {\n    const { base, location, params } = router;\n    const { pattern, component, preload } = match().route;\n    const path = createMemo(() => match().path);\n    component &&\n        component.preload &&\n        component.preload();\n    inPreloadFn = true;\n    const data = preload ? preload({ params, location, intent: intent || \"initial\" }) : undefined;\n    inPreloadFn = false;\n    const route = {\n        parent,\n        pattern,\n        path,\n        outlet: () => component\n            ? createComponent(component, {\n                params,\n                location,\n                data,\n                get children() {\n                    return outlet();\n                }\n            })\n            : outlet(),\n        resolvePath(to) {\n            return resolvePath(base.path(), to, path());\n        }\n    };\n    return route;\n}\n","/*@refresh skip*/\nimport { getRequestEvent, isServer } from \"solid-js/web\";\nimport { children, createMemo, createRoot, getOwner, mergeProps, on, Show, untrack } from \"solid-js\";\nimport { createBranches, createRouteContext, createRouterContext, getIntent, getRouteMatches, RouteContextObj, RouterContextObj, setInPreloadFn } from \"../routing.js\";\nexport const createRouterComponent = (router) => (props) => {\n    const { base } = props;\n    const routeDefs = children(() => props.children);\n    const branches = createMemo(() => createBranches(routeDefs(), props.base || \"\"));\n    let context;\n    const routerState = createRouterContext(router, branches, () => context, {\n        base,\n        singleFlight: props.singleFlight,\n        transformUrl: props.transformUrl,\n    });\n    router.create && router.create(routerState);\n    return (<RouterContextObj.Provider value={routerState}>\n      <Root routerState={routerState} root={props.root} preload={props.rootPreload || props.rootLoad}>\n        {(context = getOwner()) && null}\n        <Routes routerState={routerState} branches={branches()}/>\n      </Root>\n    </RouterContextObj.Provider>);\n};\nfunction Root(props) {\n    const location = props.routerState.location;\n    const params = props.routerState.params;\n    const data = createMemo(() => props.preload &&\n        untrack(() => {\n            setInPreloadFn(true);\n            props.preload({ params, location, intent: getIntent() || \"initial\" });\n            setInPreloadFn(false);\n        }));\n    return (<Show when={props.root} keyed fallback={props.children}>\n      {Root => (<Root params={params} location={location} data={data()}>\n          {props.children}\n        </Root>)}\n    </Show>);\n}\nfunction Routes(props) {\n    if (isServer) {\n        const e = getRequestEvent();\n        if (e && e.router && e.router.dataOnly) {\n            dataOnly(e, props.routerState, props.branches);\n            return;\n        }\n        e &&\n            ((e.router || (e.router = {})).matches ||\n                (e.router.matches = props.routerState.matches().map(({ route, path, params }) => ({\n                    path: route.originalPath,\n                    pattern: route.pattern,\n                    match: path,\n                    params,\n                    info: route.info\n                }))));\n    }\n    const disposers = [];\n    let root;\n    const routeStates = createMemo(on(props.routerState.matches, (nextMatches, prevMatches, prev) => {\n        let equal = prevMatches && nextMatches.length === prevMatches.length;\n        const next = [];\n        for (let i = 0, len = nextMatches.length; i < len; i++) {\n            const prevMatch = prevMatches && prevMatches[i];\n            const nextMatch = nextMatches[i];\n            if (prev && prevMatch && nextMatch.route.key === prevMatch.route.key) {\n                next[i] = prev[i];\n            }\n            else {\n                equal = false;\n                if (disposers[i]) {\n                    disposers[i]();\n                }\n                createRoot(dispose => {\n                    disposers[i] = dispose;\n                    next[i] = createRouteContext(props.routerState, next[i - 1] || props.routerState.base, createOutlet(() => routeStates()[i + 1]), () => props.routerState.matches()[i]);\n                });\n            }\n        }\n        disposers.splice(nextMatches.length).forEach(dispose => dispose());\n        if (prev && equal) {\n            return prev;\n        }\n        root = next[0];\n        return next;\n    }));\n    return createOutlet(() => routeStates() && root)();\n}\nconst createOutlet = (child) => {\n    return () => (<Show when={child()} keyed>\n      {child => <RouteContextObj.Provider value={child}>{child.outlet()}</RouteContextObj.Provider>}\n    </Show>);\n};\nexport const Route = (props) => {\n    const childRoutes = children(() => props.children);\n    return mergeProps(props, {\n        get children() {\n            return childRoutes();\n        }\n    });\n};\n// for data only mode with single flight mutations\nfunction dataOnly(event, routerState, branches) {\n    const url = new URL(event.request.url);\n    const prevMatches = getRouteMatches(branches, new URL(event.router.previousUrl || event.request.url).pathname);\n    const matches = getRouteMatches(branches, url.pathname);\n    for (let match = 0; match < matches.length; match++) {\n        if (!prevMatches[match] || matches[match].route !== prevMatches[match].route)\n            event.router.dataOnly = true;\n        const { route, params } = matches[match];\n        route.preload &&\n            route.preload({\n                params,\n                location: routerState.location,\n                intent: \"preload\"\n            });\n    }\n}\n","import { createSignal, onCleanup, sharedConfig } from \"solid-js\";\nimport { createRouterComponent } from \"./components.jsx\";\nfunction intercept([value, setValue], get, set) {\n    return [get ? () => get(value()) : value, set ? (v) => setValue(set(v)) : setValue];\n}\nexport function createRouter(config) {\n    let ignore = false;\n    const wrap = (value) => (typeof value === \"string\" ? { value } : value);\n    const signal = intercept(createSignal(wrap(config.get()), {\n        equals: (a, b) => a.value === b.value && a.state === b.state\n    }), undefined, next => {\n        !ignore && config.set(next);\n        if (sharedConfig.registry && !sharedConfig.done)\n            sharedConfig.done = true;\n        return next;\n    });\n    config.init &&\n        onCleanup(config.init((value = config.get()) => {\n            ignore = true;\n            signal[1](wrap(value));\n            ignore = false;\n        }));\n    return createRouterComponent({\n        signal,\n        create: config.create,\n        utils: config.utils\n    });\n}\nexport function bindEvent(target, type, handler) {\n    target.addEventListener(type, handler);\n    return () => target.removeEventListener(type, handler);\n}\nexport function scrollToHash(hash, fallbackTop) {\n    const el = hash && document.getElementById(hash);\n    if (el) {\n        el.scrollIntoView();\n    }\n    else if (fallbackTop) {\n        window.scrollTo(0, 0);\n    }\n}\n","import { getOwner, runWithOwner, createMemo } from 'solid-js';\nimport { createRouter, createBeforeLeave, keepDepth, notifyIfNotBlocked, saveCurrentDepth, } from '@solidjs/router';\nexport function hashParser(str) {\n    const to = str.replace(/^.*?#/, '');\n    // Hash-only hrefs like `#foo` from plain anchors will come in as `/#foo` whereas a link to\n    // `/foo` will be `/#/foo`. Check if the to starts with a `/` and if not append it as a hash\n    // to the current path so we can handle these in-page anchors correctly.\n    if (!to.startsWith('/')) {\n        const [, path = '/'] = window.location.hash.split('#', 2);\n        return `${path}#${to}`;\n    }\n    return to;\n}\nexport function bindEvent(target, type, handler) {\n    target.addEventListener(type, handler);\n    return () => target.removeEventListener(type, handler);\n}\nexport function HashRouter(props) {\n    const getSource = () => window.location.hash.slice(1);\n    const beforeLeave = createBeforeLeave();\n    return createRouter({\n        get: getSource,\n        set({ value, replace, state }) {\n            if (replace) {\n                window.history.replaceState(keepDepth(state), '', '#' + value);\n            }\n            else {\n                window.history.pushState(state, '', '#' + value);\n            }\n            saveCurrentDepth();\n        },\n        init: (notify) => bindEvent(window, 'hashchange', notifyIfNotBlocked(notify, (delta) => !beforeLeave.confirm(delta && delta < 0 ? delta : getSource()))),\n        utils: {\n            go: (delta) => window.history.go(delta),\n            renderPath: (path) => `#${path}`,\n            parsePath: hashParser,\n            beforeLeave,\n            queryWrapper: props.forceProxy || !SUPPORTS_PROXY\n                ? (getQuery) => {\n                    return createMemoWithoutProxy(getQuery, props.queryParams);\n                }\n                : undefined,\n            paramsWrapper: props.forceProxy || !SUPPORTS_PROXY\n                ? (buildParams, branches) => {\n                    return createMemoWithoutProxy(buildParams, collectDynamicParams(branches()));\n                }\n                : undefined,\n        },\n    })(props);\n}\nexport const SUPPORTS_PROXY = typeof Proxy === 'function';\nexport function createMemoWithoutProxy(fn, allKeys) {\n    const map = new Map();\n    const owner = getOwner();\n    const target = {};\n    const handler = (property) => {\n        if (!map.has(property)) {\n            runWithOwner(owner, () => map.set(property, createMemo(() => fn()[property])));\n        }\n        return map.get(property)();\n    };\n    const keys = allKeys ? allKeys : Object.keys(fn());\n    keys.forEach((key) => {\n        Object.defineProperty(target, key, {\n            get: () => handler(key),\n            enumerable: true,\n            configurable: true,\n        });\n    });\n    return target;\n}\nexport const collectDynamicParams = (branches) => {\n    const dynamicParams = [];\n    branches.forEach((branch) => {\n        branch.routes.forEach((route) => {\n            if (route.pattern) {\n                const matches = route.pattern.match(/:(\\w+)/g);\n                if (matches) {\n                    matches.forEach((param) => {\n                        const p = param.slice(1); // Remove the `:`\n                        if (!dynamicParams.includes(p))\n                            dynamicParams.push(p);\n                    });\n                }\n            }\n        });\n    });\n    return dynamicParams;\n};\n//# sourceMappingURL=router.js.map","import { Text, View, hexColor } from \"@lightningtv/solid\";\nimport { Index, Show, createSignal, onCleanup } from \"solid-js\";\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst HEIGHT = 600;\nconst WIDTH = 800;\n\nconst generateRandomColor = () =>\n  (0xff000000 | Math.floor(Math.random() * 0xffffff)) >>> 0;\n\nconst DirectUpdate = () => {\n  const [blocks, setBlocks] = createSignal([]);\n  let blockContainer;\n\n  const handleTPress = () => {\n    const _blocks = [];\n\n    // To tear down and recreate uncomment next line\n    // setBlocks([]);\n\n    if (blocks().length === 0) {\n      for (let step = 0; step < 1000; step++) {\n        _blocks.push({\n          width: random(50, 100),\n          height: random(50, 100),\n          x: random(0, WIDTH),\n          y: random(0, HEIGHT),\n          borderRadius: random(0, 50),\n          color: generateRandomColor(),\n        });\n      }\n\n      setBlocks(_blocks);\n    } else {\n      // Direct updating\n      for (let step = 0; step < 1000; step++) {\n        let c = blockContainer.children[step];\n        c.width = random(50, 100);\n        c.height = random(50, 100);\n        c.x = random(0, WIDTH);\n        c.y = random(0, HEIGHT);\n        //c.effects = { radius: { radius: random(0, 50) } };\n        c.color = generateRandomColor();\n      }\n    }\n  };\n\n  const interval = setInterval(() => {\n    handleTPress();\n  }, 2000);\n\n  onCleanup(() => {\n    clearInterval(interval);\n  });\n\n  return (\n    <View ref={blockContainer} color={hexColor(\"#f0f0f0\")}>\n      <Index each={blocks()}>\n        {(item) => (\n          <View\n            x={item().x}\n            y={item().y}\n            width={item().width}\n            height={item().height}\n            color={item().color}\n            effects={{ radius: { radius: item().borderRadius } }}\n          />\n        )}\n      </Index>\n    </View>\n  );\n};\n// <For each={blocks()}>{(item) => <node x={/*@once*/ item.x} y={/*@once*/ item.y} width={/*@once*/ item.width} height={/*@once*/ item.height} color={/*@once*/ item.color} borderRadius={/*@once*/ item.borderRadius} />}</For>\n// <node x={item().x} y={item().y} width={item().width} height={item().height} color={item().color} borderRadius={item().borderRadius} />\n// <node x={/*once*/ item().x} y={/*@once*/ item().y} width={/*@once*/ item().width} height={/*@once*/ item().height} color={/*@once*/ item().color} borderRadius={/*@once*/ item().borderRadius} />\nexport default DirectUpdate;\n","import { Text, View, hexColor } from \"@lightningtv/solid\";\nimport { Index, Show, createSignal, onCleanup } from \"solid-js\";\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst generateRandomColor = () =>\n  (0xff000000 | Math.floor(Math.random() * 0xffffff)) >>> 0;\n\nconst Tile = (props) => {\n  return <View {...props} />;\n};\n\nconst HEIGHT = 600;\nconst WIDTH = 800;\n\nconst TilePage = () => {\n  const [blocks, setBlocks] = createSignal([]);\n  let blockContainer;\n\n  const handleTPress = () => {\n    const _blocks = [];\n\n    // To tear down and recreate uncomment next line\n    // setBlocks([]);\n\n    for (let step = 0; step < 1000; step++) {\n      _blocks.push({\n        width: random(50, 100),\n        height: random(50, 100),\n        x: random(0, WIDTH),\n        y: random(0, HEIGHT),\n        color: generateRandomColor(),\n      });\n    }\n\n    setBlocks(_blocks);\n\n    // Direct updating\n    // for (let step = 0; step < 1000; step++) {\n    //   let c = blockContainer.children[step];\n    //   c.width = random(50, 100);\n    //   c.height = random(50, 100);\n    //   c.x = random(0, WIDTH);\n    //   c.y = random(0, HEIGHT);\n    //   c.color = generateRandomColor();\n    // }\n  };\n\n  const interval = setInterval(() => {\n    handleTPress();\n  }, 2000);\n\n  onCleanup(() => {\n    clearInterval(interval);\n  });\n\n  return (\n    <View ref={blockContainer} style={{ color: hexColor(\"#f0f0f0\") }}>\n      <Index each={blocks()}>\n        {(item) => (\n          <Tile\n            x={item().x}\n            y={item().y}\n            width={item().width}\n            height={item().height}\n            color={item().color}\n            effects={{ radius: { radius: item().borderRadius } }}\n          />\n        )}\n      </Index>\n    </View>\n  );\n};\n// <For each={blocks()}>{(item) => <node x={/*@once*/ item.x} y={/*@once*/ item.y} width={/*@once*/ item.width} height={/*@once*/ item.height} color={/*@once*/ item.color} borderRadius={/*@once*/ item.borderRadius} />}</For>\n// <node x={item().x} y={item().y} width={item().width} height={item().height} color={item().color} borderRadius={item().borderRadius} />\n// <node x={/*once*/ item().x} y={/*@once*/ item().y} width={/*@once*/ item().width} height={/*@once*/ item().height} color={/*@once*/ item().color} borderRadius={/*@once*/ item().borderRadius} />\nexport default TilePage;\n","import { Text, View, hexColor } from \"@lightningtv/solid\";\nimport { Index, Show, createSignal, onCleanup } from \"solid-js\";\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst generateRandomColor = () =>\n  \"0x\" + Math.floor(Math.random() * 16777215).toString(16) + \"FF\";\n\nconst Tile = (props) => {\n  return (\n    <View\n      x={props.item.x}\n      y={props.item.y}\n      width={props.item.width}\n      height={props.item.height}\n      color={props.item.color}\n      effects={{ radius: { radius: props.item.borderRadius } }}\n    />\n  );\n};\n\nconst HEIGHT = 600;\nconst WIDTH = 800;\n\nconst TilePage = () => {\n  const [blocks, setBlocks] = createSignal([]);\n  let blockContainer;\n\n  const handleTPress = () => {\n    const _blocks = [];\n\n    // To tear down and recreate uncomment next line\n    // setBlocks([]);\n\n    for (let step = 0; step < 1000; step++) {\n      _blocks.push({\n        width: random(50, 100),\n        height: random(50, 100),\n        x: random(0, WIDTH),\n        y: random(0, HEIGHT),\n        color: generateRandomColor(),\n      });\n    }\n\n    setBlocks(_blocks);\n\n    // Direct updating\n    // for (let step = 0; step < 1000; step++) {\n    //   let c = blockContainer.children[step];\n    //   c.width = random(50, 100);\n    //   c.height = random(50, 100);\n    //   c.x = random(0, WIDTH);\n    //   c.y = random(0, HEIGHT);\n    //   c.color = generateRandomColor();\n    // }\n  };\n\n  const interval = setInterval(() => {\n    handleTPress();\n  }, 2000);\n\n  onCleanup(() => {\n    clearInterval(interval);\n  });\n\n  return (\n    <View ref={blockContainer} style={{ color: hexColor(\"#f0f0f0\") }}>\n      <Index each={blocks()}>{(item) => <Tile item={item()} />}</Index>\n    </View>\n  );\n};\n// <For each={blocks()}>{(item) => <node x={/*@once*/ item.x} y={/*@once*/ item.y} width={/*@once*/ item.width} height={/*@once*/ item.height} color={/*@once*/ item.color} borderRadius={/*@once*/ item.borderRadius} />}</For>\n// <node x={item().x} y={item().y} width={item().width} height={item().height} color={item().color} borderRadius={item().borderRadius} />\n// <node x={/*once*/ item().x} y={/*@once*/ item().y} width={/*@once*/ item().width} height={/*@once*/ item().height} color={/*@once*/ item().color} borderRadius={/*@once*/ item().borderRadius} />\nexport default TilePage;\n","import { Text, View, hexColor } from \"@lightningtv/solid\";\nimport { Index, Show, createSignal, onCleanup } from \"solid-js\";\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst HEIGHT = 600;\nconst WIDTH = 800;\n\nconst generateRandomColor = () =>\n  (0xff000000 | Math.floor(Math.random() * 0xffffff)) >>> 0;\n\nconst MapPage = () => {\n  const [blocks, setBlocks] = createSignal([]);\n  let blockContainer;\n\n  const handleTPress = () => {\n    const _blocks = [];\n\n    // To tear down and recreate uncomment next line\n    // setBlocks([]);\n\n    for (let step = 0; step < 1000; step++) {\n      _blocks.push({\n        width: random(50, 100),\n        height: random(50, 100),\n        x: random(0, WIDTH),\n        y: random(0, HEIGHT),\n        color: generateRandomColor(),\n      });\n    }\n\n    setBlocks(_blocks);\n\n    // // Direct updating\n    // for (let step = 0; step < 1000; step++) {\n    //   let c = blockContainer.children[step];\n    //   c.width = random(50, 100);\n    //   c.height = random(50, 100);\n    //   c.x = random(0, WIDTH);\n    //   c.y = random(0, HEIGHT);\n    //   c.color = generateRandomColor();\n    // }\n  };\n\n  const interval = setInterval(() => {\n    handleTPress();\n  }, 2000);\n\n  onCleanup(() => {\n    clearInterval(interval);\n  });\n\n  return (\n    <View ref={blockContainer} style={{ color: hexColor(\"#f0f0f0\") }}>\n      {blocks().map((item) => (\n        <node\n          x={item.x}\n          y={item.y}\n          width={item.width}\n          height={item.height}\n          color={item.color}\n          effects={{ radius: { radius: item.borderRadius } }}\n        />\n      ))}\n    </View>\n  );\n};\n// <For each={blocks()}>{(item) => <node x={/*@once*/ item.x} y={/*@once*/ item.y} width={/*@once*/ item.width} height={/*@once*/ item.height} color={/*@once*/ item.color} borderRadius={/*@once*/ item.borderRadius} />}</For>\n// <node x={item().x} y={item().y} width={item().width} height={item().height} color={item().color} borderRadius={item().borderRadius} />\n// <node x={/*once*/ item().x} y={/*@once*/ item().y} width={/*@once*/ item().width} height={/*@once*/ item().height} color={/*@once*/ item().color} borderRadius={/*@once*/ item().borderRadius} />\nexport default MapPage;\n","import { Text, View, hexColor } from \"@lightningtv/solid\";\nimport { Index, Show, createSignal, onCleanup } from \"solid-js\";\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst generateRandomColor = () =>\n  (0xff000000 | Math.floor(Math.random() * 0xffffff)) >>> 0;\nconst HEIGHT = 600;\nconst WIDTH = 800;\n\nconst IndexPage = () => {\n  const [blocks, setBlocks] = createSignal([]);\n  let blockContainer;\n\n  const handleTPress = () => {\n    const _blocks = [];\n\n    // To tear down and recreate uncomment next line\n    // setBlocks([]);\n\n    for (let step = 0; step < 1000; step++) {\n      _blocks.push({\n        width: random(50, 100),\n        height: random(50, 100),\n        x: random(0, WIDTH),\n        y: random(0, HEIGHT),\n        color: generateRandomColor(),\n      });\n    }\n\n    setBlocks(_blocks);\n\n    // Direct updating\n    // for (let step = 0; step < 1000; step++) {\n    //   let c = blockContainer.children[step];\n    //   c.width = random(50, 100);\n    //   c.height = random(50, 100);\n    //   c.x = random(0, WIDTH);\n    //   c.y = random(0, HEIGHT);\n    //   c.color = generateRandomColor();\n    // }\n  };\n\n  const interval = setInterval(() => {\n    handleTPress();\n  }, 2000);\n\n  onCleanup(() => {\n    clearInterval(interval);\n  });\n\n  return (\n    <View ref={blockContainer} style={{ color: hexColor(\"#f0f0f0\") }}>\n      <Index each={blocks()}>\n        {(item) => (\n          <node\n            x={item().x}\n            y={item().y}\n            width={item().width}\n            height={item().height}\n            color={item().color}\n            effects={{ radius: { radius: item().borderRadius } }}\n          />\n        )}\n      </Index>\n    </View>\n  );\n};\n// <For each={blocks()}>{(item) => <node x={/*@once*/ item.x} y={/*@once*/ item.y} width={/*@once*/ item.width} height={/*@once*/ item.height} color={/*@once*/ item.color} borderRadius={/*@once*/ item.borderRadius} />}</For>\n// <node x={item().x} y={item().y} width={item().width} height={item().height} color={item().color} borderRadius={item().borderRadius} />\n// <node x={/*once*/ item().x} y={/*@once*/ item().y} width={/*@once*/ item().width} height={/*@once*/ item().height} color={/*@once*/ item().color} borderRadius={/*@once*/ item().borderRadius} />\nexport default IndexPage;\n","import { Text, View, hexColor } from \"@lightningtv/solid\";\nimport { For, Show, createSignal, onCleanup } from \"solid-js\";\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst generateRandomColor = () =>\n  (0xff000000 | Math.floor(Math.random() * 0xffffff)) >>> 0;\n\nconst HEIGHT = 600;\nconst WIDTH = 800;\n\nconst ForPage = () => {\n  const [blocks, setBlocks] = createSignal([]);\n  let blockContainer;\n\n  const handleTPress = () => {\n    const _blocks = [];\n\n    // To tear down and recreate uncomment next line\n    // setBlocks([]);\n\n    if (blocks().length === 0) {\n      for (let step = 0; step < 1000; step++) {\n        _blocks.push({\n          width: random(50, 100),\n          height: random(50, 100),\n          x: random(0, WIDTH),\n          y: random(0, HEIGHT),\n          color: generateRandomColor(),\n        });\n      }\n\n      setBlocks(_blocks);\n    } else {\n      // Direct updating\n      const updateBlocks = blocks();\n      for (let step = 0, length = updateBlocks.length; step < 1000; step++) {\n        let c = updateBlocks[step];\n        c.width = random(50, 100);\n        c.height = random(50, 100);\n        c.x = random(0, WIDTH);\n        c.y = random(0, HEIGHT);\n        c.color = generateRandomColor();\n      }\n      setBlocks([...updateBlocks]);\n    }\n  };\n\n  const interval = setInterval(() => {\n    handleTPress();\n  }, 2000);\n\n  onCleanup(() => {\n    clearInterval(interval);\n  });\n\n  return (\n    <View ref={blockContainer} style={{ color: hexColor(\"#f0f0f0\") }}>\n      <For each={blocks()}>\n        {(item) => (\n          <View\n            x={item.x}\n            y={item.y}\n            width={item.width}\n            height={item.height}\n            color={item.color}\n            effects={{ radius: { radius: item.borderRadius } }}\n          />\n        )}\n      </For>\n    </View>\n  );\n};\n// <For each={blocks()}>{(item) => <node x={/*@once*/ item.x} y={/*@once*/ item.y} width={/*@once*/ item.width} height={/*@once*/ item.height} color={/*@once*/ item.color} borderRadius={/*@once*/ item.borderRadius} />}</For>\n// <node x={item().x} y={item().y} width={item().width} height={item().height} color={item().color} borderRadius={item().borderRadius} />\n// <node x={/*once*/ item().x} y={/*@once*/ item().y} width={/*@once*/ item().width} height={/*@once*/ item().height} color={/*@once*/ item().color} borderRadius={/*@once*/ item().borderRadius} />\nexport default ForPage;\n","import { View } from \"@lightningtv/solid\";\nimport { useFocusManager } from \"@lightningtv/solid/primitives\";\n\nconst App = (props) => {\n  useFocusManager();\n\n  //const navigate = useNavigate();\n  // const announcer = useAnnouncer();\n  // announcer.debug = false;\n  // announcer.enabled = false;\n\n  return (\n    <View\n      ref={window.APP}\n      // onAnnouncer={() => announcer.enabled = !announcer.enabled}\n      onLast={() => history.back()}\n      onText={() => navigate(\"/text\")}\n      onCounter={() => navigate(\"/counter\")}\n      onButtons={() => navigate(\"/buttons\")}\n      onMenu={() => navigate(\"/\")}\n    >\n      {props.children}\n    </View>\n  );\n};\n\nexport default App;\n","import { createRenderer, Config } from \"@lightningtv/solid\";\nimport { HashRouter } from \"@lightningtv/solid/primitives\";\nimport { Route } from \"@solidjs/router\";\nimport DirectUpdate from \"./pages/DirectUpdate\";\nimport TilePage from \"./pages/Tile\";\nimport TileOnePage from \"./pages/TileOne\";\nimport MapPage from \"./pages/Map\";\nimport IndexPage from \"./pages/Index\";\nimport ForPage from \"./pages/For\";\nimport { WebGlCoreRenderer } from \"@lightningjs/renderer/webgl\";\nimport App from \"./pages/App\";\n\n//import coreExtensionModuleUrl from './AppCoreExtensions.js?importChunkUrl';\n\nConfig.debug = false;\nConfig.fontSettings.fontFamily = \"Ubuntu\";\nConfig.fontSettings.color = 0xffffffff;\nConfig.rendererOptions = {\n  //coreExtensionModule: coreExtensionModuleUrl,\n  numImageWorkers: 2,\n  enableInspector: false,\n  renderEngine: WebGlCoreRenderer,\n  fontEngines: [],\n  // deviceLogicalPixelRatio: 1\n};\n\nconst { render } = createRenderer();\nrender(() => (\n  <HashRouter root={(props) => <App {...props} />}>\n    <Route path=\"\" component={DirectUpdate} />\n    <Route path=\"tile\" component={TilePage} />\n    <Route path=\"tileone\" component={TileOnePage} />\n    <Route path=\"for\" component={ForPage} />\n    <Route path=\"map\" component={MapPage} />\n    <Route path=\"index\" component={IndexPage} />\n  </HashRouter>\n));\n"],"names":["createWebGLContext","canvas","forceWebGL2","contextSpy","config","gl","target","prop","value","assertTruthy","condition","message","isProductionEnvironment","mergeColorProgress","rgba1","rgba2","p","r1","g1","b1","a1","r2","g2","b2","a2","r","g","b","a","premultiplyRGB","setPremultiplyMode","mode","mergeColorAlphaPremultiplied","rgba","alpha","flipEndianess","newAlpha","rgbAlpha","hasOwn","obj","__vite_import_meta_env__","nextId","getNewId","EventEmitter","__publicField","event","listener","listeners","index","onceListener","data","TextureType","Texture","txManager","owner","renderable","oldSize","newSize","_a","_b","state","errorOrDimensions","payload","props","PROTOCOL_REGEX","getNormalizedRgbaComponents","createBound","x1","y1","x2","y2","out","intersectRect","x","y","width","height","copyRect","compareRect","boundInsideBound","bound1","bound2","boundLargeThanBound","createPreloadBounds","strictBound","boundsMargin","convertUrlToAbsolute","url","path","basePath","baseUrl","isBase64Image","src","Matrix3d","tempMatrix","e0","e1","e2","e3","e4","e5","sx","sy","angle","cos","sin","dst","other","rx1","rx2","rx3","rx4","ry1","ry2","ry3","ry4","RenderCoords","entries","x3","y3","x4","y4","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","t","cbx","cbxd","dx","it","minT","maxT","timingMapping","timingLookup","defaultTiming","parseCubicBezier","str","regex","match","num1","num2","num3","num4","timing","getTimingFunction","lookup","bytesToMb","bytes","CoreAnimation","node","settings","key","shaderPropKeys","spLength","j","effectName","effect","effectProps","eLength","k","easing","delay","valueMap","i","dynEntries","dynEntriesL","s","e","propName","propValue","startValue","endValue","easingProgressValue","dt","duration","loop","stopMethod","delayFor","CoreAnimationController","manager","animation","resolve","_animation","CoreNodeRenderState","CoreNodeRenderStateMap","UpdateType","CoreNode","stage","_","dimensions","error","texture","type","parent","rotation","scaleX","scaleY","mountTranslateX","mountTranslateY","pivotTranslateX","pivotTranslateY","resizeModeScaleX","resizeModeScaleY","extraX","extraY","tw","th","txAspectRatio","nodeAspectRatio","scaledTxHeight","scaledTxWidth","delta","parentClippingRect","renderState","length","child","childClippingRect","rttNode","renderCoords","transform","tb","tc","parentBound","tx","ty","_x","_y","previous","newIsRenderable","needsTextureOwnership","isRenderable","ta","td","minX","maxX","minY","maxY","clippingRect","gt","clipping","isRotated","z","zIndex","renderer","_c","newParent","oldParent","imageUrl","oldTexture","v","startLoop","isIdle","runLoop","getTimeStamp","AnimationManager","createImageWorker","hasAlphaChannel","mimeType","getImage","premultiplyAlpha","options","reject","xhr","blob","id","ImageWorkerManager","numImageWorkers","createImageBitmapSupport","worker","msg","numWorkers","workerCode","blobURL","workers","sw","sh","nextWorker","_ColorTexture","color","pixelData","ColorTexture","isCompressedTextureContainer","loadCompressedTexture","arrayBuffer","loadKTXData","loadPVRData","buffer","view","littleEndian","mipmaps","offset","imageSize","header","dataOffset","pvrtcData","level","isSvgImage","loadSvg","ctx","img","w","h","err","fetchJson","responseType","_ImageTexture","hasAlpha","imageBitmapSupported","response","resp","absoluteSrc","resolvedProps","dimensionProps","ImageTexture","_NoiseTexture","size","pixelData8","NoiseTexture","_SubTexture","parentTx","SubTexture","_RenderTexture","RenderTexture","CoreTextureManager","result","pngBinaryData","support","bitmap","bitmapWithOptions","bitmapWithFullOptions","textureType","textureClass","TextureClass","cacheKey","downloadIndex","uploadIndex","priority","maxProcessingTime","startTime","keyCache","inverseKeyCache","weightConversions","fontWeightToNumber","weight","resolveFontToUse","familyMapsByPriority","family","weightIn","style","stretch","fontFamiles","fontFaces","weightMap","fontFace","fontFamilyWeight","TrFontManager","textRenderers","font","trId","tr","rendererType","fontFamily","fontWeight","fontStyle","fontStretch","fontCacheString","resolvedFont","CoreShader","createShader","glw","source","shader","glError","createProgram","vertexShader","fragmentShader","program","WebGlCoreShader","webGl2","requiredExtensions","glVersion","extensionName","shaderSources","textureUnits","vertexSource","fragmentSource","attributeName","location","uniform","attribute","loc","propsA","propsB","renderOp","parentHasRenderTexture","renderToTexture","name","resolvedBuffer","resolvedInfo","textures","DefaultShader","DefaultShaderBatched","samplers","idx","ShaderEffect","ref","uniformInfo","passParameters","declaredUniforms","uniforms","unif","uniType","uniformName","define","res","u","uni","effectCache","getResolvedEffect","effects","effectContructors","resolvedEffects","effectsLength","resolvedEffect","effectConstructor","defaultPropValues","uniformKeys","uniformsLength","validatedValue","_DynamicShader","effectsL","propKeys","propsLength","method","propsEffectsLen","effectA","effectB","effectNameCount","methods","declareUniforms","uFx","baseClass","nr","fxClass","effectMethods","fx","fxProps","remap","m","cm","fxMethod","onShaderMask","onColorize","onEffectMask","reg","methodParameters","pm","sharedMethods","currentMask","drawEffects","current","currentClass","next","effectMethod","methodCollection","increment","DynamicShader","RoundedRectangle","radiusFactor","IDENTITY_MATRIX_3x3","_SdfShader","components","SdfShader","updateShaderEffectColor","values","floatArray","updateFloat32ArrayLength2","updateFloat32ArrayLength4","updateFloat32ArrayLengthN","len","programValue","validateArrayLength4","isArray","updateWebSafeRadius","shaderProps","storedDimensions","$dimensions","r0","r3","factor","RadiusEffect","BorderEffect","_LinearGradientEffect","colors","stops","colorsL","tmp","rgbas","acc","val","amount","LinearGradientEffect","GrayscaleEffect","BorderRightEffect","BorderTopEffect","BorderBottomEffect","BorderLeftEffect","GlitchEffect","FadeOutEffect","_RadialGradientEffect","RadialGradientEffect","RadialProgressEffect","HolePunchEffect","UnsupportedShader","shType","ShaderController","keys","l","definedProps","DynamicShaderController","shManager","effectConstructors","effectType","definedEffectProps","propEntries","propEntriesLength","CoreShaderManager","shClass","effectClass","ShaderClass","trPropSetterDefaults","TextRenderer","propSetters","propSet","status","ContextSpy","TextureMemoryManager","criticalThreshold","targetFraction","lastMemUse","byteSize","critical","memTarget","timestamp","renderableTexturesLoaded","renderableMemUsed","CoreContextTexture","memManager","textureSource","CoreRenderer","CoreTextNode","textRenderer","contain","setWidth","setHeight","calcWidth","calcHeight","textRendererState","santizeCustomDataMap","validTypes","valueType","bufferMemory","Stage","clearColor","appWidth","appHeight","enableContextSpy","textureMemory","renderEngine","fontEngines","bm","rendererOptions","renderMode","fontEngineConstructor","fontEngineInstance","className","rootNode","newFrameTime","animationManager","renderRequested","fpsUpdateInterval","fps","quads","trProps","textRendererOverride","rendererId","overrideFallback","possibleRenderer","resolvedTextRenderer","fontSize","colorTl","colorTr","colorBl","colorBr","RendererMain","resolvedTxSettings","_d","_e","resolvedSettings","deviceLogicalPixelRatio","devicePhysicalPixelRatio","inspector","deviceLogicalWidth","deviceLogicalHeight","targetEl","textNode","shaderType","root","findNode","found","CoreRenderOp","WebGlCoreRenderOp","buffers","bufferIdx","framebufferDimensions","maxTextures","existingIdx","texturesLength","quadIdx","pixelRatio","canvasHeight","clipX","clipWidth","clipHeight","clipY","getWebGlParameters","params","getWebGlExtensions","extensions","createIndexBuffer","maxQuads","indices","isHTMLImageElement","TRANSPARENT_TEXTURE_DATA","WebGlCoreCtxTexture","textureData","tdata","format","formatBytes","memoryPadding","glInternalFormat","nativeTexture","WebGlCoreCtxSubTexture","BufferCollection","item","isWebGl2","WebGlContextWrapper","maxTextureUnits","scissorBox","textureUnit","activeTextureUnit","texture2dUnits","pname","param","texture2dParams","activeTexture","textureParams","internalFormat","widthOrFormat","heightOrType","borderOrSource","pixels","internalformat","border","framebuffer","red","green","blue","enable","scissorEnabled","scissorX","scissorY","scissorWidth","scissorHeight","blend","blendEnabled","blendSrcRgb","blendDstRgb","blendSrcAlpha","blendDstAlpha","attachment","usage","boundArrayBuffer","boundElementArrayBuffer","normalized","stride","curProgram","v0","v1","v2","v3","count","vertexArray","WebGlCoreCtxRenderTexture","WORDS_PER_QUAD","WebGlCoreRenderer","quadBuffer","fQuadBuffer","uiQuadBuffer","curRenderOp","targetDims","targetShader","texCoordX1","texCoordY1","texCoordX2","texCoordY2","parentW","parentH","resizeMode","scale","precision","desiredSize","flipY","ctxTexture","textureIdx","rightCornerX","rightCornerY","recursive","rtt","surface","arr","QUAD_SIZE_IN_BYTES","insertIndex","currentNode","parentIndex","maxChildIndex","maxIndex","traverseChildren","currentIndex","normalizedColor","startLightningRenderer","rootId","Config","NodeType","log","args","isFunc","isFunction","isString","isNumber","isInteger","isINode","isElementNode","ElementNode","isElementText","isTextNode","keyExists","States","callback","initialState","__super","_key","force","newStates","stateIndexToRemove","calculateFlex","children","hasOrder","growSize","numChildren","isRow","dimension","crossDimension","marginOne","crossMarginOne","marginTwo","crossMarginTwo","crossProp","containerSize","containerCrossSize","gap","justify","align","containerUpdated","flexBasis","prev","growFactor","itemSize","crossAlignChild","crossStart","alignSelf","newHeight","start","crossGap","nextSize","calculatedSize","toPad","keyMapEntries","keyHoldMapEntries","flattenKeyMap","keyMap","targetMap","needFocusDebugStyles","addFocusDebug","prevFocusPath","newFocusPath","elm","activeElement","setActiveElement","updateFocusPath","focusPath","currentFocusedElm","prevFocusedElm","fp","propagateKeyPress","mappedEvent","isHold","isUp","finalFocusElm","numItems","captureKey","captureHandler","eventHandler","fallbackHandler","DEFAULT_KEY_HOLD_THRESHOLD","keyHoldTimeouts","handleKeyEvents","keydown","keyup","mappedKeyHoldEvent","mappedKeyEvent","useFocusManager","userKeyMap","keyHoldOptions","ownerContext","cb","runKeyEvent","keyPressHandler","keyUpHandler","timeout","layoutQueue","runLayout","queue","convertEffectsToShader","styleEffects","borderAccessor","direction","LightningRendererNumberProps","LightningRendererNonAnimatingProps","beforeNode","nodeIndexToRemove","selectedIndex","element","shProps","animationSettings","animationController","animationEvents","handler","controller","capitalizedEvent","focusedIndex","nodes","destroyPromise","states","stylesToUndo","styleKey","numStates","newStyles","styles","topNode","textProps","_inode","createEffectAccessor","radius","IS_DEV","equalFn","$PROXY","SUPPORTS_PROXY","$TRACK","signalOptions","runEffects","runQueue","STALE","PENDING","UNOWNED","Owner","Transition","ExternalSourceConfig","Listener","Updates","Effects","ExecCount","createRoot","fn","detachedOwner","unowned","updateFn","untrack","cleanNode","runUpdates","createSignal","setter","writeSignal","readSignal","createRenderEffect","createComputation","updateComputation","createEffect","runUserEffects","createMemo","batch","on","deps","prevInput","defer","prevValue","input","onCleanup","getOwner","runWithOwner","o","prevListener","handleError","startTransition","transPending","setTransPending","createContext","defaultValue","createProvider","useContext","context","memo","resolveChildren","updates","lookUpstream","sSlot","isComp","TransitionRunning","markDownstream","runComputation","nextValue","init","pure","runTop","ancestors","wait","completeUpdates","userLength","ignore","obs","castError","results","FALLBACK","dispose","mapArray","list","mapFn","items","mapped","disposers","indexes","newItems","newLen","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","end","newEnd","disposer","mapper","set","indexArray","signals","createComponent","Comp","trueFn","propTraps","property","receiver","resolveSource","resolveSources","mergeProps","sources","proxy","sourcesMap","defined","sourceKeys","desc","definedKeys","narrowedError","For","fallback","Index","Show","keyed","conditionValue","hexColor","createRenderer$1","createElement","createTextNode","replaceText","insertNode","removeNode","setProperty","getParentNode","getFirstChild","getNextSibling","insert","accessor","marker","initial","insertExpression","unwrapArray","multi","cleanChildren","array","normalizeIncomingArray","replacement","appendNodes","reconcileArrays","replaceNode","unwrap","dynamic","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","map","sequence","removed","inserted","el","isParent","newNode","oldNode","spreadExpression","prevProps","skipChildren","code","arg","createRenderer","nodeOpts","text","anchor","solidRenderer","solidCreateRenderer","render","tasksEnabled","processTasks","spread","setProp","taskQueue","task","View","setFocusPath","this","activeElm","cleanup","focusPathCore","useFocusManagerCore","isServer","createBeforeLeave","subscribe","confirm","to","depth","saveCurrentDepth","keepDepth","notifyIfNotBlocked","notify","block","prevDepth","hasSchemeRegex","trimPathRegex","mockBase","normalizePath","omitSlash","resolvePath","base","from","fromPath","joinPaths","extractSearchParams","createMatcher","partial","matchFilters","pattern","splat","segments","locSegments","lenDiff","matchFilter","segment","locSegment","matchSegment","remainder","filter","isEqual","scoreRoute","route","score","createMemoObject","expandOptionals","prefix","suffix","prefixes","expansion","MAX_REDIRECTS","RouterContextObj","RouteContextObj","createRoutes","routeDef","component","preload","load","info","isLeaf","shared","asArray","originalPath","expandedPath","createBranch","routes","matches","createBranches","stack","branches","routeDefs","def","isEmptyArray","branch","getRouteMatches","createLocation","queryWrapper","origin","path_","pathname","search","hash","queryFn","intent","getIntent","createRouterContext","integration","getContext","setSource","utils","parsePath","renderPath","beforeLeave","isRouting","setIsRouting","lastTransitionTarget","transition","newIntent","newTarget","reference","setReference","setState","submissions","subs","navigateEnd","referrers","buildParams","baseRoute","navigatorFactory","preloadRoute","navigateFromRoute","queryOnly","replace","scroll","nextState","resolvedTo","first","preloadData","prevIntent","createRouteContext","router","outlet","createRouterComponent","routerState","singleFlight","transformUrl","create","_$createComponent","Provider","Root","rootPreload","rootLoad","_$memo","Routes","when","routeStates","nextMatches","prevMatches","equal","prevMatch","nextMatch","createOutlet","splice","forEach","Route","childRoutes","intercept","setValue","get","createRouter","wrap","signal","hashParser","bindEvent","HashRouter","getSource","getQuery","createMemoWithoutProxy","collectDynamicParams","allKeys","dynamicParams","random","min","max","Math","floor","HEIGHT","WIDTH","generateRandomColor","DirectUpdate","blocks","setBlocks","blockContainer","handleTPress","_blocks","step","push","borderRadius","interval","setInterval","clearInterval","r$","_ref$","each","Tile","TilePage","toString","MapPage","_el$","_$createElement","_$effect","_p$","_v$","_v$2","_v$3","_v$4","_v$5","_v$6","_$setProp","n","undefined","IndexPage","ForPage","updateBlocks","App","window","APP","onLast","history","back","onText","navigate","onCounter","onButtons","onMenu","debug","fontSettings","enableInspector","TileOnePage"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90]}