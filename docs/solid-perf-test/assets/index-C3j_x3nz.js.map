{"version":3,"file":"index-C3j_x3nz.js","sources":["../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/lib/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/lib/Matrix3d.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/lib/RenderCoords.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimation.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimationController.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/CoreNode.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/platform.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/animations/AnimationManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/textures/Texture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/lib/ImageWorker.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/textures/ColorTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/lib/textureCompression.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/lib/textureSvg.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/textures/ImageTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/textures/NoiseTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/textures/SubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/textures/RenderTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/CoreTextureManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/TrFontManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShaderBatched.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/ShaderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DynamicShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/RoundedRectangle.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/SdfShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/EffectUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadiusEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/LinearGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GrayscaleEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderRightEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderTopEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderBottomEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderLeftEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GlitchEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/FadeOutEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadialGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadialProgressEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/HolePunchEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/canvas/shaders/UnsupportedShader.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/main-api/ShaderController.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/main-api/DynamicShaderController.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/CoreShaderManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/TextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/lib/ContextSpy.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/TextureMemoryManager.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreContextTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/CoreTextNode.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/main-api/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/Stage.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/main-api/Renderer.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/lib/WebGlContextWrapper.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxRenderTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@2.1.2/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../node_modules/.pnpm/@lightningtv+core@2.1.6_@lightningjs+renderer@2.1.2/node_modules/@lightningtv/core/dist/src/lightningInit.js","../../node_modules/.pnpm/@lightningtv+core@2.1.6_@lightningjs+renderer@2.1.2/node_modules/@lightningtv/core/dist/src/config.js","../../node_modules/.pnpm/@lightningtv+core@2.1.6_@lightningjs+renderer@2.1.2/node_modules/@lightningtv/core/dist/src/utils.js","../../node_modules/.pnpm/@lightningtv+core@2.1.6_@lightningjs+renderer@2.1.2/node_modules/@lightningtv/core/dist/src/states.js","../../node_modules/.pnpm/@lightningtv+core@2.1.6_@lightningjs+renderer@2.1.2/node_modules/@lightningtv/core/dist/src/nodeTypes.js","../../node_modules/.pnpm/@lightningtv+core@2.1.6_@lightningjs+renderer@2.1.2/node_modules/@lightningtv/core/dist/src/flex.js","../../node_modules/.pnpm/@lightningtv+core@2.1.6_@lightningjs+renderer@2.1.2/node_modules/@lightningtv/core/dist/src/focusManager.js","../../node_modules/.pnpm/@lightningtv+core@2.1.6_@lightningjs+renderer@2.1.2/node_modules/@lightningtv/core/dist/src/elementNode.js","../../node_modules/.pnpm/solid-js@1.8.22/node_modules/solid-js/dist/solid.js","../../node_modules/.pnpm/@lightningtv+solid@2.1.2_@lightningjs+renderer@2.1.2_solid-js@1.8.22/node_modules/@lightningtv/solid/src/activeElement.ts","../../node_modules/.pnpm/@lightningtv+solid@2.1.2_@lightningjs+renderer@2.1.2_solid-js@1.8.22/node_modules/@lightningtv/solid/src/utils.ts","../../node_modules/.pnpm/solid-js@1.8.22/node_modules/solid-js/universal/dist/universal.js","../../node_modules/.pnpm/@lightningtv+solid@2.1.2_@lightningjs+renderer@2.1.2_solid-js@1.8.22/node_modules/@lightningtv/solid/src/solidOpts.ts","../../node_modules/.pnpm/@lightningtv+solid@2.1.2_@lightningjs+renderer@2.1.2_solid-js@1.8.22/node_modules/@lightningtv/solid/src/render.ts","../../src/pages/HelloWorld.jsx","../../src/index.jsx"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas, contextSpy) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        // Disabled because it prevents Visual Regression Tests from working\n        // failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    const gl = \n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config));\n    if (!gl) {\n        throw new Error('Unable to create WebGL context');\n    }\n    if (contextSpy) {\n        // Proxy the GL context to log all GL calls\n        return new Proxy(gl, {\n            get(target, prop) {\n                const value = target[prop];\n                if (typeof value === 'function') {\n                    contextSpy.increment(String(prop));\n                    return value.bind(target);\n                }\n                return value;\n            },\n        });\n    }\n    return gl;\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (isProductionEnvironment())\n        return;\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\nlet premultiplyRGB = true;\n/**\n * RGB components should not be premultiplied when using Canvas renderer\n * @param mode  Renderer mode\n */\nexport function setPremultiplyMode(mode) {\n    premultiplyRGB = mode === 'webgl';\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * For the webGl renderer, each color channel is premultiplied by the final alpha value.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: Depending on the mode set by {@link setPremultiplyMode}, this method returns\n * a PREMULTIPLIED alpha color which is generally only useful in the context of the\n * internal rendering process. Use {@link mergeColorAlpha} if you need to blend an alpha\n * value into a color in the context of the Renderer's main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const rgbAlpha = premultiplyRGB ? newAlpha : 1;\n    const r = Math.trunc((rgba >>> 24) * rgbAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * rgbAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * rgbAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n/**\n * Returns image aspect ratio\n *\n * @param width\n * @param height\n * @returns\n */\nexport function getImageAspectRatio(width, height) {\n    return width / height;\n}\n/**\n * Checks import.meta if env is production\n *\n * @returns\n */\nexport function isProductionEnvironment() {\n    return import.meta.env && import.meta.env.PROD;\n}\n/**\n * Returns a new unique ID\n */\nlet nextId = 1;\nexport function getNewId() {\n    return nextId++;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const PROTOCOL_REGEX = /^(data|ftps?|https?):/;\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function createBound(x1, y1, x2, y2, out) {\n    if (out) {\n        out.x1 = x1;\n        out.y1 = y1;\n        out.x2 = x2;\n        out.y2 = y2;\n        return out;\n    }\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\nexport function intersectBound(a, b, out) {\n    const intersection = createBound(Math.max(a.x1, b.x1), Math.max(a.y1, b.y1), Math.min(a.x2, b.x2), Math.min(a.y2, b.y2), out);\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return createBound(0, 0, 0, 0, intersection);\n}\nexport function boundsOverlap(a, b) {\n    return a.x1 < b.x2 && a.x2 > b.x1 && a.y1 < b.y2 && a.y2 > b.y1;\n}\nexport function convertBoundToRect(bound, out) {\n    if (out) {\n        out.x = bound.x1;\n        out.y = bound.y1;\n        out.width = bound.x2 - bound.x1;\n        out.height = bound.y2 - bound.y1;\n        return out;\n    }\n    return {\n        x: bound.x1,\n        y: bound.y1,\n        width: bound.x2 - bound.x1,\n        height: bound.y2 - bound.y1,\n    };\n}\nexport function intersectRect(a, b, out) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        if (out) {\n            out.x = x;\n            out.y = y;\n            out.width = width;\n            out.height = height;\n            return out;\n        }\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    if (out) {\n        out.x = 0;\n        out.y = 0;\n        out.width = 0;\n        out.height = 0;\n        return out;\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function copyRect(a, out) {\n    if (out) {\n        out.x = a.x;\n        out.y = a.y;\n        out.width = a.width;\n        out.height = a.height;\n        return out;\n    }\n    return {\n        x: a.x,\n        y: a.y,\n        width: a.width,\n        height: a.height,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function boundInsideBound(bound1, bound2) {\n    return (bound1.x1 <= bound2.x2 &&\n        bound1.y1 <= bound2.y2 &&\n        bound1.x2 >= bound2.x1 &&\n        bound1.y2 >= bound2.y1);\n}\nexport function boundLargeThanBound(bound1, bound2) {\n    return (bound1.x1 < bound2.x1 &&\n        bound1.x2 > bound2.x2 &&\n        bound1.y1 < bound2.y1 &&\n        bound1.y2 > bound2.y2);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\nexport function convertUrlToAbsolute(url) {\n    // handle local file imports if the url isn't remote resource or data blob\n    if (self.location.protocol === 'file:' && !PROTOCOL_REGEX.test(url)) {\n        const path = self.location.pathname.split('/');\n        path.pop();\n        const basePath = path.join('/');\n        const baseUrl = self.location.protocol + '//' + basePath;\n        // check if url has a leading dot\n        if (url.charAt(0) === '.') {\n            url = url.slice(1);\n        }\n        // check if url has a leading slash\n        if (url.charAt(0) === '/') {\n            url = url.slice(1);\n        }\n        return baseUrl + '/' + url;\n    }\n    const absoluteUrl = new URL(url, self.location.href);\n    return absoluteUrl.href;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A 3D matrix representing a 2D graphics transformation\n *\n * @remarks\n * For convenience, entries in the first two rows can be accessed by the following\n * properties:\n * | ta tb tx |\n * | tc td ty |\n * | 0  0  1  |\n *\n * This matrix is optimized for 2D transformations and hence the last row will\n * always be considered [0, 0 ,1].\n *\n * To access a column major array for WebGL, use the {@link getFloatArr} method.\n */\nexport class Matrix3d {\n    ta;\n    tb;\n    tx;\n    tc;\n    td;\n    ty;\n    _floatArr = null;\n    /**\n     * Potential Mutation Flag\n     *\n     * @remarks\n     * This flag is set to true whenever the matrix is potentially modified.\n     * We don't waste CPU trying to identify if each operation actually modifies\n     * the matrix. Instead, we set this flag to true whenever we think the matrix\n     * is modified. This signals that the `floatArr` should to be updated.\n     */\n    mutation;\n    /**\n     * Creates a new 3x3 matrix.\n     *\n     * @param entries Row-major 3x3 matrix\n     */\n    constructor() {\n        this.ta = 0;\n        this.tb = 0;\n        this.tx = 0;\n        this.tc = 0;\n        this.td = 0;\n        this.ty = 0;\n        this.mutation = true;\n    }\n    /**\n     * Returns a temporary matrix that can be used for calculations.\n     *\n     * @remarks\n     * This is useful for avoiding allocations in tight loops.\n     *\n     * The matrix is not guaranteed to be the same between calls.\n     *\n     * @returns\n     */\n    static get temp() {\n        return tempMatrix;\n    }\n    static multiply(a, b, out) {\n        const e0 = a.ta * b.ta + a.tb * b.tc;\n        const e1 = a.ta * b.tb + a.tb * b.td;\n        const e2 = a.ta * b.tx + a.tb * b.ty + a.tx;\n        const e3 = a.tc * b.ta + a.td * b.tc;\n        const e4 = a.tc * b.tb + a.td * b.td;\n        const e5 = a.tc * b.tx + a.td * b.ty + a.ty;\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = e0;\n        out.tb = e1;\n        out.tx = e2;\n        out.tc = e3;\n        out.td = e4;\n        out.ty = e5;\n        out.mutation = true;\n        return out;\n    }\n    static identity(out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = 1;\n        out.tb = 0;\n        out.tx = 0;\n        out.tc = 0;\n        out.td = 1;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static translate(x, y, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = 1;\n        out.tb = 0;\n        out.tx = x;\n        out.tc = 0;\n        out.td = 1;\n        out.ty = y;\n        out.mutation = true;\n        return out;\n    }\n    static scale(sx, sy, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = sx;\n        out.tb = 0;\n        out.tx = 0;\n        out.tc = 0;\n        out.td = sy;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static rotate(angle, out) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.ta = cos;\n        out.tb = -sin;\n        out.tx = 0;\n        out.tc = sin;\n        out.td = cos;\n        out.ty = 0;\n        out.mutation = true;\n        return out;\n    }\n    static copy(src, dst) {\n        if (!dst) {\n            dst = new Matrix3d();\n        }\n        dst.ta = src.ta;\n        dst.tc = src.tc;\n        dst.tb = src.tb;\n        dst.td = src.td;\n        dst.tx = src.tx;\n        dst.ty = src.ty;\n        dst.mutation = true;\n        return dst;\n    }\n    translate(x, y) {\n        this.tx = this.ta * x + this.tb * y + this.tx;\n        this.ty = this.tc * x + this.td * y + this.ty;\n        this.mutation = true;\n        return this;\n    }\n    scale(sx, sy) {\n        this.ta = this.ta * sx;\n        this.tb = this.tb * sy;\n        this.tc = this.tc * sx;\n        this.td = this.td * sy;\n        this.mutation = true;\n        return this;\n    }\n    rotate(angle) {\n        if (angle === 0 || !((angle % Math.PI) * 2)) {\n            return this;\n        }\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        const e0 = this.ta * cos + this.tb * sin;\n        const e1 = this.tb * cos - this.ta * sin;\n        const e3 = this.tc * cos + this.td * sin;\n        const e4 = this.td * cos - this.tc * sin;\n        this.ta = e0;\n        this.tb = e1;\n        this.tc = e3;\n        this.td = e4;\n        this.mutation = true;\n        return this;\n    }\n    multiply(other) {\n        return Matrix3d.multiply(this, other, this);\n    }\n    /**\n     * Returns the matrix as a Float32Array in column-major order.\n     *\n     * @remarks\n     * This method is optimized to avoid unnecessary allocations. The same array\n     * is returned every time this method is called, and is updated in place.\n     *\n     * WARNING: Use the array only for passing directly to a WebGL shader uniform\n     * during a frame render. Do not modify or hold onto the array for longer than\n     * a frame.\n     */\n    getFloatArr() {\n        if (!this._floatArr) {\n            this._floatArr = new Float32Array(9);\n        }\n        if (this.mutation) {\n            this._floatArr[0] = this.ta;\n            this._floatArr[1] = this.tc;\n            this._floatArr[2] = 0;\n            this._floatArr[3] = this.tb;\n            this._floatArr[4] = this.td;\n            this._floatArr[5] = 0;\n            this._floatArr[6] = this.tx;\n            this._floatArr[7] = this.ty;\n            this._floatArr[8] = 1;\n            this.mutation = false;\n        }\n        return this._floatArr;\n    }\n}\nconst tempMatrix = new Matrix3d();\n//# sourceMappingURL=Matrix3d.js.map","const rx1 = 0;\nconst rx2 = 2;\nconst rx3 = 4;\nconst rx4 = 6;\nconst ry1 = 1;\nconst ry2 = 3;\nconst ry3 = 5;\nconst ry4 = 7;\nexport class RenderCoords {\n    data;\n    constructor(entries) {\n        this.data = new Float32Array(8);\n        if (entries) {\n            this.data[rx1] = entries[rx1];\n            this.data[rx2] = entries[rx2];\n            this.data[rx3] = entries[rx3];\n            this.data[rx4] = entries[rx4];\n            this.data[ry1] = entries[ry1];\n            this.data[ry2] = entries[ry2];\n            this.data[ry3] = entries[ry3];\n            this.data[ry4] = entries[ry4];\n        }\n    }\n    static translate(x1, y1, x2, y2, x3, y3, x4, y4, out) {\n        if (!out) {\n            out = new RenderCoords();\n        }\n        out.data[rx1] = x1;\n        out.data[rx2] = x2;\n        out.data[rx3] = x3;\n        out.data[rx4] = x4;\n        out.data[ry1] = y1;\n        out.data[ry2] = y2;\n        out.data[ry3] = y3;\n        out.data[ry4] = y4;\n        return out;\n    }\n    get x1() {\n        return this.data[rx1];\n    }\n    get x2() {\n        return this.data[rx2];\n    }\n    get x3() {\n        return this.data[rx3];\n    }\n    get x4() {\n        return this.data[rx4];\n    }\n    get y1() {\n        return this.data[ry1];\n    }\n    get y2() {\n        return this.data[ry2];\n    }\n    get y3() {\n        return this.data[ry3];\n    }\n    get y4() {\n        return this.data[ry4];\n    }\n}\n//# sourceMappingURL=RenderCoords.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nconst timingMapping = {};\nconst timingLookup = {\n    ease: [0.25, 0.1, 0.25, 1.0],\n    'ease-in': [0.42, 0, 1.0, 1.0],\n    'ease-out': [0, 0, 0.58, 1.0],\n    'ease-in-out': [0.42, 0, 0.58, 1.0],\n    'ease-in-sine': [0.12, 0, 0.39, 0],\n    'ease-out-sine': [0.12, 0, 0.39, 0],\n    'ease-in-out-sine': [0.37, 0, 0.63, 1],\n    'ease-in-cubic': [0.32, 0, 0.67, 0],\n    'ease-out-cubic': [0.33, 1, 0.68, 1],\n    'ease-in-out-cubic': [0.65, 0, 0.35, 1],\n    'ease-in-circ': [0.55, 0, 1, 0.45],\n    'ease-out-circ': [0, 0.55, 0.45, 1],\n    'ease-in-out-circ': [0.85, 0, 0.15, 1],\n    'ease-in-back': [0.36, 0, 0.66, -0.56],\n    'ease-out-back': [0.34, 1.56, 0.64, 1],\n    'ease-in-out-back': [0.68, -0.6, 0.32, 1.6],\n};\nconst defaultTiming = (t) => t;\nconst parseCubicBezier = (str) => {\n    //cubic-bezier(0.84, 0.52, 0.56, 0.6)\n    const regex = /-?\\d*\\.?\\d+/g;\n    const match = str.match(regex);\n    if (match) {\n        const [num1, num2, num3, num4] = match;\n        const a = parseFloat(num1 || '0.42');\n        const b = parseFloat(num2 || '0');\n        const c = parseFloat(num3 || '1');\n        const d = parseFloat(num4 || '1');\n        const timing = getTimingBezier(a, b, c, d);\n        timingMapping[str] = timing;\n        return timing;\n    }\n    // parse failed, return linear\n    console.warn('Unknown cubic-bezier timing: ' + str);\n    return defaultTiming;\n};\nexport const getTimingFunction = (str) => {\n    if (str === 'linear') {\n        return defaultTiming;\n    }\n    if (timingMapping[str] !== undefined) {\n        return timingMapping[str] || defaultTiming;\n    }\n    if (str === 'step-start') {\n        return () => {\n            return 1;\n        };\n    }\n    if (str === 'step-end') {\n        return (time) => {\n            return time === 1 ? 1 : 0;\n        };\n    }\n    const lookup = timingLookup[str];\n    if (lookup !== undefined) {\n        const [a, b, c, d] = lookup;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - TS doesn't understand that we've checked for undefined\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const timing = getTimingBezier(a, b, c, d);\n        timingMapping[str] = timing;\n        return timing;\n    }\n    if (str.startsWith('cubic-bezier')) {\n        return parseCubicBezier(str);\n    }\n    console.warn('Unknown timing function: ' + str);\n    return defaultTiming;\n};\n/**\n * Convert bytes to string of megabytes with 2 decimal points\n *\n * @param bytes\n * @returns\n */\nexport function bytesToMb(bytes) {\n    return (bytes / 1024 / 1024).toFixed(2);\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../CoreNode.js';\nimport { getTimingFunction } from '../utils.js';\nimport { mergeColorProgress } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimation extends EventEmitter {\n    node;\n    props;\n    settings;\n    progress = 0;\n    delayFor = 0;\n    timingFunction;\n    propValuesMap = {};\n    dynPropValuesMap = undefined;\n    constructor(node, props, settings) {\n        super();\n        this.node = node;\n        this.props = props;\n        for (const key in props) {\n            if (key !== 'shaderProps') {\n                if (this.propValuesMap['props'] === undefined) {\n                    this.propValuesMap['props'] = {};\n                }\n                this.propValuesMap['props'][key] = {\n                    start: node[key] || 0,\n                    target: props[key],\n                };\n            }\n            else if (node.shader.type !== 'DynamicShader') {\n                this.propValuesMap['shaderProps'] = {};\n                for (const key in props.shaderProps) {\n                    this.propValuesMap['shaderProps'][key] = {\n                        start: node.shader.props[key],\n                        target: props.shaderProps[key],\n                    };\n                }\n            }\n            else {\n                const shaderPropKeys = Object.keys(props.shaderProps);\n                const spLength = shaderPropKeys.length;\n                this.dynPropValuesMap = {};\n                for (let j = 0; j < spLength; j++) {\n                    const effectName = shaderPropKeys[j];\n                    const effect = props.shaderProps[effectName];\n                    this.dynPropValuesMap[effectName] = {};\n                    const effectProps = Object.entries(effect);\n                    const eLength = effectProps.length;\n                    for (let k = 0; k < eLength; k++) {\n                        const [key, value] = effectProps[k];\n                        this.dynPropValuesMap[effectName][key] = {\n                            start: node.shader.props[effectName][key],\n                            target: value,\n                        };\n                    }\n                }\n            }\n        }\n        const easing = settings.easing || 'linear';\n        const delay = settings.delay ?? 0;\n        this.settings = {\n            duration: settings.duration ?? 0,\n            delay,\n            easing,\n            loop: settings.loop ?? false,\n            repeat: settings.repeat ?? 0,\n            repeatDelay: settings.repeatDelay ?? 0,\n            stopMethod: settings.stopMethod ?? false,\n        };\n        this.timingFunction = getTimingFunction(easing);\n        this.delayFor = delay;\n    }\n    reset() {\n        this.progress = 0;\n        this.delayFor = this.settings.delay || 0;\n        this.update(0);\n    }\n    restoreValues(target, valueMap) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            target[key] = value.start;\n        }\n    }\n    restore() {\n        this.reset();\n        if (this.propValuesMap['props'] !== undefined) {\n            this.restoreValues(this.node, this.propValuesMap['props']);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.restoreValues(this.node.shader.props, this.propValuesMap['shaderProps']);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.restoreValues(this.node.shader.props[key], this.dynPropValuesMap[key]);\n                }\n            }\n        }\n    }\n    reverseValues(valueMap) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            valueMap[key] = {\n                start: value.target,\n                target: value.start,\n            };\n        }\n    }\n    reverse() {\n        this.progress = 0;\n        if (this.propValuesMap['props'] !== undefined) {\n            this.reverseValues(this.propValuesMap['props']);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.reverseValues(this.propValuesMap['shaderProps']);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.reverseValues(this.dynPropValuesMap[key]);\n                }\n            }\n        }\n        // restore stop method if we are not looping\n        if (!this.settings.loop) {\n            this.settings.stopMethod = false;\n        }\n    }\n    applyEasing(p, s, e) {\n        return (this.timingFunction(p) || p) * (e - s) + s;\n    }\n    updateValue(propName, propValue, startValue, easing) {\n        if (this.progress === 1) {\n            return propValue;\n        }\n        if (this.progress === 0) {\n            return startValue;\n        }\n        const endValue = propValue;\n        if (propName.indexOf('color') !== -1) {\n            if (startValue === endValue) {\n                return startValue;\n            }\n            if (easing) {\n                const easingProgressValue = this.timingFunction(this.progress) || this.progress;\n                return mergeColorProgress(startValue, endValue, easingProgressValue);\n            }\n            return mergeColorProgress(startValue, endValue, this.progress);\n        }\n        if (easing) {\n            return this.applyEasing(this.progress, startValue, endValue);\n        }\n        return startValue + (endValue - startValue) * this.progress;\n    }\n    updateValues(target, valueMap, easing) {\n        const entries = Object.entries(valueMap);\n        const eLength = entries.length;\n        for (let i = 0; i < eLength; i++) {\n            const [key, value] = entries[i];\n            target[key] = this.updateValue(key, value.target, value.start, easing);\n        }\n    }\n    update(dt) {\n        const { duration, loop, easing, stopMethod } = this.settings;\n        const { delayFor } = this;\n        if (duration === 0 && delayFor === 0) {\n            this.emit('finished', {});\n            return;\n        }\n        if (this.delayFor > 0) {\n            this.delayFor -= dt;\n            if (this.delayFor >= 0) {\n                // Either no or more delay left. Exit.\n                return;\n            }\n            else {\n                // We went beyond the delay time, add it back to dt so we can continue\n                // with the animation.\n                dt = -this.delayFor;\n                this.delayFor = 0;\n            }\n        }\n        if (duration === 0) {\n            // No duration, we are done.\n            this.emit('finished', {});\n            return;\n        }\n        if (this.progress === 0) {\n            // Progress is 0, we are starting the post-delay part of the animation.\n            this.emit('animating', {});\n        }\n        this.progress += dt / duration;\n        if (this.progress > 1) {\n            this.progress = loop ? 0 : 1;\n            if (stopMethod) {\n                // If there's a stop method emit finished so the stop method can be applied.\n                // TODO: We should probably reevaluate how stopMethod is implemented as currently\n                // stop method 'reset' does not work when looping.\n                this.emit('finished', {});\n                return;\n            }\n        }\n        if (this.propValuesMap['props'] !== undefined) {\n            this.updateValues(this.node, this.propValuesMap['props'], easing);\n        }\n        if (this.propValuesMap['shaderProps'] !== undefined) {\n            this.updateValues(this.node.shader.props, this.propValuesMap['shaderProps'], easing);\n        }\n        if (this.dynPropValuesMap !== undefined) {\n            const dynEntries = Object.keys(this.dynPropValuesMap);\n            const dynEntriesL = dynEntries.length;\n            if (dynEntriesL > 0) {\n                for (let i = 0; i < dynEntriesL; i++) {\n                    const key = dynEntries[i];\n                    this.updateValues(this.node.shader.props[key], this.dynPropValuesMap[key], easing);\n                }\n            }\n        }\n        if (this.progress === 1) {\n            this.emit('finished', {});\n        }\n    }\n}\n//# sourceMappingURL=CoreAnimation.js.map","/* eslint-disable @typescript-eslint/unbound-method */\n/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimationController extends EventEmitter {\n    manager;\n    animation;\n    stoppedPromise;\n    /**\n     * If this is null, then the animation is in a finished / stopped state.\n     */\n    stoppedResolve = null;\n    state;\n    constructor(manager, animation) {\n        super();\n        this.manager = manager;\n        this.animation = animation;\n        this.state = 'stopped';\n        // Initial stopped promise is resolved (since the animation is stopped)\n        this.stoppedPromise = Promise.resolve();\n        // Bind event handlers\n        this.onAnimating = this.onAnimating.bind(this);\n        this.onFinished = this.onFinished.bind(this);\n    }\n    start() {\n        if (this.state !== 'running') {\n            this.makeStoppedPromise();\n            this.registerAnimation();\n            this.state = 'running';\n        }\n        return this;\n    }\n    stop() {\n        this.unregisterAnimation();\n        if (this.stoppedResolve !== null) {\n            this.stoppedResolve();\n            this.stoppedResolve = null;\n            this.emit('stopped', this);\n        }\n        this.animation.reset();\n        this.state = 'stopped';\n        return this;\n    }\n    pause() {\n        this.unregisterAnimation();\n        this.state = 'paused';\n        return this;\n    }\n    restore() {\n        this.stoppedResolve = null;\n        this.animation.restore();\n        return this;\n    }\n    waitUntilStopped() {\n        return this.stoppedPromise;\n    }\n    registerAnimation() {\n        // Hook up event listeners\n        this.animation.once('finished', this.onFinished);\n        this.animation.on('animating', this.onAnimating);\n        // Then register the animation\n        this.manager.registerAnimation(this.animation);\n    }\n    unregisterAnimation() {\n        // First unregister the animation\n        this.manager.unregisterAnimation(this.animation);\n        // Then unhook event listeners\n        this.animation.off('finished', this.onFinished);\n        this.animation.off('animating', this.onAnimating);\n    }\n    makeStoppedPromise() {\n        if (this.stoppedResolve === null) {\n            this.stoppedPromise = new Promise((resolve) => {\n                this.stoppedResolve = resolve;\n            });\n        }\n    }\n    onFinished() {\n        assertTruthy(this.stoppedResolve);\n        // If the animation is looping, then we need to restart it.\n        const { loop, stopMethod } = this.animation.settings;\n        if (stopMethod === 'reverse') {\n            this.animation.once('finished', this.onFinished);\n            this.animation.reverse();\n            return;\n        }\n        if (loop) {\n            return;\n        }\n        // unregister animation\n        this.unregisterAnimation();\n        // resolve promise\n        this.stoppedResolve();\n        this.stoppedResolve = null;\n        this.emit('stopped', this);\n        this.state = 'stopped';\n    }\n    onAnimating() {\n        this.emit('animating', this);\n    }\n}\n//# sourceMappingURL=CoreAnimationController.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, getNewId, mergeColorAlphaPremultiplied, } from '../utils.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { copyRect, intersectRect, createBound, boundInsideBound, boundLargeThanBound, } from './lib/utils.js';\nimport { Matrix3d } from './lib/Matrix3d.js';\nimport { RenderCoords } from './lib/RenderCoords.js';\nimport { CoreAnimation } from './animations/CoreAnimation.js';\nimport { CoreAnimationController } from './animations/CoreAnimationController.js';\nexport var CoreNodeRenderState;\n(function (CoreNodeRenderState) {\n    CoreNodeRenderState[CoreNodeRenderState[\"Init\"] = 0] = \"Init\";\n    CoreNodeRenderState[CoreNodeRenderState[\"OutOfBounds\"] = 2] = \"OutOfBounds\";\n    CoreNodeRenderState[CoreNodeRenderState[\"InBounds\"] = 4] = \"InBounds\";\n    CoreNodeRenderState[CoreNodeRenderState[\"InViewport\"] = 8] = \"InViewport\";\n})(CoreNodeRenderState || (CoreNodeRenderState = {}));\nconst CoreNodeRenderStateMap = new Map();\nCoreNodeRenderStateMap.set(CoreNodeRenderState.Init, 'init');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.OutOfBounds, 'outOfBounds');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.InBounds, 'inBounds');\nCoreNodeRenderStateMap.set(CoreNodeRenderState.InViewport, 'inViewport');\nexport var UpdateType;\n(function (UpdateType) {\n    /**\n     * Child updates\n     */\n    UpdateType[UpdateType[\"Children\"] = 1] = \"Children\";\n    /**\n     * Scale/Rotate transform update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `scaleRotateTransform`\n     */\n    UpdateType[UpdateType[\"ScaleRotate\"] = 2] = \"ScaleRotate\";\n    /**\n     * Translate transform update (x/y/width/height/pivot/mount)\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `localTransform`\n     */\n    UpdateType[UpdateType[\"Local\"] = 4] = \"Local\";\n    /**\n     * Global Transform update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `globalTransform`\n     * - `renderCoords`\n     * - `renderBound`\n     */\n    UpdateType[UpdateType[\"Global\"] = 8] = \"Global\";\n    /**\n     * Clipping rect update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `clippingRect`\n     */\n    UpdateType[UpdateType[\"Clipping\"] = 16] = \"Clipping\";\n    /**\n     * Calculated ZIndex update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `calcZIndex`\n     */\n    UpdateType[UpdateType[\"CalculatedZIndex\"] = 32] = \"CalculatedZIndex\";\n    /**\n     * Z-Index Sorted Children update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `children` (sorts children by their `calcZIndex`)\n     */\n    UpdateType[UpdateType[\"ZIndexSortedChildren\"] = 64] = \"ZIndexSortedChildren\";\n    /**\n     * Premultiplied Colors update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `premultipliedColorTl`\n     * - `premultipliedColorTr`\n     * - `premultipliedColorBl`\n     * - `premultipliedColorBr`\n     */\n    UpdateType[UpdateType[\"PremultipliedColors\"] = 128] = \"PremultipliedColors\";\n    /**\n     * World Alpha update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `worldAlpha` = `parent.worldAlpha` * `alpha`\n     */\n    UpdateType[UpdateType[\"WorldAlpha\"] = 256] = \"WorldAlpha\";\n    /**\n     * Render State update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `renderState`\n     */\n    UpdateType[UpdateType[\"RenderState\"] = 512] = \"RenderState\";\n    /**\n     * Is Renderable update\n     *\n     * @remarks\n     * CoreNode Properties Updated:\n     * - `isRenderable`\n     */\n    UpdateType[UpdateType[\"IsRenderable\"] = 1024] = \"IsRenderable\";\n    /**\n     * Render Texture update\n     */\n    UpdateType[UpdateType[\"RenderTexture\"] = 2048] = \"RenderTexture\";\n    /**\n     * Track if parent has render texture\n     */\n    UpdateType[UpdateType[\"ParentRenderTexture\"] = 4096] = \"ParentRenderTexture\";\n    /**\n     * Render Bounds update\n     */\n    UpdateType[UpdateType[\"RenderBounds\"] = 8192] = \"RenderBounds\";\n    /**\n     * None\n     */\n    UpdateType[UpdateType[\"None\"] = 0] = \"None\";\n    /**\n     * All\n     */\n    UpdateType[UpdateType[\"All\"] = 8191] = \"All\";\n})(UpdateType || (UpdateType = {}));\n/**\n * A visual Node in the Renderer scene graph.\n *\n * @remarks\n * CoreNode is an internally used class that represents a Renderer Node in the\n * scene graph. See INode.ts for the public APIs exposed to Renderer users\n * that include generic types for Shaders.\n */\nexport class CoreNode extends EventEmitter {\n    stage;\n    children = [];\n    _id = getNewId();\n    props;\n    updateType = UpdateType.All;\n    childUpdateType = UpdateType.None;\n    globalTransform;\n    scaleRotateTransform;\n    localTransform;\n    renderCoords;\n    renderBound;\n    strictBound;\n    preloadBound;\n    clippingRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n        valid: false,\n    };\n    isRenderable = false;\n    renderState = CoreNodeRenderState.Init;\n    worldAlpha = 1;\n    premultipliedColorTl = 0;\n    premultipliedColorTr = 0;\n    premultipliedColorBl = 0;\n    premultipliedColorBr = 0;\n    calcZIndex = 0;\n    hasRTTupdates = false;\n    parentHasRenderTexture = false;\n    constructor(stage, props) {\n        super();\n        this.stage = stage;\n        this.props = {\n            ...props,\n            parent: null,\n            texture: null,\n            src: null,\n            rtt: false,\n        };\n        // Assign props to instance\n        this.parent = props.parent;\n        this.texture = props.texture;\n        this.src = props.src;\n        this.rtt = props.rtt;\n        this.updateScaleRotateTransform();\n        this.setUpdateType(UpdateType.Local | UpdateType.RenderBounds | UpdateType.RenderState);\n    }\n    //#region Textures\n    loadTexture() {\n        const { texture } = this.props;\n        assertTruthy(texture);\n        // If texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            texture.preventCleanup = this.props.preventCleanup;\n            // Preload texture if required\n            if (this.textureOptions.preload) {\n                texture.ctxTexture.load();\n            }\n            if (texture.state === 'loaded') {\n                assertTruthy(texture.dimensions);\n                this.onTextureLoaded(texture, texture.dimensions);\n            }\n            else if (texture.state === 'failed') {\n                assertTruthy(texture.error);\n                this.onTextureFailed(texture, texture.error);\n            }\n            else if (texture.state === 'freed') {\n                this.onTextureFreed(texture);\n            }\n            texture.on('loaded', this.onTextureLoaded);\n            texture.on('failed', this.onTextureFailed);\n            texture.on('freed', this.onTextureFreed);\n        });\n    }\n    unloadTexture() {\n        if (this.texture) {\n            this.texture.off('loaded', this.onTextureLoaded);\n            this.texture.off('failed', this.onTextureFailed);\n            this.texture.off('freed', this.onTextureFreed);\n            this.texture.setRenderableOwner(this, false);\n        }\n    }\n    autosizeNode(dimensions) {\n        if (this.autosize) {\n            this.width = dimensions.width;\n            this.height = dimensions.height;\n        }\n    }\n    onTextureLoaded = (_, dimensions) => {\n        this.autosizeNode(dimensions);\n        // Texture was loaded. In case the RAF loop has already stopped, we request\n        // a render to ensure the texture is rendered.\n        this.stage.requestRender();\n        // If parent has a render texture, flag that we need to update\n        // @todo: Reserve type for RTT updates\n        if (this.parentHasRenderTexture) {\n            this.setRTTUpdates(1);\n        }\n        this.emit('loaded', {\n            type: 'texture',\n            dimensions,\n        });\n        // Trigger a local update if the texture is loaded and the resizeMode is 'contain'\n        if (this.props.textureOptions?.resizeMode?.type === 'contain') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    };\n    onTextureFailed = (_, error) => {\n        this.emit('failed', {\n            type: 'texture',\n            error,\n        });\n    };\n    onTextureFreed = () => {\n        this.emit('freed', {\n            type: 'texture',\n        });\n    };\n    //#endregion Textures\n    /**\n     * Change types types is used to determine the scope of the changes being applied\n     *\n     * @remarks\n     * See {@link UpdateType} for more information on each type\n     *\n     * @param type\n     */\n    setUpdateType(type) {\n        this.updateType |= type;\n        // If we're updating this node at all, we need to inform the parent\n        // (and all ancestors) that their children need updating as well\n        const parent = this.props.parent;\n        if (parent !== null && !(parent.updateType & UpdateType.Children)) {\n            parent.setUpdateType(UpdateType.Children);\n        }\n        // If node is part of RTT texture\n        // Flag that we need to update\n        if (this.parentHasRenderTexture) {\n            this.setRTTUpdates(type);\n        }\n    }\n    sortChildren() {\n        this.children.sort((a, b) => a.calcZIndex - b.calcZIndex);\n    }\n    updateScaleRotateTransform() {\n        const { rotation, scaleX, scaleY } = this.props;\n        // optimize simple translation cases\n        if (rotation === 0 && scaleX === 1 && scaleY === 1) {\n            this.scaleRotateTransform = undefined;\n            return;\n        }\n        this.scaleRotateTransform = Matrix3d.rotate(rotation, this.scaleRotateTransform).scale(scaleX, scaleY);\n    }\n    updateLocalTransform() {\n        const { x, y, width, height } = this.props;\n        const mountTranslateX = this.props.mountX * width;\n        const mountTranslateY = this.props.mountY * height;\n        if (this.scaleRotateTransform) {\n            const pivotTranslateX = this.props.pivotX * width;\n            const pivotTranslateY = this.props.pivotY * height;\n            this.localTransform = Matrix3d.translate(x - mountTranslateX + pivotTranslateX, y - mountTranslateY + pivotTranslateY, this.localTransform)\n                .multiply(this.scaleRotateTransform)\n                .translate(-pivotTranslateX, -pivotTranslateY);\n        }\n        else {\n            this.localTransform = Matrix3d.translate(x - mountTranslateX, y - mountTranslateY, this.localTransform);\n        }\n        // Handle 'contain' resize mode\n        const texture = this.props.texture;\n        if (texture &&\n            texture.dimensions &&\n            this.props.textureOptions?.resizeMode?.type === 'contain') {\n            let resizeModeScaleX = 1;\n            let resizeModeScaleY = 1;\n            let extraX = 0;\n            let extraY = 0;\n            const { width: tw, height: th } = texture.dimensions;\n            const txAspectRatio = tw / th;\n            const nodeAspectRatio = width / height;\n            if (txAspectRatio > nodeAspectRatio) {\n                // Texture is wider than node\n                // Center the node vertically (shift down by extraY)\n                // Scale the node vertically to maintain original aspect ratio\n                const scaleX = width / tw;\n                const scaledTxHeight = th * scaleX;\n                extraY = (height - scaledTxHeight) / 2;\n                resizeModeScaleY = scaledTxHeight / height;\n            }\n            else {\n                // Texture is taller than node (or equal)\n                // Center the node horizontally (shift right by extraX)\n                // Scale the node horizontally to maintain original aspect ratio\n                const scaleY = height / th;\n                const scaledTxWidth = tw * scaleY;\n                extraX = (width - scaledTxWidth) / 2;\n                resizeModeScaleX = scaledTxWidth / width;\n            }\n            // Apply the extra translation and scale to the local transform\n            this.localTransform\n                .translate(extraX, extraY)\n                .scale(resizeModeScaleX, resizeModeScaleY);\n        }\n        this.setUpdateType(UpdateType.Global);\n    }\n    /**\n     * @todo: test for correct calculation flag\n     * @param delta\n     */\n    update(delta, parentClippingRect) {\n        if (this.updateType & UpdateType.ScaleRotate) {\n            this.updateScaleRotateTransform();\n            this.setUpdateType(UpdateType.Local);\n        }\n        if (this.updateType & UpdateType.Local) {\n            this.updateLocalTransform();\n            this.setUpdateType(UpdateType.Global);\n        }\n        const parent = this.props.parent;\n        let renderState = null;\n        if (this.updateType & UpdateType.ParentRenderTexture) {\n            let p = this.parent;\n            while (p) {\n                if (p.rtt) {\n                    this.parentHasRenderTexture = true;\n                }\n                p = p.parent;\n            }\n        }\n        // If we have render texture updates and not already running a full update\n        if (this.updateType ^ UpdateType.All &&\n            this.updateType & UpdateType.RenderTexture) {\n            this.children.forEach((child) => {\n                child.setUpdateType(UpdateType.All);\n            });\n        }\n        if (this.updateType & UpdateType.Global) {\n            assertTruthy(this.localTransform);\n            this.globalTransform = Matrix3d.copy(parent?.globalTransform || this.localTransform, this.globalTransform);\n            if (this.parentHasRenderTexture && this.props.parent?.rtt) {\n                this.globalTransform = Matrix3d.identity();\n            }\n            if (parent) {\n                this.globalTransform.multiply(this.localTransform);\n            }\n            this.calculateRenderCoords();\n            this.updateBoundingRect();\n            this.setUpdateType(UpdateType.RenderState | UpdateType.Children);\n            if (this.clipping === true) {\n                this.setUpdateType(UpdateType.Clipping);\n            }\n            this.childUpdateType |= UpdateType.Global;\n        }\n        if (this.updateType & UpdateType.RenderBounds) {\n            this.createRenderBounds();\n            this.setUpdateType(UpdateType.RenderState);\n            this.setUpdateType(UpdateType.Children);\n        }\n        if (this.updateType & UpdateType.RenderState) {\n            renderState = this.checkRenderBounds();\n            this.setUpdateType(UpdateType.IsRenderable);\n            // if we're not going out of bounds, update the render state\n            // this is done so the update loop can finish before we mark a node\n            // as out of bounds\n            if (renderState !== CoreNodeRenderState.OutOfBounds) {\n                this.updateRenderState(renderState);\n            }\n        }\n        if (this.updateType & UpdateType.IsRenderable) {\n            this.updateIsRenderable();\n        }\n        if (this.renderState === CoreNodeRenderState.OutOfBounds) {\n            return;\n        }\n        if (this.updateType & UpdateType.Clipping) {\n            this.calculateClippingRect(parentClippingRect);\n            this.setUpdateType(UpdateType.Children);\n            this.childUpdateType |= UpdateType.Clipping;\n            this.childUpdateType |= UpdateType.RenderBounds;\n        }\n        if (this.updateType & UpdateType.WorldAlpha) {\n            if (parent) {\n                this.worldAlpha = parent.worldAlpha * this.props.alpha;\n            }\n            else {\n                this.worldAlpha = this.props.alpha;\n            }\n            this.setUpdateType(UpdateType.Children |\n                UpdateType.PremultipliedColors |\n                UpdateType.IsRenderable);\n            this.childUpdateType |= UpdateType.WorldAlpha;\n        }\n        if (this.updateType & UpdateType.PremultipliedColors) {\n            this.premultipliedColorTl = mergeColorAlphaPremultiplied(this.props.colorTl, this.worldAlpha, true);\n            // If all the colors are the same just sent them all to the same value\n            if (this.props.colorTl === this.props.colorTr &&\n                this.props.colorBl === this.props.colorBr &&\n                this.props.colorTl === this.props.colorBl) {\n                this.premultipliedColorTr =\n                    this.premultipliedColorBl =\n                        this.premultipliedColorBr =\n                            this.premultipliedColorTl;\n            }\n            else {\n                this.premultipliedColorTr = mergeColorAlphaPremultiplied(this.props.colorTr, this.worldAlpha, true);\n                this.premultipliedColorBl = mergeColorAlphaPremultiplied(this.props.colorBl, this.worldAlpha, true);\n                this.premultipliedColorBr = mergeColorAlphaPremultiplied(this.props.colorBr, this.worldAlpha, true);\n            }\n        }\n        // No need to update zIndex if there is no parent\n        if (parent !== null && this.updateType & UpdateType.CalculatedZIndex) {\n            this.calculateZIndex();\n            // Tell parent to re-sort children\n            parent.setUpdateType(UpdateType.ZIndexSortedChildren);\n        }\n        if (this.updateType & UpdateType.Children &&\n            this.children.length > 0 &&\n            this.rtt === false) {\n            for (let i = 0; i < this.children.length; i++) {\n                const child = this.children[i];\n                if (child === undefined) {\n                    continue;\n                }\n                child.setUpdateType(this.childUpdateType);\n                if (child.updateType === 0) {\n                    continue;\n                }\n                child.update(delta, this.clippingRect);\n            }\n        }\n        // Sorting children MUST happen after children have been updated so\n        // that they have the oppotunity to update their calculated zIndex.\n        if (this.updateType & UpdateType.ZIndexSortedChildren) {\n            // reorder z-index\n            this.sortChildren();\n        }\n        // If we're out of bounds, apply the render state now\n        // this is done so nodes can finish their entire update loop before\n        // being marked as out of bounds\n        if (renderState === CoreNodeRenderState.OutOfBounds) {\n            this.updateRenderState(renderState);\n        }\n        // reset update type\n        this.updateType = 0;\n        this.childUpdateType = 0;\n    }\n    //check if CoreNode is renderable based on props\n    checkRenderProps() {\n        if (this.props.texture) {\n            return true;\n        }\n        if (!this.props.width || !this.props.height) {\n            return false;\n        }\n        if (this.props.shader !== this.stage.defShaderCtr) {\n            return true;\n        }\n        if (this.props.clipping) {\n            return true;\n        }\n        if (this.props.color !== 0) {\n            return true;\n        }\n        // Consider removing these checks and just using the color property check above.\n        // Maybe add a forceRender prop for nodes that should always render.\n        if (this.props.colorTop !== 0) {\n            return true;\n        }\n        if (this.props.colorBottom !== 0) {\n            return true;\n        }\n        if (this.props.colorLeft !== 0) {\n            return true;\n        }\n        if (this.props.colorRight !== 0) {\n            return true;\n        }\n        if (this.props.colorTl !== 0) {\n            return true;\n        }\n        if (this.props.colorTr !== 0) {\n            return true;\n        }\n        if (this.props.colorBl !== 0) {\n            return true;\n        }\n        if (this.props.colorBr !== 0) {\n            return true;\n        }\n        return false;\n    }\n    checkRenderBounds() {\n        assertTruthy(this.renderBound);\n        assertTruthy(this.strictBound);\n        assertTruthy(this.preloadBound);\n        if (boundInsideBound(this.renderBound, this.strictBound)) {\n            return CoreNodeRenderState.InViewport;\n        }\n        if (boundInsideBound(this.renderBound, this.preloadBound)) {\n            return CoreNodeRenderState.InBounds;\n        }\n        // check if we're larger then our parent, we're definitely in the viewport\n        if (boundLargeThanBound(this.renderBound, this.strictBound)) {\n            return CoreNodeRenderState.InViewport;\n        }\n        // check if we dont have dimensions, take our parent's render state\n        if (this.parent !== null &&\n            (this.props.width === 0 || this.props.height === 0)) {\n            return this.parent.renderState;\n        }\n        return CoreNodeRenderState.OutOfBounds;\n    }\n    createPreloadBounds(strictBound) {\n        const renderM = this.stage.boundsMargin;\n        return createBound(strictBound.x1 - renderM[3], strictBound.y1 - renderM[0], strictBound.x2 + renderM[1], strictBound.y2 + renderM[2], this.preloadBound);\n    }\n    updateBoundingRect() {\n        const { renderCoords, globalTransform: transform } = this;\n        assertTruthy(transform);\n        assertTruthy(renderCoords);\n        const { tb, tc } = transform;\n        const { x1, y1, x3, y3 } = renderCoords;\n        if (tb === 0 || tc === 0) {\n            this.renderBound = createBound(x1, y1, x3, y3, this.renderBound);\n        }\n        else {\n            const { x2, x4, y2, y4 } = renderCoords;\n            this.renderBound = createBound(Math.min(x1, x2, x3, x4), Math.min(y1, y2, y3, y4), Math.max(x1, x2, x3, x4), Math.max(y1, y2, y3, y4), this.renderBound);\n        }\n    }\n    createRenderBounds() {\n        assertTruthy(this.stage);\n        // no clipping, use parent's bounds\n        if (this.clipping === false) {\n            if (this.parent !== null) {\n                this.strictBound =\n                    this.parent.strictBound ??\n                        createBound(0, 0, this.stage.root.width, this.stage.root.height);\n                this.preloadBound =\n                    this.parent.preloadBound ??\n                        this.createPreloadBounds(this.strictBound);\n                return;\n            }\n            else {\n                this.strictBound = createBound(0, 0, this.stage.root.width, this.stage.root.height);\n                this.preloadBound = this.createPreloadBounds(this.strictBound);\n                return;\n            }\n        }\n        // clipping is enabled create our own bounds\n        const { x, y, width, height } = this.props;\n        const { tx, ty } = this.globalTransform || {};\n        const _x = tx ?? x;\n        const _y = ty ?? y;\n        this.strictBound = createBound(_x, _y, _x + width, _y + height, this.strictBound);\n        this.preloadBound = this.createPreloadBounds(this.strictBound);\n    }\n    updateRenderState(renderState) {\n        if (renderState === this.renderState) {\n            return;\n        }\n        const previous = this.renderState;\n        this.renderState = renderState;\n        const event = CoreNodeRenderStateMap.get(renderState);\n        assertTruthy(event);\n        this.emit(event, {\n            previous,\n            current: renderState,\n        });\n    }\n    /**\n     * This function updates the `isRenderable` property based on certain conditions.\n     *\n     * @returns\n     */\n    updateIsRenderable() {\n        let newIsRenderable;\n        if (this.worldAlpha === 0 || !this.checkRenderProps()) {\n            newIsRenderable = false;\n        }\n        else {\n            newIsRenderable = this.renderState > CoreNodeRenderState.OutOfBounds;\n        }\n        if (this.isRenderable !== newIsRenderable) {\n            this.isRenderable = newIsRenderable;\n            this.onChangeIsRenderable(newIsRenderable);\n        }\n    }\n    onChangeIsRenderable(isRenderable) {\n        this.texture?.setRenderableOwner(this, isRenderable);\n    }\n    calculateRenderCoords() {\n        const { width, height, globalTransform: transform } = this;\n        assertTruthy(transform);\n        const { tx, ty, ta, tb, tc, td } = transform;\n        if (tb === 0 && tc === 0) {\n            const minX = tx;\n            const maxX = tx + width * ta;\n            const minY = ty;\n            const maxY = ty + height * td;\n            this.renderCoords = RenderCoords.translate(\n            //top-left\n            minX, minY, \n            //top-right\n            maxX, minY, \n            //bottom-right\n            maxX, maxY, \n            //bottom-left\n            minX, maxY, this.renderCoords);\n        }\n        else {\n            this.renderCoords = RenderCoords.translate(\n            //top-left\n            tx, ty, \n            //top-right\n            tx + width * ta, ty + width * tc, \n            //bottom-right\n            tx + width * ta + height * tb, ty + width * tc + height * td, \n            //bottom-left\n            tx + height * tb, ty + height * td, this.renderCoords);\n        }\n    }\n    /**\n     * This function calculates the clipping rectangle for a node.\n     *\n     * The function then checks if the node is rotated. If the node requires clipping and is not rotated, a new clipping rectangle is created based on the node's global transform and dimensions.\n     * If a parent clipping rectangle exists, it is intersected with the node's clipping rectangle (if it exists), or replaces the node's clipping rectangle.\n     *\n     * Finally, the node's parentClippingRect and clippingRect properties are updated.\n     */\n    calculateClippingRect(parentClippingRect) {\n        assertTruthy(this.globalTransform);\n        const { clippingRect, props, globalTransform: gt } = this;\n        const { clipping } = props;\n        const isRotated = gt.tb !== 0 || gt.tc !== 0;\n        if (clipping === true && isRotated === false) {\n            clippingRect.x = gt.tx;\n            clippingRect.y = gt.ty;\n            clippingRect.width = this.width * gt.ta;\n            clippingRect.height = this.height * gt.td;\n            clippingRect.valid = true;\n        }\n        else {\n            clippingRect.valid = false;\n        }\n        if (parentClippingRect.valid === true && clippingRect.valid === true) {\n            // Intersect parent clipping rect with node clipping rect\n            intersectRect(parentClippingRect, clippingRect, clippingRect);\n        }\n        else if (parentClippingRect.valid === true) {\n            // Copy parent clipping rect\n            copyRect(parentClippingRect, clippingRect);\n            clippingRect.valid = true;\n        }\n    }\n    calculateZIndex() {\n        const props = this.props;\n        const z = props.zIndex || 0;\n        const p = props.parent?.zIndex || 0;\n        let zIndex = z;\n        if (props.parent?.zIndexLocked) {\n            zIndex = z < p ? z : p;\n        }\n        this.calcZIndex = zIndex;\n    }\n    /**\n     * Destroy the node and cleanup all resources\n     */\n    destroy() {\n        this.unloadTexture();\n        this.clippingRect.valid = false;\n        this.isRenderable = false;\n        delete this.renderCoords;\n        delete this.renderBound;\n        delete this.strictBound;\n        delete this.preloadBound;\n        delete this.globalTransform;\n        delete this.scaleRotateTransform;\n        delete this.localTransform;\n        this.props.texture = null;\n        this.props.shader = this.stage.defShaderCtr;\n        const children = [...this.children];\n        for (let i = 0; i < children.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            children[i].destroy();\n        }\n        // This very action will also remove the node from the parent's children array\n        this.parent = null;\n        if (this.rtt) {\n            this.stage.renderer.removeRTTNode(this);\n        }\n        this.removeAllListeners();\n    }\n    renderQuads(renderer) {\n        const { texture, width, height, textureOptions, rtt, shader } = this.props;\n        // Prevent quad rendering if parent has a render texture\n        // and renderer is not currently rendering to a texture\n        if (this.parentHasRenderTexture) {\n            if (!renderer.renderToTextureActive) {\n                return;\n            }\n            // Prevent quad rendering if parent render texture is not the active render texture\n            if (this.parentRenderTexture !== renderer.activeRttNode) {\n                return;\n            }\n        }\n        const { premultipliedColorTl, premultipliedColorTr, premultipliedColorBl, premultipliedColorBr, } = this;\n        const { zIndex, worldAlpha, globalTransform: gt, clippingRect, renderCoords, } = this;\n        assertTruthy(gt);\n        assertTruthy(renderCoords);\n        // add to list of renderables to be sorted before rendering\n        renderer.addQuad({\n            width,\n            height,\n            colorTl: premultipliedColorTl,\n            colorTr: premultipliedColorTr,\n            colorBl: premultipliedColorBl,\n            colorBr: premultipliedColorBr,\n            texture,\n            textureOptions,\n            zIndex,\n            shader: shader.shader,\n            shaderProps: shader.getResolvedProps(),\n            alpha: worldAlpha,\n            clippingRect,\n            tx: gt.tx,\n            ty: gt.ty,\n            ta: gt.ta,\n            tb: gt.tb,\n            tc: gt.tc,\n            td: gt.td,\n            renderCoords,\n            rtt,\n            parentHasRenderTexture: this.parentHasRenderTexture,\n            framebufferDimensions: this.framebufferDimensions,\n        });\n    }\n    //#region Properties\n    get id() {\n        return this._id;\n    }\n    get data() {\n        return this.props.data;\n    }\n    set data(d) {\n        this.props.data = d;\n    }\n    get x() {\n        return this.props.x;\n    }\n    set x(value) {\n        if (this.props.x !== value) {\n            this.props.x = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get absX() {\n        return (this.props.x +\n            -this.props.width * this.props.mountX +\n            (this.props.parent?.absX || this.props.parent?.globalTransform?.tx || 0));\n    }\n    get absY() {\n        return (this.props.y +\n            -this.props.height * this.props.mountY +\n            (this.props.parent?.absY ?? 0));\n    }\n    get y() {\n        return this.props.y;\n    }\n    set y(value) {\n        if (this.props.y !== value) {\n            this.props.y = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        if (this.props.width !== value) {\n            this.props.width = value;\n            this.setUpdateType(UpdateType.Local);\n            if (this.props.rtt) {\n                this.texture = this.stage.txManager.loadTexture('RenderTexture', {\n                    width: this.width,\n                    height: this.height,\n                });\n                this.textureOptions.preload = true;\n                this.setUpdateType(UpdateType.RenderTexture);\n            }\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        if (this.props.height !== value) {\n            this.props.height = value;\n            this.setUpdateType(UpdateType.Local);\n            if (this.props.rtt) {\n                this.texture = this.stage.txManager.loadTexture('RenderTexture', {\n                    width: this.width,\n                    height: this.height,\n                });\n                this.textureOptions.preload = true;\n                this.setUpdateType(UpdateType.RenderTexture);\n            }\n        }\n    }\n    get scale() {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        return this.scaleX;\n    }\n    set scale(value) {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        this.scaleX = value;\n        this.scaleY = value;\n    }\n    get scaleX() {\n        return this.props.scaleX;\n    }\n    set scaleX(value) {\n        if (this.props.scaleX !== value) {\n            this.props.scaleX = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get scaleY() {\n        return this.props.scaleY;\n    }\n    set scaleY(value) {\n        if (this.props.scaleY !== value) {\n            this.props.scaleY = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get mount() {\n        return this.props.mount;\n    }\n    set mount(value) {\n        if (this.props.mountX !== value || this.props.mountY !== value) {\n            this.props.mountX = value;\n            this.props.mountY = value;\n            this.props.mount = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get mountX() {\n        return this.props.mountX;\n    }\n    set mountX(value) {\n        if (this.props.mountX !== value) {\n            this.props.mountX = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get mountY() {\n        return this.props.mountY;\n    }\n    set mountY(value) {\n        if (this.props.mountY !== value) {\n            this.props.mountY = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivot() {\n        return this.props.pivot;\n    }\n    set pivot(value) {\n        if (this.props.pivotX !== value || this.props.pivotY !== value) {\n            this.props.pivotX = value;\n            this.props.pivotY = value;\n            this.props.pivot = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivotX() {\n        return this.props.pivotX;\n    }\n    set pivotX(value) {\n        if (this.props.pivotX !== value) {\n            this.props.pivotX = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get pivotY() {\n        return this.props.pivotY;\n    }\n    set pivotY(value) {\n        if (this.props.pivotY !== value) {\n            this.props.pivotY = value;\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get rotation() {\n        return this.props.rotation;\n    }\n    set rotation(value) {\n        if (this.props.rotation !== value) {\n            this.props.rotation = value;\n            this.setUpdateType(UpdateType.ScaleRotate);\n        }\n    }\n    get alpha() {\n        return this.props.alpha;\n    }\n    set alpha(value) {\n        this.props.alpha = value;\n        this.setUpdateType(UpdateType.PremultipliedColors |\n            UpdateType.WorldAlpha |\n            UpdateType.Children);\n        this.childUpdateType |= UpdateType.Global;\n    }\n    get autosize() {\n        return this.props.autosize;\n    }\n    set autosize(value) {\n        this.props.autosize = value;\n    }\n    get clipping() {\n        return this.props.clipping;\n    }\n    set clipping(value) {\n        this.props.clipping = value;\n        this.setUpdateType(UpdateType.Clipping | UpdateType.RenderBounds | UpdateType.Children);\n        this.childUpdateType |= UpdateType.Global | UpdateType.Clipping;\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(value) {\n        this.colorTop = value;\n        this.colorBottom = value;\n        this.colorLeft = value;\n        this.colorRight = value;\n        this.props.color = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTop() {\n        return this.props.colorTop;\n    }\n    set colorTop(value) {\n        if (this.props.colorTl !== value || this.props.colorTr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n        }\n        this.props.colorTop = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBottom() {\n        return this.props.colorBottom;\n    }\n    set colorBottom(value) {\n        if (this.props.colorBl !== value || this.props.colorBr !== value) {\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.colorBottom = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorLeft() {\n        return this.props.colorLeft;\n    }\n    set colorLeft(value) {\n        if (this.props.colorTl !== value || this.props.colorBl !== value) {\n            this.colorTl = value;\n            this.colorBl = value;\n        }\n        this.props.colorLeft = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorRight() {\n        return this.props.colorRight;\n    }\n    set colorRight(value) {\n        if (this.props.colorTr !== value || this.props.colorBr !== value) {\n            this.colorTr = value;\n            this.colorBr = value;\n        }\n        this.props.colorRight = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTl() {\n        return this.props.colorTl;\n    }\n    set colorTl(value) {\n        this.props.colorTl = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorTr() {\n        return this.props.colorTr;\n    }\n    set colorTr(value) {\n        this.props.colorTr = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBl() {\n        return this.props.colorBl;\n    }\n    set colorBl(value) {\n        this.props.colorBl = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    get colorBr() {\n        return this.props.colorBr;\n    }\n    set colorBr(value) {\n        this.props.colorBr = value;\n        this.setUpdateType(UpdateType.PremultipliedColors);\n    }\n    // we're only interested in parent zIndex to test\n    // if we should use node zIndex is higher then parent zIndex\n    get zIndexLocked() {\n        return this.props.zIndexLocked || 0;\n    }\n    set zIndexLocked(value) {\n        this.props.zIndexLocked = value;\n        this.setUpdateType(UpdateType.CalculatedZIndex | UpdateType.Children);\n        this.children.forEach((child) => {\n            child.setUpdateType(UpdateType.CalculatedZIndex);\n        });\n    }\n    get zIndex() {\n        return this.props.zIndex;\n    }\n    set zIndex(value) {\n        this.props.zIndex = value;\n        this.setUpdateType(UpdateType.CalculatedZIndex | UpdateType.Children);\n        this.children.forEach((child) => {\n            child.setUpdateType(UpdateType.CalculatedZIndex);\n        });\n    }\n    get parent() {\n        return this.props.parent;\n    }\n    set parent(newParent) {\n        const oldParent = this.props.parent;\n        if (oldParent === newParent) {\n            return;\n        }\n        this.props.parent = newParent;\n        if (oldParent) {\n            const index = oldParent.children.indexOf(this);\n            assertTruthy(index !== -1, \"CoreNode.parent: Node not found in old parent's children!\");\n            oldParent.children.splice(index, 1);\n            oldParent.setUpdateType(UpdateType.Children | UpdateType.ZIndexSortedChildren);\n        }\n        if (newParent) {\n            newParent.children.push(this);\n            // Since this node has a new parent, to be safe, have it do a full update.\n            this.setUpdateType(UpdateType.All);\n            // Tell parent that it's children need to be updated and sorted.\n            newParent.setUpdateType(UpdateType.Children | UpdateType.ZIndexSortedChildren);\n            if (newParent.rtt || newParent.parentHasRenderTexture) {\n                this.setRTTUpdates(UpdateType.All);\n            }\n        }\n        this.updateScaleRotateTransform();\n        // fetch render bounds from parent\n        this.setUpdateType(UpdateType.RenderBounds | UpdateType.Children);\n    }\n    get preventCleanup() {\n        return this.props.preventCleanup;\n    }\n    set preventCleanup(value) {\n        this.props.preventCleanup = value;\n    }\n    get rtt() {\n        return this.props.rtt;\n    }\n    set rtt(value) {\n        if (this.props.rtt === true) {\n            this.props.rtt = value;\n            // unload texture if we used to have a render texture\n            if (value === false && this.texture !== null) {\n                this.unloadTexture();\n                this.setUpdateType(UpdateType.All);\n                this.children.forEach((child) => {\n                    child.parentHasRenderTexture = false;\n                });\n                this.stage.renderer?.removeRTTNode(this);\n                return;\n            }\n        }\n        // if the new value is false and we didnt have rtt previously, we don't need to do anything\n        if (value === false) {\n            return;\n        }\n        // load texture\n        this.texture = this.stage.txManager.loadTexture('RenderTexture', {\n            width: this.width,\n            height: this.height,\n        });\n        this.textureOptions.preload = true;\n        this.props.rtt = true;\n        this.hasRTTupdates = true;\n        this.setUpdateType(UpdateType.All);\n        this.children.forEach((child) => {\n            child.setUpdateType(UpdateType.All);\n        });\n        // Store RTT nodes in a separate list\n        this.stage.renderer?.renderToTexture(this);\n    }\n    get shader() {\n        return this.props.shader;\n    }\n    set shader(value) {\n        if (this.props.shader === value) {\n            return;\n        }\n        this.props.shader = value;\n        this.setUpdateType(UpdateType.IsRenderable);\n    }\n    get src() {\n        return this.props.src;\n    }\n    set src(imageUrl) {\n        if (this.props.src === imageUrl) {\n            return;\n        }\n        this.props.src = imageUrl;\n        if (!imageUrl) {\n            this.texture = null;\n            return;\n        }\n        this.texture = this.stage.txManager.loadTexture('ImageTexture', {\n            src: imageUrl,\n            width: this.props.width,\n            height: this.props.height,\n            type: this.props.imageType,\n            sx: this.props.srcX,\n            sy: this.props.srcY,\n            sw: this.props.srcWidth,\n            sh: this.props.srcHeight,\n        });\n    }\n    set imageType(type) {\n        if (this.props.imageType === type) {\n            return;\n        }\n        this.props.imageType = type;\n    }\n    get imageType() {\n        return this.props.imageType || null;\n    }\n    get srcHeight() {\n        return this.props.srcHeight;\n    }\n    set srcHeight(value) {\n        this.props.srcHeight = value;\n    }\n    get srcWidth() {\n        return this.props.srcWidth;\n    }\n    set srcWidth(value) {\n        this.props.srcWidth = value;\n    }\n    get srcX() {\n        return this.props.srcX;\n    }\n    set srcX(value) {\n        this.props.srcX = value;\n    }\n    get srcY() {\n        return this.props.srcY;\n    }\n    set srcY(value) {\n        this.props.srcY = value;\n    }\n    /**\n     * Returns the framebuffer dimensions of the node.\n     * If the node has a render texture, the dimensions are the same as the node's dimensions.\n     * If the node does not have a render texture, the dimensions are inherited from the parent.\n     * If the node parent has a render texture and the node is a render texture, the nodes dimensions are used.\n     */\n    get framebufferDimensions() {\n        if (this.parentHasRenderTexture && !this.rtt && this.parent) {\n            return this.parent.framebufferDimensions;\n        }\n        return { width: this.width, height: this.height };\n    }\n    /**\n     * Returns the parent render texture node if it exists.\n     */\n    get parentRenderTexture() {\n        let parent = this.parent;\n        while (parent) {\n            if (parent.rtt) {\n                return parent;\n            }\n            parent = parent.parent;\n        }\n        return null;\n    }\n    get texture() {\n        return this.props.texture;\n    }\n    set texture(value) {\n        if (this.props.texture === value) {\n            return;\n        }\n        const oldTexture = this.props.texture;\n        if (oldTexture) {\n            oldTexture.setRenderableOwner(this, false);\n            this.unloadTexture();\n        }\n        this.props.texture = value;\n        if (value) {\n            value.setRenderableOwner(this, this.isRenderable);\n            this.loadTexture();\n        }\n        this.setUpdateType(UpdateType.IsRenderable);\n    }\n    set textureOptions(value) {\n        this.props.textureOptions = value;\n    }\n    get textureOptions() {\n        return this.props.textureOptions;\n    }\n    setRTTUpdates(type) {\n        this.hasRTTupdates = true;\n        this.parent?.setRTTUpdates(type);\n    }\n    animate(props, settings) {\n        const animation = new CoreAnimation(this, props, settings);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n        const controller = new CoreAnimationController(this.stage.animationManager, animation);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return controller;\n    }\n    flush() {\n        // no-op\n    }\n}\n//# sourceMappingURL=CoreNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Platform render loop initiator\n */\nexport const startLoop = (stage) => {\n    let isIdle = false;\n    const runLoop = () => {\n        stage.updateFrameTime();\n        stage.updateAnimations();\n        if (!stage.hasSceneUpdates()) {\n            // We still need to calculate the fps else it looks like the app is frozen\n            stage.calculateFps();\n            setTimeout(runLoop, 16.666666666666668);\n            if (!isIdle) {\n                if (stage.txMemManager.checkCleanup()) {\n                    stage.txMemManager.cleanup();\n                }\n                stage.eventBus.emit('idle');\n                isIdle = true;\n            }\n            stage.flushFrameEvents();\n            return;\n        }\n        isIdle = false;\n        stage.drawFrame();\n        stage.flushFrameEvents();\n        requestAnimationFrame(runLoop);\n    };\n    requestAnimationFrame(runLoop);\n};\n/**\n * Return unix timestamp\n * @return {number}\n */\nexport const getTimeStamp = () => {\n    return performance ? performance.now() : Date.now();\n};\n//# sourceMappingURL=platform.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreAnimation } from './CoreAnimation.js';\nexport class AnimationManager {\n    activeAnimations = new Set();\n    registerAnimation(animation) {\n        this.activeAnimations.add(animation);\n    }\n    unregisterAnimation(animation) {\n        this.activeAnimations.delete(animation);\n    }\n    update(dt) {\n        this.activeAnimations.forEach((animation) => {\n            animation.update(dt);\n        });\n    }\n}\n//# sourceMappingURL=AnimationManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'freed';\n    renderableOwners = new Set();\n    renderable = false;\n    lastRenderableChangeTime = 0;\n    preventCleanup = false;\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Add/remove an owner to/from the Texture based on its renderability.\n     *\n     * @remarks\n     * Any object can own a texture, be it a CoreNode or even the state object\n     * from a Text Renderer.\n     *\n     * When the reference to the texture that an owner object holds is replaced\n     * or cleared it must call this with `renderable=false` to release the owner\n     * association.\n     *\n     * @param owner\n     * @param renderable\n     */\n    setRenderableOwner(owner, renderable) {\n        const oldSize = this.renderableOwners.size;\n        if (renderable) {\n            this.renderableOwners.add(owner);\n            const newSize = this.renderableOwners.size;\n            if (newSize > oldSize && newSize === 1) {\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n                this.renderable = true;\n                this.lastRenderableChangeTime = this.txManager.frameTime;\n                this.onChangeIsRenderable?.(true);\n            }\n        }\n        else {\n            this.renderableOwners.delete(owner);\n            const newSize = this.renderableOwners.size;\n            if (newSize < oldSize && newSize === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n                this.renderable = false;\n                this.lastRenderableChangeTime = this.txManager.frameTime;\n                this.onChangeIsRenderable?.(false);\n            }\n        }\n    }\n    /**\n     * Get the CoreContextTexture for this Texture\n     *\n     * @remarks\n     * Each Texture has a corresponding CoreContextTexture that is used to\n     * manage the texture's native data depending on the renderer's mode\n     * (WebGL, Canvas, etc).\n     *\n     * The Texture and CoreContextTexture are always linked together in a 1:1\n     * relationship.\n     */\n    get ctxTexture() {\n        // The first time this is called, create the ctxTexture\n        const ctxTexture = this.txManager.renderer.createCtxTexture(this);\n        // And replace this getter with the value for future calls\n        Object.defineProperty(this, 'ctxTexture', { value: ctxTexture });\n        return ctxTexture;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../textures/Texture.js';\n/**\n * Note that, within the createImageWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n *\n * The createImageWorker function is a web worker that fetches an image from a URL and returns an ImageBitmap object.\n * The eslint @typescript rule is disabled for the entire function because the function is converted to a blob and used as the\n * js of the web worker thread, so the typescript syntax is not valid in this context.\n */\n/* eslint-disable */\nfunction createImageWorker() {\n    function hasAlphaChannel(mimeType) {\n        return mimeType.indexOf('image/png') !== -1;\n    }\n    function getImage(src, premultiplyAlpha, x, y, width, height) {\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', src, true);\n            xhr.responseType = 'blob';\n            xhr.onload = function () {\n                if (xhr.status !== 200) {\n                    return reject(new Error('Failed to load image: ' + xhr.statusText));\n                }\n                var blob = xhr.response;\n                var withAlphaChannel = premultiplyAlpha !== undefined\n                    ? premultiplyAlpha\n                    : hasAlphaChannel(blob.type);\n                if (width !== null && height !== null) {\n                    createImageBitmap(blob, x || 0, y || 0, width, height, {\n                        premultiplyAlpha: withAlphaChannel ? 'premultiply' : 'none',\n                        colorSpaceConversion: 'none',\n                        imageOrientation: 'none',\n                    })\n                        .then(function (data) {\n                        resolve({ data, premultiplyAlpha: premultiplyAlpha });\n                    })\n                        .catch(function (error) {\n                        reject(error);\n                    });\n                    return;\n                }\n                createImageBitmap(blob, {\n                    premultiplyAlpha: withAlphaChannel ? 'premultiply' : 'none',\n                    colorSpaceConversion: 'none',\n                    imageOrientation: 'none',\n                })\n                    .then(function (data) {\n                    resolve({ data, premultiplyAlpha: premultiplyAlpha });\n                })\n                    .catch(function (error) {\n                    reject(error);\n                });\n            };\n            xhr.onerror = function () {\n                reject(new Error('Network error occurred while trying to fetch the image.'));\n            };\n            xhr.send();\n        });\n    }\n    self.onmessage = (event) => {\n        var src = event.data.src;\n        var id = event.data.id;\n        var premultiplyAlpha = event.data.premultiplyAlpha;\n        var x = event.data.sx;\n        var y = event.data.sy;\n        var width = event.data.sw;\n        var height = event.data.sh;\n        getImage(src, premultiplyAlpha, x, y, width, height)\n            .then(function (data) {\n            self.postMessage({ id: id, src: src, data: data });\n        })\n            .catch(function (error) {\n            self.postMessage({ id: id, src: src, error: error.message });\n        });\n    };\n}\n/* eslint-enable */\nexport class ImageWorkerManager {\n    imageWorkersEnabled = true;\n    messageManager = {};\n    workers = [];\n    workerIndex = 0;\n    nextId = 0;\n    constructor(numImageWorkers) {\n        this.workers = this.createWorkers(numImageWorkers);\n        this.workers.forEach((worker) => {\n            worker.onmessage = this.handleMessage.bind(this);\n        });\n    }\n    handleMessage(event) {\n        const { id, data, error } = event.data;\n        const msg = this.messageManager[id];\n        if (msg) {\n            const [resolve, reject] = msg;\n            delete this.messageManager[id];\n            if (error) {\n                reject(new Error(error));\n            }\n            else {\n                resolve(data);\n            }\n        }\n    }\n    createWorkers(numWorkers = 1) {\n        const workerCode = `(${createImageWorker.toString()})()`;\n        const blob = new Blob([workerCode.replace('\"use strict\";', '')], {\n            type: 'application/javascript',\n        });\n        const blobURL = (self.URL ? URL : webkitURL).createObjectURL(blob);\n        const workers = [];\n        for (let i = 0; i < numWorkers; i++) {\n            workers.push(new Worker(blobURL));\n        }\n        return workers;\n    }\n    getNextWorker() {\n        const worker = this.workers[this.workerIndex];\n        this.workerIndex = (this.workerIndex + 1) % this.workers.length;\n        return worker;\n    }\n    getImage(src, premultiplyAlpha, sx, sy, sw, sh) {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.workers) {\n                    const id = this.nextId++;\n                    this.messageManager[id] = [resolve, reject];\n                    const nextWorker = this.getNextWorker();\n                    if (nextWorker) {\n                        nextWorker.postMessage({\n                            id,\n                            src: src,\n                            premultiplyAlpha,\n                            sx,\n                            sy,\n                            sw,\n                            sh,\n                        });\n                    }\n                }\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n}\n//# sourceMappingURL=ImageWorker.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {} from '../textures/Texture.js';\n/**\n * Tests if the given location is a compressed texture container\n * @param url\n * @remarks\n * This function is used to determine if the given image url is a compressed\n * and only supports the following extensions: .ktx and .pvr\n * @returns\n */\nexport function isCompressedTextureContainer(url) {\n    return /\\.(ktx|pvr)$/.test(url);\n}\n/**\n * Loads a compressed texture container\n * @param url\n * @returns\n */\nexport const loadCompressedTexture = async (url) => {\n    const response = await fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    if (url.indexOf('.ktx') !== -1) {\n        return loadKTXData(arrayBuffer);\n    }\n    return loadPVRData(arrayBuffer);\n};\n/**\n * Loads a KTX texture container and returns the texture data\n * @param buffer\n * @returns\n */\nconst loadKTXData = async (buffer) => {\n    const view = new DataView(buffer);\n    const littleEndian = view.getUint32(12) === 16909060 ? true : false;\n    const mipmaps = [];\n    const data = {\n        glInternalFormat: view.getUint32(28, littleEndian),\n        pixelWidth: view.getUint32(36, littleEndian),\n        pixelHeight: view.getUint32(40, littleEndian),\n        numberOfMipmapLevels: view.getUint32(56, littleEndian),\n        bytesOfKeyValueData: view.getUint32(60, littleEndian),\n    };\n    let offset = 64;\n    // Key Value Pairs of data start at byte offset 64\n    // But the only known kvp is the API version, so skipping parsing.\n    offset += data.bytesOfKeyValueData;\n    for (let i = 0; i < data.numberOfMipmapLevels; i++) {\n        const imageSize = view.getUint32(offset);\n        offset += 4;\n        mipmaps.push(view.buffer.slice(offset, imageSize));\n        offset += imageSize;\n    }\n    return {\n        data: {\n            glInternalFormat: data.glInternalFormat,\n            mipmaps,\n            width: data.pixelWidth || 0,\n            height: data.pixelHeight || 0,\n            type: 'ktx',\n        },\n        premultiplyAlpha: false,\n    };\n};\n/**\n * Loads a PVR texture container and returns the texture data\n * @param buffer\n * @returns\n */\nconst loadPVRData = async (buffer) => {\n    // pvr header length in 32 bits\n    const pvrHeaderLength = 13;\n    // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n    const pvrFormatEtc1 = 0x8d64;\n    const pvrWidth = 7;\n    const pvrHeight = 6;\n    const pvrMipmapCount = 11;\n    const pvrMetadata = 12;\n    const arrayBuffer = buffer;\n    const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n    // @ts-expect-error Object possibly undefined\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    const dataOffset = header[pvrMetadata] + 52;\n    const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n    const mipmaps = [];\n    const data = {\n        pixelWidth: header[pvrWidth],\n        pixelHeight: header[pvrHeight],\n        numberOfMipmapLevels: header[pvrMipmapCount] || 0,\n    };\n    let offset = 0;\n    let width = data.pixelWidth || 0;\n    let height = data.pixelHeight || 0;\n    for (let i = 0; i < data.numberOfMipmapLevels; i++) {\n        const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n        const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n        mipmaps.push(view);\n        offset += level;\n        width = width >> 1;\n        height = height >> 1;\n    }\n    return {\n        data: {\n            glInternalFormat: pvrFormatEtc1,\n            mipmaps: mipmaps,\n            width: data.pixelWidth || 0,\n            height: data.pixelHeight || 0,\n            type: 'pvr',\n        },\n        premultiplyAlpha: false,\n    };\n};\n//# sourceMappingURL=textureCompression.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport {} from '../textures/Texture.js';\n/**\n * Tests if the given location is a SVG\n * @param url\n * @remarks\n * This function is used to determine if the given image url is a SVG\n * image\n * @returns\n */\nexport function isSvgImage(url) {\n    return /\\.(svg)$/.test(url);\n}\n/**\n * Loads a SVG image\n * @param url\n * @returns\n */\nexport const loadSvg = (url, width, height, sx, sy, sw, sh) => {\n    return new Promise((resolve, reject) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        assertTruthy(ctx);\n        ctx.imageSmoothingEnabled = true;\n        const img = new Image();\n        img.onload = () => {\n            const x = sx ?? 0;\n            const y = sy ?? 0;\n            const w = width || img.width;\n            const h = height || img.height;\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, w, h);\n            resolve({\n                data: ctx.getImageData(x, y, sw ?? w, sh ?? h),\n                premultiplyAlpha: false,\n            });\n        };\n        img.onerror = (err) => {\n            reject(err);\n        };\n        img.src = url;\n    });\n};\n//# sourceMappingURL=textureSvg.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\nimport { isCompressedTextureContainer, loadCompressedTexture, } from '../lib/textureCompression.js';\nimport { convertUrlToAbsolute } from '../lib/utils.js';\nimport { isSvgImage, loadSvg } from '../lib/textureSvg.js';\n/**\n * Texture consisting of an image loaded from a URL\n *\n * @remarks\n * The ImageTexture's {@link ImageTextureProps.src} prop defines the image URL\n * to be downloaded.\n *\n * By default, the texture's alpha values will be premultiplied into its color\n * values which is generally the desired setting before they are sent to the\n * texture's associated {@link Shader}. However, in special cases you may want\n * the Shader to receive straight (non-premultiplied) values. In that case you\n * can disable the default behavior by setting the\n * {@link ImageTextureProps.premultiplyAlpha} prop to `false`.\n */\nexport class ImageTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ImageTexture.resolveDefaults(props);\n    }\n    hasAlphaChannel(mimeType) {\n        return mimeType.indexOf('image/png') !== -1;\n    }\n    async loadImage(src) {\n        const { premultiplyAlpha, sx, sy, sw, sh, width, height } = this.props;\n        if (this.txManager.imageWorkerManager !== null) {\n            return await this.txManager.imageWorkerManager.getImage(src, premultiplyAlpha, sx, sy, sw, sh);\n        }\n        else if (this.txManager.hasCreateImageBitmap === true) {\n            const response = await fetch(src);\n            const blob = await response.blob();\n            const hasAlphaChannel = premultiplyAlpha ?? this.hasAlphaChannel(blob.type);\n            if (sw !== null && sh !== null) {\n                return {\n                    data: await createImageBitmap(blob, sx ?? 0, sy ?? 0, sw, sh, {\n                        premultiplyAlpha: hasAlphaChannel ? 'premultiply' : 'none',\n                        colorSpaceConversion: 'none',\n                        imageOrientation: 'none',\n                    }),\n                    premultiplyAlpha: hasAlphaChannel,\n                };\n            }\n            return {\n                data: await createImageBitmap(blob, {\n                    premultiplyAlpha: hasAlphaChannel ? 'premultiply' : 'none',\n                    colorSpaceConversion: 'none',\n                    imageOrientation: 'none',\n                }),\n                premultiplyAlpha: hasAlphaChannel,\n            };\n        }\n        else {\n            const img = new Image(width || undefined, height || undefined);\n            if (!(src.substr(0, 5) === 'data:')) {\n                img.crossOrigin = 'Anonymous';\n            }\n            img.src = src;\n            await new Promise((resolve, reject) => {\n                img.onload = () => resolve();\n                img.onerror = () => reject(new Error(`Failed to load image`));\n            }).catch((e) => {\n                console.error(e);\n            });\n            return {\n                data: img,\n                premultiplyAlpha: premultiplyAlpha ?? true,\n            };\n        }\n    }\n    async getTextureData() {\n        const { src, premultiplyAlpha, type } = this.props;\n        if (src === null) {\n            return {\n                data: null,\n            };\n        }\n        if (typeof src !== 'string') {\n            if (src instanceof ImageData) {\n                return {\n                    data: src,\n                    premultiplyAlpha,\n                };\n            }\n            return {\n                data: src(),\n                premultiplyAlpha,\n            };\n        }\n        const absoluteSrc = convertUrlToAbsolute(src);\n        if (type === 'regular') {\n            return this.loadImage(absoluteSrc);\n        }\n        if (type === 'svg') {\n            return loadSvg(absoluteSrc, this.props.width, this.props.height, this.props.sx, this.props.sy, this.props.sw, this.props.sh);\n        }\n        if (isSvgImage(src) === true) {\n            return loadSvg(absoluteSrc, this.props.width, this.props.height, this.props.sx, this.props.sy, this.props.sw, this.props.sh);\n        }\n        if (type === 'compressed') {\n            return loadCompressedTexture(absoluteSrc);\n        }\n        if (isCompressedTextureContainer(src) === true) {\n            return loadCompressedTexture(absoluteSrc);\n        }\n        // default\n        return this.loadImage(absoluteSrc);\n    }\n    /**\n     * Generates a cache key for the ImageTexture based on the provided props.\n     * @param props - The props used to generate the cache key.\n     * @returns The cache key as a string, or `false` if the key cannot be generated.\n     */\n    static makeCacheKey(props) {\n        const resolvedProps = ImageTexture.resolveDefaults(props);\n        // Only cache key-able textures; prioritise key\n        const key = resolvedProps.key || resolvedProps.src;\n        if (typeof key !== 'string') {\n            return false;\n        }\n        // if we have source dimensions, cache the texture separately\n        let dimensionProps = '';\n        if (resolvedProps.sh !== null && resolvedProps.sw !== null) {\n            dimensionProps += ',';\n            dimensionProps += resolvedProps.sx ?? '';\n            dimensionProps += resolvedProps.sy ?? '';\n            dimensionProps += resolvedProps.sw || '';\n            dimensionProps += resolvedProps.sh || '';\n        }\n        return `ImageTexture,${key},${resolvedProps.premultiplyAlpha ?? 'true'}${dimensionProps}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            src: props.src ?? '',\n            premultiplyAlpha: props.premultiplyAlpha ?? true,\n            key: props.key ?? null,\n            type: props.type ?? null,\n            width: props.width ?? null,\n            height: props.height ?? null,\n            sx: props.sx ?? null,\n            sy: props.sy ?? null,\n            sw: props.sw ?? null,\n            sh: props.sh ?? null,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ImageTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of a random grid of greyscale pixels\n *\n * @remarks\n * The width and height of the NoiseTexture are defined by it's\n * {@link NoiseTextureProps.width} and {@link NoiseTextureProps.height}\n * properties. The {@link NoiseTextureProps.cacheId} prop can be varied in order\n * to bypass cache and get newly randomized texture data.\n */\nexport class NoiseTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = NoiseTexture.resolveDefaults(props);\n    }\n    async getTextureData() {\n        const { width, height } = this.props;\n        const size = width * height * 4;\n        const pixelData8 = new Uint8ClampedArray(size);\n        for (let i = 0; i < size; i += 4) {\n            const v = Math.floor(Math.random() * 256);\n            pixelData8[i] = v;\n            pixelData8[i + 1] = v;\n            pixelData8[i + 2] = v;\n            pixelData8[i + 3] = 255;\n        }\n        return {\n            data: new ImageData(pixelData8, width, height),\n        };\n    }\n    static makeCacheKey(props) {\n        if (props.cacheId === undefined) {\n            return false;\n        }\n        const resolvedProps = NoiseTexture.resolveDefaults(props);\n        return `NoiseTexture,${resolvedProps.width},${resolvedProps.height},${resolvedProps.cacheId}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 128,\n            height: props.height ?? 128,\n            cacheId: props.cacheId ?? 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=NoiseTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = SubTexture.resolveDefaults(props || {});\n        this.parentTexture = this.props.texture;\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    onChangeIsRenderable(isRenderable) {\n        // Propagate the renderable owner change to the parent texture\n        this.parentTexture.setRenderableOwner(this, isRenderable);\n    }\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\nexport class RenderTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = RenderTexture.resolveDefaults(props || {});\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        this.props.width = value;\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        this.props.height = value;\n    }\n    async getTextureData() {\n        return {\n            data: null,\n            premultiplyAlpha: null,\n        };\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width || 256,\n            height: props.height || 256,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=RenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ImageWorkerManager } from './lib/ImageWorker.js';\nimport { ColorTexture } from './textures/ColorTexture.js';\nimport { ImageTexture } from './textures/ImageTexture.js';\nimport { NoiseTexture } from './textures/NoiseTexture.js';\nimport { SubTexture } from './textures/SubTexture.js';\nimport { RenderTexture } from './textures/RenderTexture.js';\nexport class CoreTextureManager {\n    /**\n     * Map of textures by cache key\n     */\n    keyCache = new Map();\n    /**\n     * Map of cache keys by texture\n     */\n    inverseKeyCache = new WeakMap();\n    /**\n     * Map of texture constructors by their type name\n     */\n    txConstructors = {};\n    imageWorkerManager = null;\n    hasCreateImageBitmap = !!self.createImageBitmap;\n    hasWorker = !!self.Worker;\n    /**\n     * Renderer that this texture manager is associated with\n     *\n     * @remarks\n     * This MUST be set before the texture manager is used. Otherwise errors\n     * will occur when using the texture manager.\n     */\n    renderer;\n    /**\n     * The current frame time in milliseconds\n     *\n     * @remarks\n     * This is used to populate the `lastRenderableChangeTime` property of\n     * {@link Texture} instances when their renderable state changes.\n     *\n     * Set by stage via `updateFrameTime` method.\n     */\n    frameTime = 0;\n    constructor(numImageWorkers) {\n        // Register default known texture types\n        if (this.hasCreateImageBitmap && this.hasWorker && numImageWorkers > 0) {\n            this.imageWorkerManager = new ImageWorkerManager(numImageWorkers);\n        }\n        if (!this.hasCreateImageBitmap) {\n            console.warn('[Lightning] createImageBitmap is not supported on this browser. ImageTexture will be slower.');\n        }\n        this.registerTextureType('ImageTexture', ImageTexture);\n        this.registerTextureType('ColorTexture', ColorTexture);\n        this.registerTextureType('NoiseTexture', NoiseTexture);\n        this.registerTextureType('SubTexture', SubTexture);\n        this.registerTextureType('RenderTexture', RenderTexture);\n    }\n    registerTextureType(textureType, textureClass) {\n        this.txConstructors[textureType] = textureClass;\n    }\n    loadTexture(textureType, props) {\n        let texture;\n        const TextureClass = this.txConstructors[textureType];\n        if (!TextureClass) {\n            throw new Error(`Texture type \"${textureType}\" is not registered`);\n        }\n        if (!texture) {\n            const cacheKey = TextureClass.makeCacheKey(props);\n            if (cacheKey && this.keyCache.has(cacheKey)) {\n                // console.log('Getting texture by cache key', cacheKey);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                texture = this.keyCache.get(cacheKey);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n                texture = new TextureClass(this, props);\n                if (cacheKey) {\n                    this.initTextureToCache(texture, cacheKey);\n                }\n            }\n        }\n        return texture;\n    }\n    initTextureToCache(texture, cacheKey) {\n        const { keyCache, inverseKeyCache } = this;\n        keyCache.set(cacheKey, texture);\n        inverseKeyCache.set(texture, cacheKey);\n    }\n    /**\n     * Remove a texture from the cache\n     *\n     * @remarks\n     * Called by Texture Cleanup when a texture is freed.\n     *\n     * @param texture\n     */\n    removeTextureFromCache(texture) {\n        const { inverseKeyCache, keyCache } = this;\n        const cacheKey = inverseKeyCache.get(texture);\n        if (cacheKey) {\n            keyCache.delete(cacheKey);\n        }\n    }\n}\n//# sourceMappingURL=CoreTextureManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst fontCache = new Map();\nconst weightConversions = {\n    normal: 400,\n    bold: 700,\n    bolder: 900,\n    lighter: 100,\n};\nconst fontWeightToNumber = (weight) => {\n    if (typeof weight === 'number') {\n        return weight;\n    }\n    return weightConversions[weight] || 400;\n};\nfunction resolveFontToUse(familyMapsByPriority, family, weightIn, style, stretch) {\n    let weight = fontWeightToNumber(weightIn);\n    for (const fontFamiles of familyMapsByPriority) {\n        const fontFaces = fontFamiles[family];\n        if (!fontFaces) {\n            continue;\n        }\n        if (fontFaces.size === 1) {\n            // No Exact match found, find nearest weight match\n            console.warn(`TrFontManager: Only one font face found for family: '${family}' - will be used for all weights and styles`);\n            return fontFaces.values().next().value;\n        }\n        const weightMap = new Map();\n        for (const fontFace of fontFaces) {\n            const fontFamilyWeight = fontWeightToNumber(fontFace.descriptors.weight);\n            if (fontFamilyWeight === weight &&\n                fontFace.descriptors.style === style &&\n                fontFace.descriptors.stretch === stretch) {\n                return fontFace;\n            }\n            weightMap.set(fontFamilyWeight, fontFace);\n        }\n        // No Exact match found, find nearest weight match\n        const msg = `TrFontManager: No exact match: '${family} Weight: ${weight} Style: ${style} Stretch: ${stretch}'`;\n        console.error(msg);\n        // Follow the CSS font-weight algorithm to find the nearest weight match\n        // https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#font-matching-algorithm\n        if (weight === 400 && weightMap.has(500)) {\n            return weightMap.get(500);\n        }\n        if (weight === 500 && weightMap.has(400)) {\n            return weightMap.get(400);\n        }\n        if (weight < 400) {\n            while (weight > 0) {\n                if (weightMap.has(weight)) {\n                    return weightMap.get(weight);\n                }\n                weight -= 100;\n            }\n            // reset back for the next loop\n            weight = 600;\n        }\n        while (weight < 1000) {\n            if (weightMap.has(weight)) {\n                return weightMap.get(weight);\n            }\n            weight += 100;\n        }\n        // finally check lower again\n        weight = 500;\n        while (weight > 0) {\n            if (weightMap.has(weight)) {\n                return weightMap.get(weight);\n            }\n            weight -= 100;\n        }\n    }\n    return;\n}\nexport class TrFontManager {\n    textRenderers;\n    constructor(textRenderers) {\n        this.textRenderers = textRenderers;\n        // Intentionally left blank\n    }\n    addFontFace(font) {\n        // All the font face to all of the text renderers that support it\n        for (const trId in this.textRenderers) {\n            const tr = this.textRenderers[trId];\n            if (tr && tr.isFontFaceSupported(font)) {\n                tr.addFontFace(font);\n            }\n        }\n    }\n    /**\n     * Utility method to resolve a single font face from a list of prioritized family maps based on\n     * a set of font properties.\n     *\n     * @remarks\n     * These are to be used by a text renderer to resolve a font face if needed.\n     *\n     * @param familyMapsByPriority\n     * @param props\n     * @returns\n     */\n    static resolveFontFace(familyMapsByPriority, props) {\n        const { fontFamily, fontWeight, fontStyle, fontStretch } = props;\n        const fontCacheString = `${fontFamily}${fontStyle}${fontWeight}${fontStretch}`;\n        if (fontCache.has(fontCacheString) === true) {\n            return fontCache.get(fontCacheString);\n        }\n        const resolvedFont = resolveFontToUse(familyMapsByPriority, fontFamily, fontWeight, fontStyle, fontStretch);\n        if (resolvedFont !== undefined) {\n            fontCache.set(fontCacheString, resolvedFont);\n        }\n        return resolvedFont;\n    }\n}\n//# sourceMappingURL=TrFontManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(glw, type, source) {\n    const shader = glw.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    glw.shaderSource(shader, source);\n    glw.compileShader(shader);\n    const success = glw.getShaderParameter(shader, glw.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(glw.getShaderInfoLog(shader));\n    glw.deleteShader(shader);\n}\nexport function createProgram(glw, vertexShader, fragmentShader) {\n    const program = glw.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    glw.attachShader(program, vertexShader);\n    glw.attachShader(program, fragmentShader);\n    glw.linkProgram(program);\n    const success = glw.getProgramParameter(program, glw.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(glw.getProgramInfoLog(program));\n    glw.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    glw;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const glw = (this.glw = this.renderer.glw);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = glw.isWebGl2();\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!glw.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(glw, glw.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(glw, glw.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(glw, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = glw.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            glw.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = glw.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = glw.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = glw.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const { glw } = this;\n        glw.enableVertexAttribArray(location);\n        glw.vertexAttribPointer(buffer, location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.glw.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { glw, parentHasRenderTexture, renderToTexture } = renderOp;\n        // Skip if the parent and current operation both have render textures\n        if (renderToTexture && parentHasRenderTexture) {\n            return;\n        }\n        // Bind render texture framebuffer dimensions as resolution\n        // if the parent has a render texture\n        if (parentHasRenderTexture) {\n            const { width, height } = renderOp.framebufferDimensions || {};\n            // Force pixel ratio to 1.0 for render textures since they are always 1:1\n            // the final render texture will be rendered to the screen with the correct pixel ratio\n            this.setUniform('u_pixelRatio', 1.0);\n            // Set resolution to the framebuffer dimensions\n            this.setUniform('u_resolution', new Float32Array([width ?? 0, height ?? 0]));\n        }\n        else {\n            this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n            this.setUniform('u_resolution', new Float32Array([glw.canvas.width, glw.canvas.height]));\n        }\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, ...value) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-unsafe-argument\n        this.glw.setUniform(this.uniformTypes[name], this.uniformLocations[name], ...value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.glw.useProgram(this.program);\n        this.glw.useProgram(this.program);\n        if (this.glw.isWebGl2() && this.vao) {\n            this.glw.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nexport class DefaultShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio;\n        vec2 screenSpace = vec2(2.0 / u_resolution.x, -2.0 / u_resolution.y);\n\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        gl_Position = vec4(normalized.x * screenSpace.x - 1.0, normalized.y * -abs(screenSpace.y) + 1.0, 0.0, 1.0);\n        gl_Position.y = -sign(screenSpace.y) * gl_Position.y;\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n          vec4 color = texture2D(u_texture, v_textureCoordinate);\n          gl_FragColor = vec4(v_color) * texture2D(u_texture, v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\n// import type { Texture } from '../textures/Texture';\nexport class DefaultShaderBatched extends WebGlCoreShader {\n    supportsIndexedTextures = true;\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: [\n                'a_position',\n                'a_textureCoordinate',\n                'a_color',\n                'a_textureIndex',\n            ],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_textures[0]', uniform: 'uniform1iv' },\n            ],\n        });\n    }\n    bindTextures(texture) {\n        const { renderer, glw } = this;\n        if (texture.length > renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS) {\n            throw new Error(`DefaultShaderBatched: Cannot bind more than ${renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS} textures`);\n        }\n        texture.forEach((t, i) => {\n            glw.activeTexture(i);\n            glw.bindTexture(t.ctxTexture);\n        });\n        const samplers = Array.from(Array(texture.length).keys());\n        this.setUniform('u_textures[0]', samplers);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_textureCoordinate;\n      attribute vec2 a_position;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      void main(){\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n        v_textureIndex = a_textureIndex;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: (textureUnits) => `\n      #define txUnits ${textureUnits}\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_image;\n      uniform sampler2D u_textures[txUnits];\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      vec4 sampleFromTexture(sampler2D textures[${textureUnits}], int idx, vec2 uv) {\n        ${Array.from(Array(textureUnits).keys())\n            .map((idx) => `\n          ${idx !== 0 ? 'else ' : ''}if (idx == ${idx}) {\n            return texture2D(textures[${idx}], uv);\n          }\n        `)\n            .join('')}\n        return texture2D(textures[0], uv);\n      }\n\n      void main(){\n        gl_FragColor = vec4(v_color) * sampleFromTexture(u_textures, int(v_textureIndex), v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShaderBatched.js.map","export class ShaderEffect {\n    priority = 1;\n    name = '';\n    ref;\n    target;\n    passParameters = '';\n    declaredUniforms = '';\n    uniformInfo = {};\n    static uniforms = {};\n    static methods;\n    static onShaderMask;\n    static onColorize;\n    static onEffectMask;\n    static getEffectKey(props) {\n        return '';\n    }\n    static getMethodParameters(uniforms, props) {\n        const res = [];\n        for (const u in uniforms) {\n            const uni = uniforms[u];\n            let define = '';\n            if (uni.size) {\n                define = `[${uni.size(props)}]`;\n            }\n            res.push(`${uni.type} ${u}${define}`);\n        }\n        return res.join(',');\n    }\n    constructor(options) {\n        const { ref, target, props = {} } = options;\n        this.ref = ref;\n        this.target = target;\n        const uniformInfo = {};\n        const passParameters = [];\n        let declaredUniforms = '';\n        const uniforms = this.constructor.uniforms || {};\n        for (const u in uniforms) {\n            const unif = uniforms[u];\n            const uniType = unif.type;\n            //make unique uniform name\n            const uniformName = `${ref}_${u}`;\n            let define = '';\n            if (unif.size) {\n                define = `[${unif.size(props)}]`;\n            }\n            passParameters.push(uniformName);\n            declaredUniforms += `uniform ${uniType} ${uniformName}${define};`;\n            uniformInfo[u] = { name: uniformName, uniform: uniforms[u].method };\n        }\n        this.passParameters = passParameters.join(',');\n        this.declaredUniforms = declaredUniforms;\n        this.uniformInfo = uniformInfo;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n    static makeEffectKey(props) {\n        return false;\n    }\n}\n//# sourceMappingURL=ShaderEffect.js.map","import { WebGlCoreShader, } from '../WebGlCoreShader.js';\nimport { ShaderEffect, } from './effects/ShaderEffect.js';\nimport { assertTruthy } from '../../../../utils.js';\nconst effectCache = new Map();\nconst getResolvedEffect = (effects, effectContructors) => {\n    const key = JSON.stringify(effects);\n    if (effectCache.has(key)) {\n        return effectCache.get(key);\n    }\n    effects = effects ?? [];\n    const resolvedEffects = [];\n    const effectsLength = effects.length;\n    let i = 0;\n    for (; i < effectsLength; i++) {\n        const { name, type, props } = effects[i];\n        const resolvedEffect = {\n            name,\n            type,\n            props: {},\n        };\n        const effectConstructor = effectContructors[type];\n        const defaultPropValues = effectConstructor.resolveDefaults(props);\n        const uniforms = effectConstructor.uniforms;\n        const uniformKeys = Object.keys(uniforms);\n        const uniformsLength = uniformKeys.length;\n        let j = 0;\n        for (; j < uniformsLength; j++) {\n            const key = uniformKeys[j];\n            const uniform = uniforms[key];\n            const result = {\n                value: defaultPropValues[key],\n                programValue: undefined,\n                updateOnBind: uniform.updateOnBind || false,\n                hasValidator: uniform.validator !== undefined,\n                hasProgramValueUpdater: uniform.updateProgramValue !== undefined,\n            };\n            const validatedValue = (result.hasValidator &&\n                uniform.validator(defaultPropValues[key], defaultPropValues)) ||\n                defaultPropValues[key];\n            if (defaultPropValues[key] !== validatedValue) {\n                result.validatedValue = validatedValue;\n            }\n            if (result.hasProgramValueUpdater) {\n                uniform.updateProgramValue(result);\n            }\n            if (result.programValue === undefined) {\n                result.programValue = result.value;\n            }\n            resolvedEffect.props[key] = result;\n        }\n        resolvedEffects.push(resolvedEffect);\n    }\n    effectCache.set(key, resolvedEffects);\n    return resolvedEffects;\n};\nexport class DynamicShader extends WebGlCoreShader {\n    effects = [];\n    constructor(renderer, props, effectContructors) {\n        const shader = DynamicShader.createShader(props, effectContructors);\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_alpha', uniform: 'uniform1f' },\n                ...shader.uniforms,\n            ],\n            shaderSources: {\n                vertex: shader.vertex,\n                fragment: shader.fragment,\n            },\n        });\n        this.effects = shader.effects;\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const effects = props.effects;\n        const effectsL = effects.length;\n        let i = 0;\n        for (; i < effectsL; i++) {\n            const effect = effects[i];\n            const uniformInfo = this.effects[i].uniformInfo;\n            const propKeys = Object.keys(effect.props);\n            const propsLength = propKeys.length;\n            let j = 0;\n            for (; j < propsLength; j++) {\n                const key = propKeys[j];\n                const prop = effect.props[key];\n                if (prop.updateOnBind === true) {\n                    const uniform = this.renderer.shManager.getRegisteredEffects()[effect.type]?.uniforms[key];\n                    uniform?.updateProgramValue(effect.props[key], props);\n                }\n                this.setUniform(uniformInfo[key].name, effect.props[key].programValue);\n            }\n        }\n    }\n    canBatchShaderProps(propsA, propsB) {\n        if (propsA.$alpha !== propsB.$alpha ||\n            propsA.$dimensions.width !== propsB.$dimensions.width ||\n            propsA.$dimensions.height !== propsB.$dimensions.height ||\n            propsA.effects.length !== propsB.effects.length) {\n            return false;\n        }\n        const propsEffectsLen = propsA.effects.length;\n        let i = 0;\n        for (; i < propsEffectsLen; i++) {\n            const effectA = propsA.effects[i];\n            const effectB = propsB.effects[i];\n            if (effectA.type !== effectB.type) {\n                return false;\n            }\n            for (const key in effectA.props) {\n                if ((effectB.props && !effectB.props[key]) ||\n                    effectA.props[key].value !==\n                        effectB.props[key].value) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    static createShader(props, effectContructors) {\n        //counts duplicate effects\n        const effectNameCount = {};\n        const methods = {};\n        let declareUniforms = '';\n        const uniforms = [];\n        const uFx = [];\n        const effects = props.effects.map((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            effectNameCount[key] = effectNameCount[key] ? ++effectNameCount[key] : 1;\n            const nr = effectNameCount[key];\n            if (nr === 1) {\n                uFx.push({ key, type: effect.type, props: effect.props });\n            }\n            //initialize new effect class;\n            const fxClass = new baseClass({\n                ref: `${key}${nr === 1 ? '' : nr}`,\n                target: key,\n                props: effect.props,\n            });\n            declareUniforms += fxClass.declaredUniforms;\n            uniforms.push(...Object.values(fxClass.uniformInfo));\n            return fxClass;\n        });\n        //build source\n        let effectMethods = '';\n        uFx?.forEach((fx) => {\n            const fxClass = effectContructors[fx.type];\n            const fxProps = fxClass.resolveDefaults((fx.props ?? {}));\n            const remap = [];\n            for (const m in fxClass.methods) {\n                let cm = m;\n                const fxMethod = fxClass.methods[m];\n                if (methods[m] && methods[m] !== fxMethod) {\n                    cm = DynamicShader.resolveMethodDuplicate(m, fxMethod, methods);\n                }\n                methods[cm] = fxMethod.replace('function', cm);\n                remap.push({ m, cm });\n            }\n            let onShaderMask = fxClass.onShaderMask instanceof Function\n                ? fxClass.onShaderMask(fxProps)\n                : fxClass.onShaderMask;\n            let onColorize = fxClass.onColorize instanceof Function\n                ? fxClass.onColorize(fxProps)\n                : fxClass.onColorize;\n            let onEffectMask = fxClass.onEffectMask instanceof Function\n                ? fxClass.onEffectMask(fxProps)\n                : fxClass.onEffectMask;\n            remap.forEach((r) => {\n                const { m, cm } = r;\n                const reg = new RegExp(`\\\\$${m}`, 'g');\n                if (onShaderMask) {\n                    onShaderMask = onShaderMask.replace(reg, cm);\n                }\n                if (onColorize) {\n                    onColorize = onColorize.replace(reg, cm);\n                }\n                if (onEffectMask) {\n                    onEffectMask = onEffectMask.replace(reg, cm);\n                }\n            });\n            const methodParameters = fxClass.getMethodParameters(fxClass.uniforms, fxProps);\n            const pm = methodParameters.length > 0 ? `, ${methodParameters}` : '';\n            if (onShaderMask) {\n                effectMethods += `\n        float fx_${fx.key}_onShaderMask(float shaderMask ${pm}) {\n          ${onShaderMask}\n        }\n        `;\n            }\n            if (onColorize) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onColorize(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onColorize}\n          }\n        `;\n            }\n            if (onEffectMask) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onEffectMask(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onEffectMask}\n          }\n        `;\n            }\n        });\n        let sharedMethods = '';\n        for (const m in methods) {\n            sharedMethods += methods[m];\n        }\n        //fill main functions\n        let currentMask = `mix(shaderColor, maskColor, clamp(-(lng_DefaultMask), 0.0, 1.0))`;\n        let drawEffects = `\n\n    `;\n        for (let i = 0; i < effects.length; i++) {\n            const current = effects[i];\n            const pm = current.passParameters.length > 0 ? `, ${current.passParameters}` : '';\n            const currentClass = effectContructors[current.name];\n            if (currentClass.onShaderMask) {\n                drawEffects += `\n        shaderMask = fx_${current.target}_onShaderMask(shaderMask ${pm});\n        `;\n            }\n            if (currentClass.onColorize) {\n                drawEffects += `\n        maskColor = fx_${current.target}_onColorize(shaderMask, maskColor, shaderColor${pm});\n        `;\n            }\n            if (currentClass.onEffectMask) {\n                currentMask = `fx_${current.target}_onEffectMask(shaderMask, maskColor, shaderColor${pm})`;\n            }\n            const next = effects[i + 1];\n            if (next === undefined ||\n                effectContructors[next.name].onEffectMask) {\n                drawEffects += `\n          shaderColor = ${currentMask};\n        `;\n            }\n        }\n        return {\n            effects,\n            uniforms,\n            fragment: DynamicShader.fragment(declareUniforms, sharedMethods, effectMethods, drawEffects),\n            vertex: DynamicShader.vertex(),\n        };\n    }\n    static resolveMethodDuplicate(key, effectMethod, methodCollection, increment = 0) {\n        const m = key + (increment > 0 ? increment : '');\n        if (methodCollection[m] && methodCollection[m] !== effectMethod) {\n            return this.resolveMethodDuplicate(key, effectMethod, methodCollection, ++increment);\n        }\n        return m;\n    }\n    static resolveDefaults(props, effectContructors) {\n        assertTruthy(effectContructors);\n        return {\n            effects: getResolvedEffect(props.effects ?? [], effectContructors),\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n            $alpha: 0,\n        };\n    }\n    static makeCacheKey(props, effectContructors) {\n        let fx = '';\n        props.effects?.forEach((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            fx += `,${key}`;\n        });\n        return `DynamicShader${fx}`;\n    }\n    static z$__type__Props;\n    static vertex = () => `\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    attribute vec2 a_textureCoordinate;\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    attribute float a_textureIndex;\n\n    uniform vec2 u_resolution;\n    uniform float u_pixelRatio;\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n    varying float v_textureIndex;\n\n    void main(){\n      vec2 normalized = a_position * u_pixelRatio / u_resolution;\n      vec2 zero_two = normalized * 2.0;\n      vec2 clip_space = zero_two - 1.0;\n\n      // pass to fragment\n      v_color = a_color;\n      v_textureCoordinate = a_textureCoordinate;\n      v_textureIndex = a_textureIndex;\n\n      // flip y\n      gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n    }\n  `;\n    static fragment = (uniforms, methods, effectMethods, drawEffects) => `\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    #define PI 3.14159265359\n\n    uniform vec2 u_resolution;\n    uniform vec2 u_dimensions;\n    uniform float u_alpha;\n    uniform float u_radius;\n    uniform sampler2D u_texture;\n    uniform float u_pixelRatio;\n\n    ${uniforms}\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n\n    ${methods}\n\n    ${effectMethods}\n\n    void main() {\n      vec2 p = v_textureCoordinate.xy * u_dimensions - u_dimensions * 0.5;\n      vec2 d = abs(p) - (u_dimensions) * 0.5;\n      float lng_DefaultMask = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n\n      vec4 shaderColor = vec4(0.0);\n      float shaderMask = lng_DefaultMask;\n\n      vec4 maskColor = texture2D(u_texture, v_textureCoordinate) * v_color;\n\n      shaderColor = mix(shaderColor, maskColor, clamp(-(lng_DefaultMask + 0.5), 0.0, 1.0));\n\n      ${drawEffects}\n\n      gl_FragColor = shaderColor * u_alpha;\n    }\n  `;\n}\n//# sourceMappingURL=DynamicShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader, } from '../WebGlCoreShader.js';\n/**\n * Similar to the {@link DefaultShader} but cuts out 4 rounded rectangle corners\n * as defined by the specified corner {@link RoundedRectangleProps.radius}\n */\nexport class RoundedRectangle extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_radius', uniform: 'uniform1f' },\n            ],\n        });\n    }\n    static z$__type__Props;\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius || 10,\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n        };\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const radiusFactor = Math.min(props.$dimensions.width, props.$dimensions.height) /\n            (2.0 * props.radius);\n        this.setUniform('u_radius', props.radius * Math.min(radiusFactor, 1));\n    }\n    canBatchShaderProps(propsA, propsB) {\n        return (propsA.radius === propsB.radius &&\n            propsA.$dimensions.width === propsB.$dimensions.width &&\n            propsA.$dimensions.height === propsB.$dimensions.height);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform vec2 u_dimensions;\n      uniform float u_radius;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n\n      float fillMask(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n\n      void main() {\n        vec4 color = texture2D(u_texture, v_textureCoordinate) * v_color;\n        vec2 halfDimensions = u_dimensions * 0.5;\n\n        float d = boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions + 0.5, u_radius);\n        gl_FragColor = mix(vec4(0.0), color, fillMask(d));\n      }\n    `,\n    };\n}\n//# sourceMappingURL=RoundedRectangle.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../lib/utils.js';\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nconst IDENTITY_MATRIX_3x3 = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n/**\n * SdfShader supports multi-channel and single-channel signed distance field textures.\n *\n * @remarks\n * This Shader is used by the {@link SdfTextRenderer}. Do not use thie Shader\n * directly. Instead create a Text Node and assign a SDF font family to it.\n *\n * @internalRemarks\n * The only thing this shader does to support multi-channel SDFs is to\n * add a median function to the fragment shader. If this one function call\n * ends up being a performance bottleneck we can always look at ways to\n * remove it.\n */\nexport class SdfShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_transform', uniform: 'uniformMatrix3fv' },\n                { name: 'u_scrollY', uniform: 'uniform1f' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_color', uniform: 'uniform4fv' },\n                { name: 'u_size', uniform: 'uniform1f' },\n                { name: 'u_distanceRange', uniform: 'uniform1f' },\n                { name: 'u_debug', uniform: 'uniform1i' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { glw } = this;\n        glw.activeTexture(0);\n        glw.bindTexture(textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const resolvedProps = SdfShader.resolveDefaults(props);\n        for (const key in resolvedProps) {\n            if (key === 'transform') {\n                this.setUniform('u_transform', false, resolvedProps[key]);\n            }\n            else if (key === 'scrollY') {\n                this.setUniform('u_scrollY', resolvedProps[key]);\n            }\n            else if (key === 'color') {\n                const components = getNormalizedRgbaComponents(resolvedProps.color);\n                this.setUniform('u_color', components);\n            }\n            else if (key === 'size') {\n                this.setUniform('u_size', resolvedProps[key]);\n            }\n            else if (key === 'distanceRange') {\n                this.setUniform('u_distanceRange', resolvedProps[key]);\n            }\n            else if (key === 'debug') {\n                this.setUniform('u_debug', resolvedProps[key] ? 1.0 : 0.0);\n            }\n        }\n    }\n    static resolveDefaults(props = {}) {\n        return {\n            transform: props.transform ?? IDENTITY_MATRIX_3x3,\n            scrollY: props.scrollY ?? 0,\n            color: props.color ?? 0xffffffff,\n            size: props.size ?? 16,\n            distanceRange: props.distanceRange ?? 1.0,\n            debug: props.debug ?? false,\n        };\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n      // an attribute is an input (in) to a vertex shader.\n      // It will receive data from a buffer\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n\n      uniform vec2 u_resolution;\n      uniform mat3 u_transform;\n      uniform float u_scrollY;\n      uniform float u_pixelRatio;\n      uniform float u_size;\n\n      varying vec2 v_texcoord;\n\n      void main() {\n        vec2 scrolledPosition = a_position * u_size - vec2(0, u_scrollY);\n        vec2 transformedPosition = (u_transform * vec3(scrolledPosition, 1)).xy;\n\n        // Calculate screen space with pixel ratio\n        vec2 screenSpace = (transformedPosition * u_pixelRatio / u_resolution * 2.0 - 1.0) * vec2(1, -1);\n\n        gl_Position = vec4(screenSpace, 0.0, 1.0);\n        v_texcoord = a_textureCoordinate;\n\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n      uniform vec4 u_color;\n      uniform sampler2D u_texture;\n      uniform float u_distanceRange;\n      uniform float u_pixelRatio;\n      uniform int u_debug;\n\n      varying vec2 v_texcoord;\n\n      float median(float r, float g, float b) {\n          return max(min(r, g), min(max(r, g), b));\n      }\n\n      void main() {\n          vec3 sample = texture2D(u_texture, v_texcoord).rgb;\n          if (u_debug == 1) {\n            gl_FragColor = vec4(sample.r, sample.g, sample.b, 1.0);\n            return;\n          }\n          float scaledDistRange = u_distanceRange * u_pixelRatio;\n          float sigDist = scaledDistRange * (median(sample.r, sample.g, sample.b) - 0.5);\n          float opacity = clamp(sigDist + 0.5, 0.0, 1.0) * u_color.a;\n\n          // Build the final color.\n          // IMPORTANT: We must premultiply the color by the alpha value before returning it.\n          gl_FragColor = vec4(u_color.r * opacity, u_color.g * opacity, u_color.b * opacity, opacity);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=SdfShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const colorToFloat32Array = (argb) => {\n    const col = getRgbaComponentsNormalized(argb);\n    /* eslint-disable @typescript-eslint/no-non-null-assertion -- getRgbaComponentsNormalized has a constant array size */\n    col[0] *= col[3];\n    col[1] *= col[3];\n    col[2] *= col[3];\n    /* eslint-enable */\n    return col;\n};\nconst getRgbaComponentsNormalized = (argb) => {\n    const r = ((argb / 65536) | 0) % 256;\n    const g = ((argb / 256) | 0) % 256;\n    const b = argb % 256;\n    const a = (argb / 16777216) | 0;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const updateShaderEffectColor = (values) => {\n    if (values.programValue === undefined) {\n        values.programValue = new Float32Array(4);\n    }\n    const rgba = values.value;\n    const floatArray = values.programValue;\n    floatArray[0] = (rgba >>> 24) / 255;\n    floatArray[1] = ((rgba >>> 16) & 0xff) / 255;\n    floatArray[2] = ((rgba >>> 8) & 0xff) / 255;\n    floatArray[3] = (rgba & 0xff) / 255;\n};\nexport const updateFloat32ArrayLength2 = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const floatArray = values.programValue;\n        floatArray[0] = validatedValue[0];\n        floatArray[1] = validatedValue[1];\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const updateFloat32ArrayLength4 = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const floatArray = values.programValue;\n        floatArray[0] = validatedValue[0];\n        floatArray[1] = validatedValue[1];\n        floatArray[2] = validatedValue[1];\n        floatArray[3] = validatedValue[1];\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const updateFloat32ArrayLengthN = (values) => {\n    const validatedValue = (values.validatedValue || values.value);\n    if (values.programValue instanceof Float32Array) {\n        const len = validatedValue.length;\n        const programValue = values.programValue;\n        for (let i = 0; i < len; i++) {\n            programValue[i] = validatedValue[i];\n        }\n    }\n    else {\n        values.programValue = new Float32Array(validatedValue);\n    }\n};\nexport const validateArrayLength4 = (value) => {\n    const isArray = Array.isArray(value);\n    if (!isArray) {\n        return [value, value, value, value];\n    }\n    else if (isArray && value.length === 4) {\n        return value;\n    }\n    else if (isArray && value.length === 2) {\n        return [value[0], value[1], value[0], value[1]];\n    }\n    else if (isArray && value.length === 3) {\n        return [value[0], value[1], value[2], value[0]];\n    }\n    return [value[0], value[0], value[0], value[0]];\n};\nexport const updateWebSafeRadius = (values, shaderProps) => {\n    if (values.programValue === undefined) {\n        values.programValue = new Float32Array(4);\n    }\n    const programValue = values.programValue;\n    const validatedValue = (values.validatedValue || values.value);\n    if (shaderProps === undefined && values.$dimensions === undefined) {\n        programValue[0] = validatedValue[0];\n        programValue[1] = validatedValue[1];\n        programValue[2] = validatedValue[2];\n        programValue[3] = validatedValue[3];\n        return;\n    }\n    let storedDimensions = values.$dimensions;\n    if (shaderProps !== undefined) {\n        const { $dimensions } = shaderProps;\n        if (storedDimensions !== undefined &&\n            (storedDimensions.width === $dimensions.width ||\n                storedDimensions.height === $dimensions.height)) {\n            return;\n        }\n        if (storedDimensions === undefined) {\n            storedDimensions = {\n                width: $dimensions?.width,\n                height: $dimensions?.height,\n            };\n            values.$dimensions = storedDimensions;\n        }\n    }\n    const { width, height } = storedDimensions;\n    const [r0, r1, r2, r3] = validatedValue;\n    const factor = Math.min(Math.min(Math.min(width / Math.max(width, r0 + r1), width / Math.max(width, r2 + r3)), Math.min(height / Math.max(height, r0 + r2), height / Math.max(height, r1 + r3))), 1);\n    programValue[0] = r0 * factor;\n    programValue[1] = r1 * factor;\n    programValue[2] = r2 * factor;\n    programValue[3] = r3 * factor;\n};\n//# sourceMappingURL=EffectUtils.js.map","import { updateWebSafeRadius, validateArrayLength4 } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor with rounded corners similar to {@link RoundedRectangle}\n */\nexport class RadiusEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radius';\n    static getEffectKey() {\n        return `radius`;\n    }\n    static uniforms = {\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            updateOnBind: true,\n            validator: validateArrayLength4,\n            updateProgramValue: updateWebSafeRadius,\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius ?? 10,\n        };\n    }\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  float r = radius[0] * step(v_textureCoordinate.x, 0.5) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[1] * step(0.5, v_textureCoordinate.x) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[2] * step(0.5, v_textureCoordinate.x) * step(0.5, v_textureCoordinate.y);\n  r = r + radius[3] * step(v_textureCoordinate.x, 0.5) * step(0.5, v_textureCoordinate.y);\n  return $boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions, r);\n  `;\n    static onEffectMask = `\n  return mix(vec4(0.0), maskColor, $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=RadiusEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderEffect renders a border along all edges of an element\n */\nexport class BorderEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'border';\n    static getEffectKey() {\n        return `border`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static onEffectMask = `\n  float intR = shaderMask + 1.0;\n  float mask = clamp(intR + width, 0.0, 1.0) - clamp(intR, 0.0, 1.0);\n  return mix(shaderColor, mix(shaderColor, maskColor, maskColor.a), mask);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateFloat32ArrayLengthN } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Linear Gradient effect over a effect mask\n */\nexport class LinearGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'linearGradient';\n    static getEffectKey(props) {\n        return `linearGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops || [];\n        if (stops.length === 0 || stops.length !== colors.length) {\n            const colorsL = colors.length;\n            let i = 0;\n            const tmp = stops;\n            for (; i < colorsL; i++) {\n                if (stops[i]) {\n                    tmp[i] = stops[i];\n                    if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                        tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                    }\n                }\n                else {\n                    tmp[i] = i * (1 / (colors.length - 1));\n                }\n            }\n            stops = tmp;\n        }\n        return {\n            colors,\n            stops,\n            angle: props.angle ?? 0,\n        };\n    }\n    static uniforms = {\n        angle: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                return rgbas.reduce((acc, val) => acc.concat(getNormalizedRgbaComponents(val)), []);\n            },\n            updateProgramValue: updateFloat32ArrayLengthN,\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static methods = {\n        fromLinear: `\n      vec4 function(vec4 linearRGB) {\n        vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\n        vec4 lower = linearRGB * vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        toLinear: `\n      vec4 function(vec4 sRGB) {\n        vec4 higher = pow((sRGB + vec4(0.055))/vec4(1.055), vec4(2.4));\n        vec4 lower = sRGB/vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        calcPoint: `\n      vec2 function(float d, float angle) {\n        return d * vec2(cos(angle), sin(angle)) + (u_dimensions * 0.5);\n      }\n    `,\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      float a = angle - (PI / 180.0 * 90.0);\n      float lineDist = abs(u_dimensions.x * cos(a)) + abs(u_dimensions.y * sin(a));\n      vec2 f = $calcPoint(lineDist * 0.5, a);\n      vec2 t = $calcPoint(lineDist * 0.5, a + PI);\n      vec2 gradVec = t - f;\n      float dist = dot(v_textureCoordinate.xy * u_dimensions - f, gradVec) / dot(gradVec, gradVec);\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = $fromLinear(mix($toLinear(colors[0]), $toLinear(colors[1]), stopCalc));\n      ${this.ColorLoop(colors)}\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=LinearGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Grayscale effect grayscales the color values of the current mask color\n */\nexport class GrayscaleEffect extends ShaderEffect {\n    name = 'grayscale';\n    static getEffectKey() {\n        return `grayscale`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amount: props.amount ?? 1,\n        };\n    }\n    static uniforms = {\n        amount: {\n            value: 1,\n            method: 'uniform1f',\n            type: 'float',\n        },\n    };\n    static onColorize = `\n    float grayness = 0.2 * maskColor.r + 0.6 * maskColor.g + 0.2 * maskColor.b;\n    return vec4(amount * vec3(grayness) + (1.0 - amount) * maskColor.rgb, maskColor.a);\n  `;\n}\n//# sourceMappingURL=GrayscaleEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the right side of an element\n */\nexport class BorderRightEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderRight';\n    static getEffectKey() {\n        return `borderRight`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(u_dimensions.x - width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderRightEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the top side of an element\n */\nexport class BorderTopEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderTop';\n    static getEffectKey() {\n        return `borderTop`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderTopEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the bottom side of an element\n */\nexport class BorderBottomEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderBottom';\n    static getEffectKey() {\n        return `borderBottom`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, u_dimensions.y - width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderBottomEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the left of an element\n */\nexport class BorderLeftEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderLeft';\n    static getEffectKey() {\n        return `borderLeft`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderLeftEffect.js.map","import { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Renders a Glitch effect using the incoming texture\n */\nexport class GlitchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'glitch';\n    static getEffectKey(props) {\n        return `glitch`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amplitude: props.amplitude ?? 0.2,\n            narrowness: props.narrowness ?? 4.0,\n            blockiness: props.blockiness ?? 2.0,\n            minimizer: props.minimizer ?? 8.0,\n            time: props.time ?? Date.now(),\n        };\n    }\n    static uniforms = {\n        amplitude: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        narrowness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        blockiness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        minimizer: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        time: {\n            value: 0,\n            method: 'uniform1f',\n            updateOnBind: true,\n            updateProgramValue: (values) => {\n                const value = (values.value =\n                    (Date.now() - values.value) % 1000);\n                values.programValue = value;\n            },\n            type: 'float',\n        },\n    };\n    static methods = {\n        rand: `\n      float function(vec2 p, float time) {\n        float t = floor(time * 20.) / 10.;\n        return fract(sin(dot(p, vec2(t * 12.9898, t * 78.233))) * 43758.5453);\n      }\n    `,\n        noise: `\n      float function(vec2 uv, float blockiness, float time) {\n        vec2 lv = fract(uv);\n        vec2 id = floor(uv);\n\n        float n1 = rand(id, time);\n        float n2 = rand(id+vec2(1,0), time);\n        float n3 = rand(id+vec2(0,1), time);\n        float n4 = rand(id+vec2(1,1), time);\n        vec2 u = smoothstep(0.0, 1.0 + blockiness, lv);\n        return mix(mix(n1, n2, u.x), mix(n3, n4, u.x), u.y);\n      }\n    `,\n        fbm: `\n      float function(vec2 uv, int count, float blockiness, float complexity, float time) {\n        float val = 0.0;\n        float amp = 0.5;\n        const int MAX_ITERATIONS = 10;\n\n        for(int i = 0; i < MAX_ITERATIONS; i++) {\n          if(i >= count) {break;}\n          val += amp * noise(uv, blockiness, time);\n          amp *= 0.5;\n          uv *= complexity;\n        }\n        return val;\n      }\n    `,\n    };\n    static onColorize = `\n    vec2 uv = v_textureCoordinate.xy;\n    float aspect = u_dimensions.x / u_dimensions.y;\n    vec2 a = vec2(uv.x * aspect , uv.y);\n    vec2 uv2 = vec2(a.x / u_dimensions.x, exp(a.y));\n\n    float shift = amplitude * pow($fbm(uv2, 4, blockiness, narrowness, time), minimizer);\n    float colR = texture2D(u_texture, vec2(uv.x + shift, uv.y)).r * (1. - shift);\n    float colG = texture2D(u_texture, vec2(uv.x - shift, uv.y)).g * (1. - shift);\n    float colB = texture2D(u_texture, vec2(uv.x - shift, uv.y)).b * (1. - shift);\n\n    vec3 f = vec3(colR, colG, colB);\n    return vec4(f, texture2D(u_texture, vec2(uv.x - shift, uv.y)).a);\n  `;\n}\n//# sourceMappingURL=GlitchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { updateFloat32ArrayLength4, validateArrayLength4, } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class FadeOutEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'fadeOut';\n    static getEffectKey() {\n        return `fadeOut`;\n    }\n    static uniforms = {\n        fade: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: validateArrayLength4,\n            updateProgramValue: updateFloat32ArrayLength4,\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            fade: props.fade ?? 10,\n        };\n    }\n    static onColorize = `\n  vec2 point = v_textureCoordinate.xy * u_dimensions.xy;\n  vec2 pos1;\n  vec2 pos2;\n  vec2 d;\n  float c;\n  vec4 result = maskColor;\n\n\n  if(fade[0] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x, point.y + fade[0]);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[1] > 0.0) {\n    pos1 = vec2(point.x - u_dimensions.x - fade[1], v_textureCoordinate.y);\n    pos2 = vec2(point.x - u_dimensions.x, v_textureCoordinate.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[2] > 0.0) {\n    pos1 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y - fade[2]);\n    pos2 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[3] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x + fade[3], point.y);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  return result;\n  `;\n}\n//# sourceMappingURL=FadeOutEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateFloat32ArrayLength2, updateFloat32ArrayLengthN, } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class RadialGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialGradient';\n    static getEffectKey(props) {\n        return `radialGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops || [];\n        if (stops.length === 0 || stops.length !== colors.length) {\n            const colorsL = colors.length;\n            let i = 0;\n            const tmp = stops;\n            for (; i < colorsL; i++) {\n                if (stops[i]) {\n                    tmp[i] = stops[i];\n                    if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                        tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                    }\n                }\n                else {\n                    tmp[i] = i * (1 / (colors.length - 1));\n                }\n            }\n            stops = tmp;\n        }\n        return {\n            colors,\n            stops,\n            width: props.width ?? 0,\n            height: props.height ?? props.width ?? 0,\n            pivot: props.pivot ?? [0.5, 0.5],\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        pivot: {\n            value: [0.5, 0.5],\n            updateProgramValue: updateFloat32ArrayLength2,\n            method: 'uniform2fv',\n            type: 'vec2',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                return rgbas.reduce((acc, val) => acc.concat(getNormalizedRgbaComponents(val)), []);\n            },\n            updateProgramValue: updateFloat32ArrayLengthN,\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      vec2 point = v_textureCoordinate.xy * u_dimensions;\n      vec2 projection = vec2(pivot.x * u_dimensions.x, pivot.y * u_dimensions.y);\n\n      float dist = length((point - projection) / vec2(width, height));\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = mix(colors[0], colors[1], stopCalc);\n      ${this.ColorLoop(colors)}\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=RadialGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { updateShaderEffectColor } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The RadialProgressEffect renders a border along all edges of an element\n */\nexport class RadialProgressEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialProgress';\n    static getEffectKey() {\n        return `radialProgress`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            progress: props.progress ?? 0.5,\n            offset: props.offset ?? 0,\n            range: props.range ?? Math.PI * 2,\n            rounded: props.rounded ?? false,\n            radius: props.radius ?? 1,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        progress: {\n            value: 0.5,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        offset: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        range: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        rounded: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n            validator: (value) => {\n                return value ? 1 : 0;\n            },\n        },\n        radius: {\n            value: 1,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            updateProgramValue: updateShaderEffectColor,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        rotateUV: `\n    vec2 function(vec2 uv, float d) {\n      float s = sin(d);\n      float c = cos(d);\n      mat2 rotMatrix = mat2(c, -s, s, c);\n      return uv * rotMatrix;\n    }\n    `,\n        drawDot: `\n    float function(vec2 uv, vec2 p, float r) {\n      uv += p;\n      float circle = length(uv) - r;\n      return clamp(-circle, 0.0, 1.0);\n    }\n    `,\n    };\n    static onEffectMask = `\n    float outerRadius = radius * u_dimensions.y * 0.5;\n\n    float endAngle = range * progress - 0.0005;\n\n    vec2 uv = v_textureCoordinate.xy * u_dimensions.xy - u_dimensions * 0.5;\n\n    uv = $rotateUV(uv, -(offset));\n    float linewidth = width * u_pixelRatio;\n    float circle = length(uv) - (outerRadius - linewidth) ;\n    circle = abs(circle) - linewidth;\n    circle = clamp(-circle, 0.0, 1.0);\n\n    float angle = (atan(uv.x, -uv.y) / 3.14159265359 * 0.5);\n    float p = endAngle / (PI * 2.);\n\n    circle *= step(fract(angle), fract(p));\n\n    circle = rounded < 1. ? circle : max(circle, $drawDot(uv, vec2(0, outerRadius - linewidth), linewidth));\n    circle = rounded < 1. ? circle : max(circle, $drawDot($rotateUV(uv, -(endAngle)), vec2(0, outerRadius - linewidth), linewidth));\n\n    return mix(shaderColor, maskColor, circle);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=RadialProgressEffect.js.map","import { updateWebSafeRadius, validateArrayLength4 } from './EffectUtils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor a holepunch effect with rounded corners similar to {@link RoundedRectangle}\n */\nexport class HolePunchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'holePunch';\n    static getEffectKey() {\n        return `holePunch`;\n    }\n    static uniforms = {\n        x: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        y: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            updateOnBind: true,\n            validator: validateArrayLength4,\n            updateProgramValue: updateWebSafeRadius,\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 50,\n            height: props.height || 50,\n            radius: props.radius ?? 0,\n        };\n    }\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  vec2 size = vec2(width, height) * 0.5;\n  vec2 basePos = v_textureCoordinate.xy * u_dimensions.xy - vec2(x, y);\n  vec2 pos = basePos - size;\n  float r = radius[0] * step(pos.x, 0.5) * step(pos.y, 0.5);\n  r = r + radius[1] * step(0.5, pos.x) * step(pos.y, 0.5);\n  r = r + radius[2] * step(0.5, pos.x) * step(0.5, pos.y);\n  r = r + radius[3] * step(pos.x, 0.5) * step(0.5, pos.y);\n  return $boxDist(pos, size, r);\n  `;\n    static onEffectMask = `\n  return mix(maskColor, vec4(0.0), $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=HolePunchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreShader } from '../../CoreShader.js';\nexport const ROUNDED_RECTANGLE_SHADER_TYPE = 'RoundedRectangle';\nexport class UnsupportedShader extends CoreShader {\n    shType;\n    constructor(shType) {\n        super();\n        this.shType = shType;\n        if (shType !== ROUNDED_RECTANGLE_SHADER_TYPE) {\n            console.warn('Unsupported shader:', shType);\n        }\n    }\n    bindRenderOp() {\n        // noop\n    }\n    bindProps() {\n        // noop\n    }\n    attach() {\n        // noop\n    }\n    detach() {\n        // noop\n    }\n}\n//# sourceMappingURL=UnsupportedShader.js.map","/**\n * Shader Controller Class\n *\n * @remarks\n * This class is used to control shader props.\n */\nexport class ShaderController {\n    type;\n    shader;\n    resolvedProps;\n    props;\n    constructor(type, shader, props, stage) {\n        this.type = type;\n        this.shader = shader;\n        this.resolvedProps = props;\n        const keys = Object.keys(props);\n        const l = keys.length;\n        const definedProps = {};\n        for (let i = 0; i < l; i++) {\n            const name = keys[i];\n            Object.defineProperty(definedProps, name, {\n                get: () => {\n                    return this.resolvedProps[name];\n                },\n                set: (value) => {\n                    this.resolvedProps[name] = value;\n                    stage.requestRender();\n                },\n            });\n        }\n        this.props = definedProps;\n    }\n    getResolvedProps() {\n        return this.resolvedProps;\n    }\n}\n//# sourceMappingURL=ShaderController.js.map","export class DynamicShaderController {\n    shader;\n    resolvedProps;\n    props;\n    type;\n    constructor(shader, props, shManager) {\n        this.shader = shader;\n        this.type = 'DynamicShader';\n        this.resolvedProps = props;\n        const effectConstructors = shManager.getRegisteredEffects();\n        const definedProps = {};\n        const effects = props.effects;\n        const effectsLength = effects.length;\n        for (let i = 0; i < effectsLength; i++) {\n            const { name: effectName, props: effectProps, type: effectType, } = effects[i];\n            if (effectName === undefined) {\n                continue;\n            }\n            const definedEffectProps = {};\n            const propEntries = Object.keys(effectProps);\n            const propEntriesLength = propEntries.length;\n            for (let j = 0; j < propEntriesLength; j++) {\n                const propName = propEntries[j];\n                Object.defineProperty(definedEffectProps, propName, {\n                    get: () => {\n                        return this.resolvedProps.effects[i].props[propName].value;\n                    },\n                    set: (value) => {\n                        const target = this.resolvedProps.effects[i].props[propName];\n                        target.value = value;\n                        if (target.hasValidator) {\n                            value = target.validatedValue = effectConstructors[effectType]\n                                .uniforms[propName]?.validator(value, effectProps);\n                        }\n                        if (target.hasProgramValueUpdater) {\n                            effectConstructors[effectType].uniforms[propName]\n                                ?.updateProgramValue(target);\n                        }\n                        else {\n                            target.programValue = value;\n                        }\n                        shManager.renderer.stage.requestRender();\n                    },\n                });\n            }\n            Object.defineProperty(definedProps, effectName, {\n                get: () => {\n                    return definedEffectProps;\n                },\n            });\n        }\n        this.props = definedProps;\n    }\n    getResolvedProps() {\n        return this.resolvedProps;\n    }\n}\n//# sourceMappingURL=DynamicShaderController.js.map","import { DefaultShader } from './renderers/webgl/shaders/DefaultShader.js';\nimport { DefaultShaderBatched } from './renderers/webgl/shaders/DefaultShaderBatched.js';\nimport { DynamicShader, } from './renderers/webgl/shaders/DynamicShader.js';\nimport { RoundedRectangle } from './renderers/webgl/shaders/RoundedRectangle.js';\nimport { SdfShader } from './renderers/webgl/shaders/SdfShader.js';\nimport { RadiusEffect } from './renderers/webgl/shaders/effects/RadiusEffect.js';\nimport { BorderEffect } from './renderers/webgl/shaders/effects/BorderEffect.js';\nimport { LinearGradientEffect, } from './renderers/webgl/shaders/effects/LinearGradientEffect.js';\nimport { GrayscaleEffect, } from './renderers/webgl/shaders/effects/GrayscaleEffect.js';\nimport { BorderRightEffect } from './renderers/webgl/shaders/effects/BorderRightEffect.js';\nimport { BorderTopEffect } from './renderers/webgl/shaders/effects/BorderTopEffect.js';\nimport { BorderBottomEffect } from './renderers/webgl/shaders/effects/BorderBottomEffect.js';\nimport { BorderLeftEffect } from './renderers/webgl/shaders/effects/BorderLeftEffect.js';\nimport { GlitchEffect, } from './renderers/webgl/shaders/effects/GlitchEffect.js';\nimport { FadeOutEffect, } from './renderers/webgl/shaders/effects/FadeOutEffect.js';\nimport { RadialGradientEffect, } from './renderers/webgl/shaders/effects/RadialGradientEffect.js';\nimport { RadialProgressEffect, } from './renderers/webgl/shaders/effects/RadialProgressEffect.js';\nimport { HolePunchEffect, } from './renderers/webgl/shaders/effects/HolePunchEffect.js';\nimport { WebGlCoreShader } from './renderers/webgl/WebGlCoreShader.js';\nimport { UnsupportedShader } from './renderers/canvas/shaders/UnsupportedShader.js';\nimport { ShaderController } from '../main-api/ShaderController.js';\nimport { DynamicShaderController, } from '../main-api/DynamicShaderController.js';\nexport class CoreShaderManager {\n    shCache = new Map();\n    shConstructors = {};\n    attachedShader = null;\n    effectConstructors = {};\n    renderer;\n    constructor() {\n        this.registerShaderType('DefaultShader', DefaultShader);\n        this.registerShaderType('DefaultShaderBatched', DefaultShaderBatched);\n        this.registerShaderType('RoundedRectangle', RoundedRectangle);\n        this.registerShaderType('DynamicShader', DynamicShader);\n        this.registerShaderType('SdfShader', SdfShader);\n        this.registerEffectType('border', BorderEffect);\n        this.registerEffectType('borderBottom', BorderBottomEffect);\n        this.registerEffectType('borderLeft', BorderLeftEffect);\n        this.registerEffectType('borderRight', BorderRightEffect);\n        this.registerEffectType('borderTop', BorderTopEffect);\n        this.registerEffectType('fadeOut', FadeOutEffect);\n        this.registerEffectType('linearGradient', LinearGradientEffect);\n        this.registerEffectType('radialGradient', RadialGradientEffect);\n        this.registerEffectType('grayscale', GrayscaleEffect);\n        this.registerEffectType('glitch', GlitchEffect);\n        this.registerEffectType('radius', RadiusEffect);\n        this.registerEffectType('radialProgress', RadialProgressEffect);\n        this.registerEffectType('holePunch', HolePunchEffect);\n    }\n    registerShaderType(shType, shClass) {\n        this.shConstructors[shType] = shClass;\n    }\n    registerEffectType(effectType, effectClass) {\n        this.effectConstructors[effectType] = effectClass;\n    }\n    getRegisteredEffects() {\n        return this.effectConstructors;\n    }\n    getRegisteredShaders() {\n        return this.shConstructors;\n    }\n    /**\n     * Loads a shader (if not already loaded) and returns a controller for it.\n     *\n     * @param shType\n     * @param props\n     * @returns\n     */\n    loadShader(shType, props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const ShaderClass = this.shConstructors[shType];\n        if (!ShaderClass) {\n            throw new Error(`Shader type \"${shType}\" is not registered`);\n        }\n        if (this.renderer.mode === 'canvas' &&\n            ShaderClass.prototype instanceof WebGlCoreShader) {\n            return this._createShaderCtr(shType, new UnsupportedShader(shType), props);\n        }\n        if (shType === 'DynamicShader') {\n            return this.loadDynamicShader(props);\n        }\n        const resolvedProps = ShaderClass.resolveDefaults(props);\n        const cacheKey = ShaderClass.makeCacheKey(resolvedProps) || ShaderClass.name;\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return this._createShaderCtr(shType, this.shCache.get(cacheKey), resolvedProps);\n        }\n        // @ts-expect-error ShaderClass WILL accept a Renderer\n        const shader = new ShaderClass(this.renderer, props);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return this._createShaderCtr(shType, shader, resolvedProps);\n    }\n    loadDynamicShader(props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const resolvedProps = DynamicShader.resolveDefaults(props, this.effectConstructors);\n        const cacheKey = DynamicShader.makeCacheKey(resolvedProps, this.effectConstructors);\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return this._createDynShaderCtr(this.shCache.get(cacheKey), resolvedProps);\n        }\n        const shader = new DynamicShader(this.renderer, props, this.effectConstructors);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return this._createDynShaderCtr(shader, resolvedProps);\n    }\n    _createShaderCtr(type, shader, props) {\n        return new ShaderController(type, shader, props, this.renderer.stage);\n    }\n    _createDynShaderCtr(shader, props) {\n        return new DynamicShaderController(shader, props, this);\n    }\n    useShader(shader) {\n        if (this.attachedShader === shader) {\n            return;\n        }\n        if (this.attachedShader) {\n            this.attachedShader.detach();\n        }\n        shader.attach();\n        this.attachedShader = shader;\n    }\n}\n//# sourceMappingURL=CoreShaderManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst trPropSetterDefaults = {\n    x: (state, value) => {\n        state.props.x = value;\n    },\n    y: (state, value) => {\n        state.props.y = value;\n    },\n    width: (state, value) => {\n        state.props.width = value;\n    },\n    height: (state, value) => {\n        state.props.height = value;\n    },\n    color: (state, value) => {\n        state.props.color = value;\n    },\n    zIndex: (state, value) => {\n        state.props.zIndex = value;\n    },\n    fontFamily: (state, value) => {\n        state.props.fontFamily = value;\n    },\n    fontWeight: (state, value) => {\n        state.props.fontWeight = value;\n    },\n    fontStyle: (state, value) => {\n        state.props.fontStyle = value;\n    },\n    fontStretch: (state, value) => {\n        state.props.fontStretch = value;\n    },\n    fontSize: (state, value) => {\n        state.props.fontSize = value;\n    },\n    text: (state, value) => {\n        state.props.text = value;\n    },\n    textAlign: (state, value) => {\n        state.props.textAlign = value;\n    },\n    contain: (state, value) => {\n        state.props.contain = value;\n    },\n    offsetY: (state, value) => {\n        state.props.offsetY = value;\n    },\n    scrollable: (state, value) => {\n        state.props.scrollable = value;\n    },\n    scrollY: (state, value) => {\n        state.props.scrollY = value;\n    },\n    letterSpacing: (state, value) => {\n        state.props.letterSpacing = value;\n    },\n    lineHeight: (state, value) => {\n        state.props.lineHeight = value;\n    },\n    maxLines: (state, value) => {\n        state.props.maxLines = value;\n    },\n    textBaseline: (state, value) => {\n        state.props.textBaseline = value;\n    },\n    verticalAlign: (state, value) => {\n        state.props.verticalAlign = value;\n    },\n    overflowSuffix: (state, value) => {\n        state.props.overflowSuffix = value;\n    },\n    debug: (state, value) => {\n        state.props.debug = value;\n    },\n};\nexport class TextRenderer {\n    stage;\n    set;\n    constructor(stage) {\n        this.stage = stage;\n        const propSetters = {\n            ...trPropSetterDefaults,\n            ...this.getPropertySetters(),\n        };\n        // For each prop setter add a wrapper method that checks if the prop is\n        // different before calling the setter\n        this.set = Object.freeze(Object.fromEntries(Object.entries(propSetters).map(([key, setter]) => {\n            return [\n                key,\n                (state, value) => {\n                    if (state.props[key] !== value) {\n                        setter(state, value);\n                        // Assume any prop change will require a render\n                        // This is required because otherwise a paused RAF will result\n                        // in renders when text props are changed.\n                        this.stage.requestRender();\n                    }\n                },\n            ];\n        })));\n    }\n    setStatus(state, status, error) {\n        // Don't emit the same status twice\n        if (state.status === status) {\n            return;\n        }\n        state.status = status;\n        state.emitter.emit(status, error);\n    }\n    /**\n     * Allows the CoreTextNode to communicate changes to the isRenderable state of\n     * the itself.\n     *\n     * @param state\n     * @param renderable\n     */\n    setIsRenderable(state, renderable) {\n        state.isRenderable = renderable;\n    }\n    /**\n     * Destroy/Clean up the state object\n     *\n     * @remarks\n     * Opposite of createState(). Frees any event listeners / resources held by\n     * the state that may not reliably get garbage collected.\n     *\n     * @param state\n     */\n    destroyState(state) {\n        this.setStatus(state, 'destroyed');\n        state.emitter.removeAllListeners();\n    }\n    /**\n     * Schedule a state update via queueMicrotask\n     *\n     * @remarks\n     * This method is used to schedule a state update via queueMicrotask. This\n     * method should be called whenever a state update is needed, and it will\n     * ensure that the state is only updated once per microtask.\n     * @param state\n     * @returns\n     */\n    scheduleUpdateState(state) {\n        if (state.updateScheduled) {\n            return;\n        }\n        state.updateScheduled = true;\n        queueMicrotask(() => {\n            // If the state has been destroyed, don't update it\n            if (state.status === 'destroyed') {\n                return;\n            }\n            state.updateScheduled = false;\n            this.updateState(state);\n        });\n    }\n}\n//# sourceMappingURL=TextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class that keeps track of the invocations of Context methods when\n * the `enableContextSpy` renderer option is enabled.\n */\nexport class ContextSpy {\n    data = {};\n    reset() {\n        this.data = {};\n    }\n    increment(name) {\n        if (!this.data[name]) {\n            this.data[name] = 0;\n        }\n        this.data[name]++;\n    }\n    getData() {\n        return { ...this.data };\n    }\n}\n//# sourceMappingURL=ContextSpy.js.map","import { bytesToMb } from './utils.js';\n/**\n * LRU (Least Recently Used) style memory manager for textures\n *\n * @remarks\n * This class is responsible for managing the memory usage of textures\n * in the Renderer. It keeps track of the memory used by each texture\n * and triggers a cleanup when the memory usage exceeds a critical\n * threshold (`criticalThreshold`).\n *\n * The cleanup process will free up non-renderable textures until the\n * memory usage is below a target threshold (`targetThresholdLevel`).\n *\n * The memory manager's clean up process will also be triggered when the\n * scene is idle for a certain amount of time (`cleanupInterval`).\n */\nexport class TextureMemoryManager {\n    stage;\n    memUsed = 0;\n    loadedTextures = new Map();\n    criticalThreshold;\n    targetThreshold;\n    cleanupInterval;\n    debugLogging;\n    lastCleanupTime = 0;\n    criticalCleanupRequested = false;\n    /**\n     * The current frame time in milliseconds\n     *\n     * @remarks\n     * This is used to determine when to perform Idle Texture Cleanups.\n     *\n     * Set by stage via `updateFrameTime` method.\n     */\n    frameTime = 0;\n    constructor(stage, settings) {\n        this.stage = stage;\n        const { criticalThreshold } = settings;\n        this.criticalThreshold = Math.round(criticalThreshold);\n        const targetFraction = Math.max(0, Math.min(1, settings.targetThresholdLevel));\n        this.targetThreshold = Math.round(criticalThreshold * targetFraction);\n        this.cleanupInterval = settings.cleanupInterval;\n        this.debugLogging = settings.debugLogging;\n        if (settings.debugLogging) {\n            let lastMemUse = 0;\n            setInterval(() => {\n                if (lastMemUse !== this.memUsed) {\n                    lastMemUse = this.memUsed;\n                    console.log(`[TextureMemoryManager] Memory used: ${bytesToMb(this.memUsed)} mb / ${bytesToMb(this.criticalThreshold)} mb (${((this.memUsed / this.criticalThreshold) *\n                        100).toFixed(1)}%)`);\n                }\n            }, 1000);\n        }\n        // If the threshold is 0, we disable the memory manager by replacing the\n        // setTextureMemUse method with a no-op function.\n        if (criticalThreshold === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            this.setTextureMemUse = () => { };\n        }\n    }\n    setTextureMemUse(texture, byteSize) {\n        if (this.loadedTextures.has(texture)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.memUsed -= this.loadedTextures.get(texture);\n        }\n        if (byteSize === 0) {\n            this.loadedTextures.delete(texture);\n            return;\n        }\n        else {\n            this.memUsed += byteSize;\n            this.loadedTextures.set(texture, byteSize);\n        }\n        if (this.memUsed > this.criticalThreshold) {\n            this.criticalCleanupRequested = true;\n        }\n    }\n    checkCleanup() {\n        return (this.criticalCleanupRequested ||\n            (this.memUsed > this.targetThreshold &&\n                this.frameTime - this.lastCleanupTime >= this.cleanupInterval));\n    }\n    cleanup() {\n        const critical = this.criticalCleanupRequested;\n        this.lastCleanupTime = this.frameTime;\n        this.criticalCleanupRequested = false;\n        if (critical) {\n            this.stage.queueFrameEvent('criticalCleanup', {\n                memUsed: this.memUsed,\n                criticalThreshold: this.criticalThreshold,\n            });\n        }\n        if (this.debugLogging) {\n            console.log(`[TextureMemoryManager] Cleaning up textures. Critical: ${critical}`);\n        }\n        /**\n         * Sort the loaded textures by renderability, then by last touch time.\n         *\n         * This will ensure that the array is ordered by the following:\n         * - Non-renderable textures, starting at the least recently rendered\n         * - Renderable textures, starting at the least recently rendered\n         */\n        const textures = [...this.loadedTextures.keys()].sort((textureA, textureB) => {\n            const txARenderable = textureA.renderable;\n            const txBRenderable = textureB.renderable;\n            if (txARenderable === txBRenderable) {\n                return (textureA.lastRenderableChangeTime -\n                    textureB.lastRenderableChangeTime);\n            }\n            else if (txARenderable) {\n                return 1;\n            }\n            else if (txBRenderable) {\n                return -1;\n            }\n            return 0;\n        });\n        // Free non-renderable textures until we reach the target threshold\n        const memTarget = this.targetThreshold;\n        const txManager = this.stage.txManager;\n        for (const texture of textures) {\n            if (texture.renderable) {\n                // Stop at the first renderable texture (The rest are renderable because of the sort above)\n                // We don't want to free renderable textures because they will just likely be reloaded in the next frame\n                break;\n            }\n            if (texture.preventCleanup === false) {\n                texture.ctxTexture.free();\n                txManager.removeTextureFromCache(texture);\n            }\n            if (this.memUsed <= memTarget) {\n                // Stop once we've freed enough textures to reach under the target threshold\n                break;\n            }\n        }\n        if (this.memUsed >= this.criticalThreshold) {\n            this.stage.queueFrameEvent('criticalCleanupFailed', {\n                memUsed: this.memUsed,\n                criticalThreshold: this.criticalThreshold,\n            });\n            console.warn(`[TextureMemoryManager] Memory usage above critical threshold after cleanup: ${this.memUsed}`);\n        }\n    }\n    /**\n     * Get the current texture memory usage information\n     *\n     * @remarks\n     * This method is for debugging purposes and returns information about the\n     * current memory usage of the textures in the Renderer.\n     */\n    getMemoryInfo() {\n        let renderableTexturesLoaded = 0;\n        const renderableMemUsed = [...this.loadedTextures.keys()].reduce(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        (acc, texture) => {\n            renderableTexturesLoaded += texture.renderable ? 1 : 0;\n            return (acc + (texture.renderable ? this.loadedTextures.get(texture) : 0));\n        }, 0);\n        return {\n            criticalThreshold: this.criticalThreshold,\n            targetThreshold: this.targetThreshold,\n            renderableMemUsed,\n            memUsed: this.memUsed,\n            renderableTexturesLoaded,\n            loadedTextures: this.loadedTextures.size,\n        };\n    }\n}\n//# sourceMappingURL=TextureMemoryManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    textureSource;\n    memManager;\n    constructor(memManager, textureSource) {\n        this.memManager = memManager;\n        this.textureSource = textureSource;\n    }\n    setTextureMemUse(byteSize) {\n        this.memManager.setTextureMemUse(this.textureSource, byteSize);\n    }\n    get renderable() {\n        return this.textureSource.renderable;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    options;\n    mode;\n    stage;\n    //// Core Managers\n    txManager;\n    txMemManager;\n    shManager;\n    rttNodes = [];\n    constructor(options) {\n        this.options = options;\n        this.stage = options.stage;\n        this.txManager = options.txManager;\n        this.txMemManager = options.txMemManager;\n        this.shManager = options.shManager;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreNode, UpdateType } from './CoreNode.js';\nimport { assertTruthy } from '../utils.js';\nimport { Matrix3d } from './lib/Matrix3d.js';\n/**\n * An CoreNode in the Renderer scene graph that renders text.\n *\n * @remarks\n * A Text Node is the second graphical building block of the Renderer scene\n * graph. It renders text using a specific text renderer that is automatically\n * chosen based on the font requested and what type of fonts are installed\n * into an app.\n *\n * The text renderer can be overridden by setting the `textRendererOverride`\n *\n * The `texture` and `shader` properties are managed by loaded text renderer and\n * should not be set directly.\n *\n * For non-text rendering, see {@link CoreNode}.\n */\nexport class CoreTextNode extends CoreNode {\n    textRenderer;\n    trState;\n    _textRendererOverride = null;\n    constructor(stage, props, textRenderer) {\n        super(stage, props);\n        this._textRendererOverride = props.textRendererOverride;\n        this.textRenderer = textRenderer;\n        const textRendererState = this.createState({\n            x: this.absX,\n            y: this.absY,\n            width: props.width,\n            height: props.height,\n            textAlign: props.textAlign,\n            color: props.color,\n            zIndex: props.zIndex,\n            contain: props.contain,\n            scrollable: props.scrollable,\n            scrollY: props.scrollY,\n            offsetY: props.offsetY,\n            letterSpacing: props.letterSpacing,\n            debug: props.debug,\n            fontFamily: props.fontFamily,\n            fontSize: props.fontSize,\n            fontStretch: props.fontStretch,\n            fontStyle: props.fontStyle,\n            fontWeight: props.fontWeight,\n            text: props.text,\n            lineHeight: props.lineHeight,\n            maxLines: props.maxLines,\n            textBaseline: props.textBaseline,\n            verticalAlign: props.verticalAlign,\n            overflowSuffix: props.overflowSuffix,\n        });\n        this.trState = textRendererState;\n    }\n    onTextLoaded = () => {\n        const { contain } = this;\n        const setWidth = this.trState.props.width;\n        const setHeight = this.trState.props.height;\n        const calcWidth = this.trState.textW || 0;\n        const calcHeight = this.trState.textH || 0;\n        if (contain === 'both') {\n            this.props.width = setWidth;\n            this.props.height = setHeight;\n        }\n        else if (contain === 'width') {\n            this.props.width = setWidth;\n            this.props.height = calcHeight;\n        }\n        else if (contain === 'none') {\n            this.props.width = calcWidth;\n            this.props.height = calcHeight;\n        }\n        this.updateLocalTransform();\n        // Incase the RAF loop has been stopped already before text was loaded,\n        // we request a render so it can be drawn.\n        this.stage.requestRender();\n        this.emit('loaded', {\n            type: 'text',\n            dimensions: {\n                width: this.trState.textW || 0,\n                height: this.trState.textH || 0,\n            },\n        });\n    };\n    onTextFailed = (target, error) => {\n        this.emit('failed', {\n            type: 'text',\n            error,\n        });\n    };\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        this.props.width = value;\n        this.textRenderer.set.width(this.trState, value);\n        // If not containing, we must update the local transform to account for the\n        // new width\n        if (this.contain === 'none') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        this.props.height = value;\n        this.textRenderer.set.height(this.trState, value);\n        // If not containing in the horizontal direction, we must update the local\n        // transform to account for the new height\n        if (this.contain !== 'both') {\n            this.setUpdateType(UpdateType.Local);\n        }\n    }\n    get color() {\n        return this.trState.props.color;\n    }\n    set color(value) {\n        this.textRenderer.set.color(this.trState, value);\n    }\n    get text() {\n        return this.trState.props.text;\n    }\n    set text(value) {\n        this.textRenderer.set.text(this.trState, value);\n    }\n    get textRendererOverride() {\n        return this._textRendererOverride;\n    }\n    set textRendererOverride(value) {\n        this._textRendererOverride = value;\n        this.textRenderer.destroyState(this.trState);\n        const textRenderer = this.stage.resolveTextRenderer(this.trState.props, this._textRendererOverride);\n        if (!textRenderer) {\n            console.warn('Text Renderer not found for font', this.trState.props.fontFamily);\n            return;\n        }\n        this.textRenderer = textRenderer;\n        this.trState = this.createState(this.trState.props);\n    }\n    get fontSize() {\n        return this.trState.props.fontSize;\n    }\n    set fontSize(value) {\n        this.textRenderer.set.fontSize(this.trState, value);\n    }\n    get fontFamily() {\n        return this.trState.props.fontFamily;\n    }\n    set fontFamily(value) {\n        this.textRenderer.set.fontFamily(this.trState, value);\n    }\n    get fontStretch() {\n        return this.trState.props.fontStretch;\n    }\n    set fontStretch(value) {\n        this.textRenderer.set.fontStretch(this.trState, value);\n    }\n    get fontStyle() {\n        return this.trState.props.fontStyle;\n    }\n    set fontStyle(value) {\n        this.textRenderer.set.fontStyle(this.trState, value);\n    }\n    get fontWeight() {\n        return this.trState.props.fontWeight;\n    }\n    set fontWeight(value) {\n        this.textRenderer.set.fontWeight(this.trState, value);\n    }\n    get textAlign() {\n        return this.trState.props.textAlign;\n    }\n    set textAlign(value) {\n        this.textRenderer.set.textAlign(this.trState, value);\n    }\n    get contain() {\n        return this.trState.props.contain;\n    }\n    set contain(value) {\n        this.textRenderer.set.contain(this.trState, value);\n    }\n    get scrollable() {\n        return this.trState.props.scrollable;\n    }\n    set scrollable(value) {\n        this.textRenderer.set.scrollable(this.trState, value);\n    }\n    get scrollY() {\n        return this.trState.props.scrollY;\n    }\n    set scrollY(value) {\n        this.textRenderer.set.scrollY(this.trState, value);\n    }\n    get offsetY() {\n        return this.trState.props.offsetY;\n    }\n    set offsetY(value) {\n        this.textRenderer.set.offsetY(this.trState, value);\n    }\n    get letterSpacing() {\n        return this.trState.props.letterSpacing;\n    }\n    set letterSpacing(value) {\n        this.textRenderer.set.letterSpacing(this.trState, value);\n    }\n    get lineHeight() {\n        return this.trState.props.lineHeight;\n    }\n    set lineHeight(value) {\n        this.textRenderer.set.lineHeight(this.trState, value);\n    }\n    get maxLines() {\n        return this.trState.props.maxLines;\n    }\n    set maxLines(value) {\n        this.textRenderer.set.maxLines(this.trState, value);\n    }\n    get textBaseline() {\n        return this.trState.props.textBaseline;\n    }\n    set textBaseline(value) {\n        this.textRenderer.set.textBaseline(this.trState, value);\n    }\n    get verticalAlign() {\n        return this.trState.props.verticalAlign;\n    }\n    set verticalAlign(value) {\n        this.textRenderer.set.verticalAlign(this.trState, value);\n    }\n    get overflowSuffix() {\n        return this.trState.props.overflowSuffix;\n    }\n    set overflowSuffix(value) {\n        this.textRenderer.set.overflowSuffix(this.trState, value);\n    }\n    get debug() {\n        return this.trState.props.debug;\n    }\n    set debug(value) {\n        this.textRenderer.set.debug(this.trState, value);\n    }\n    update(delta, parentClippingRect) {\n        super.update(delta, parentClippingRect);\n        assertTruthy(this.globalTransform);\n        // globalTransform is updated in super.update(delta)\n        this.textRenderer.set.x(this.trState, this.globalTransform.tx);\n        this.textRenderer.set.y(this.trState, this.globalTransform.ty);\n    }\n    checkRenderProps() {\n        if (this.trState && this.trState.props.text !== '') {\n            return true;\n        }\n        return super.checkRenderProps();\n    }\n    onChangeIsRenderable(isRenderable) {\n        super.onChangeIsRenderable(isRenderable);\n        this.textRenderer.setIsRenderable(this.trState, isRenderable);\n    }\n    renderQuads(renderer) {\n        assertTruthy(this.globalTransform);\n        // If the text renderer does not support rendering quads, fallback to the\n        // default renderQuads method\n        if (!this.textRenderer.renderQuads) {\n            super.renderQuads(renderer);\n            return;\n        }\n        // If the text renderer does support rendering quads, use it...\n        // Prevent quad rendering if parent has a render texture\n        // and this node is not the render texture\n        if (this.parentHasRenderTexture) {\n            if (!renderer.renderToTextureActive) {\n                return;\n            }\n            // Prevent quad rendering if parent render texture is not the active render texture\n            if (this.parentRenderTexture !== renderer.activeRttNode) {\n                return;\n            }\n        }\n        if (this.parentHasRenderTexture && this.props.parent?.rtt) {\n            this.globalTransform = Matrix3d.identity();\n            if (this.localTransform) {\n                this.globalTransform.multiply(this.localTransform);\n            }\n        }\n        assertTruthy(this.globalTransform);\n        this.textRenderer.renderQuads(this.trState, this.globalTransform, this.clippingRect, this.worldAlpha, this.parentHasRenderTexture, this.framebufferDimensions);\n    }\n    /**\n     * Destroy the node and cleanup all resources\n     */\n    destroy() {\n        super.destroy();\n        this.textRenderer.destroyState(this.trState);\n    }\n    /**\n     * Resolve a text renderer and a new state based on the current text renderer props provided\n     * @param props\n     * @returns\n     */\n    createState(props) {\n        const textRendererState = this.textRenderer.createState(props, this);\n        textRendererState.emitter.on('loaded', this.onTextLoaded);\n        textRendererState.emitter.on('failed', this.onTextFailed);\n        this.textRenderer.scheduleUpdateState(textRendererState);\n        return textRendererState;\n    }\n}\n//# sourceMappingURL=CoreTextNode.js.map","export function santizeCustomDataMap(d) {\n    const validTypes = {\n        boolean: true,\n        string: true,\n        number: true,\n        undefined: true,\n    };\n    const keys = Object.keys(d);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!key) {\n            continue;\n        }\n        const value = d[key];\n        const valueType = typeof value;\n        // Typescript doesn't understand the above const valueType ¯\\_(ツ)_/¯\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore-next-line\n        if (valueType === 'string' && value.length > 2048) {\n            console.warn(`Custom Data value for ${key} is too long, it will be truncated to 2048 characters`);\n            // same here, see above comment, this can only be a string at this point\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore-next-line\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n            d[key] = value.substring(0, 2048);\n        }\n        if (!validTypes[valueType]) {\n            console.warn(`Custom Data value for ${key} is not a boolean, string, or number, it will be ignored`);\n            delete d[key];\n        }\n    }\n    return d;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { startLoop, getTimeStamp } from './platform.js';\nimport { assertTruthy, setPremultiplyMode } from '../utils.js';\nimport { AnimationManager } from './animations/AnimationManager.js';\nimport { CoreNode } from './CoreNode.js';\nimport { CoreTextureManager } from './CoreTextureManager.js';\nimport { TrFontManager } from './text-rendering/TrFontManager.js';\nimport { CoreShaderManager } from './CoreShaderManager.js';\nimport { TextRenderer, } from './text-rendering/renderers/TextRenderer.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { ContextSpy } from './lib/ContextSpy.js';\nimport { TextureMemoryManager, } from './TextureMemoryManager.js';\nimport { CoreRenderer } from './renderers/CoreRenderer.js';\nimport { CoreTextNode } from './CoreTextNode.js';\nimport { santizeCustomDataMap } from '../main-api/utils.js';\nconst bufferMemory = 2e6;\nconst autoStart = true;\nexport class Stage {\n    options;\n    /// Module Instances\n    animationManager;\n    txManager;\n    txMemManager;\n    fontManager;\n    textRenderers;\n    shManager;\n    renderer;\n    root;\n    boundsMargin;\n    defShaderCtr;\n    /**\n     * Renderer Event Bus for the Stage to emit events onto\n     *\n     * @remarks\n     * In reality this is just the RendererMain instance, which is an EventEmitter.\n     * this allows us to directly emit events from the Stage to RendererMain\n     * without having to set up forwarding handlers.\n     */\n    eventBus;\n    /// State\n    deltaTime = 0;\n    lastFrameTime = 0;\n    currentFrameTime = 0;\n    fpsNumFrames = 0;\n    fpsElapsedTime = 0;\n    renderRequested = false;\n    frameEventQueue = [];\n    fontResolveMap = {};\n    /// Debug data\n    contextSpy = null;\n    /**\n     * Stage constructor\n     */\n    constructor(options) {\n        this.options = options;\n        const { canvas, clearColor, appWidth, appHeight, boundsMargin, enableContextSpy, numImageWorkers, textureMemory, renderEngine, fontEngines, } = options;\n        this.eventBus = options.eventBus;\n        this.txManager = new CoreTextureManager(numImageWorkers);\n        this.txMemManager = new TextureMemoryManager(this, textureMemory);\n        this.shManager = new CoreShaderManager();\n        this.animationManager = new AnimationManager();\n        this.contextSpy = enableContextSpy ? new ContextSpy() : null;\n        let bm = [0, 0, 0, 0];\n        if (boundsMargin) {\n            bm = Array.isArray(boundsMargin)\n                ? boundsMargin\n                : [boundsMargin, boundsMargin, boundsMargin, boundsMargin];\n        }\n        this.boundsMargin = bm;\n        const rendererOptions = {\n            stage: this,\n            canvas,\n            pixelRatio: options.devicePhysicalPixelRatio * options.deviceLogicalPixelRatio,\n            clearColor: clearColor ?? 0xff000000,\n            bufferMemory,\n            txManager: this.txManager,\n            txMemManager: this.txMemManager,\n            shManager: this.shManager,\n            contextSpy: this.contextSpy,\n        };\n        this.renderer = new renderEngine(rendererOptions);\n        const renderMode = this.renderer.mode || 'webgl';\n        this.defShaderCtr = this.renderer.getDefShaderCtr();\n        setPremultiplyMode(renderMode);\n        // Must do this after renderer is created\n        this.txManager.renderer = this.renderer;\n        // Create text renderers\n        this.textRenderers = {};\n        fontEngines.forEach((fontEngineConstructor) => {\n            const fontEngineInstance = new fontEngineConstructor(this);\n            const className = fontEngineInstance.type;\n            if (className === 'sdf' && renderMode === 'canvas') {\n                console.warn('SdfTextRenderer is not compatible with Canvas renderer. Skipping...');\n                return;\n            }\n            if (fontEngineInstance instanceof TextRenderer) {\n                if (className === 'canvas') {\n                    this.textRenderers['canvas'] =\n                        fontEngineInstance;\n                }\n                else if (className === 'sdf') {\n                    this.textRenderers['sdf'] = fontEngineInstance;\n                }\n            }\n        });\n        if (Object.keys(this.textRenderers).length === 0) {\n            console.warn('No text renderers available. Your text will not render.');\n        }\n        this.fontManager = new TrFontManager(this.textRenderers);\n        // create root node\n        const rootNode = new CoreNode(this, {\n            x: 0,\n            y: 0,\n            width: appWidth,\n            height: appHeight,\n            alpha: 1,\n            autosize: false,\n            clipping: false,\n            color: 0x00000000,\n            colorTop: 0x00000000,\n            colorBottom: 0x00000000,\n            colorLeft: 0x00000000,\n            colorRight: 0x00000000,\n            colorTl: 0x00000000,\n            colorTr: 0x00000000,\n            colorBl: 0x00000000,\n            colorBr: 0x00000000,\n            zIndex: 0,\n            zIndexLocked: 0,\n            scaleX: 1,\n            scaleY: 1,\n            mountX: 0,\n            mountY: 0,\n            mount: 0,\n            pivot: 0.5,\n            pivotX: 0.5,\n            pivotY: 0.5,\n            rotation: 0,\n            parent: null,\n            texture: null,\n            textureOptions: {},\n            shader: this.defShaderCtr,\n            rtt: false,\n            src: null,\n            scale: 1,\n            preventCleanup: false,\n        });\n        this.root = rootNode;\n        // execute platform start loop\n        if (autoStart) {\n            startLoop(this);\n        }\n    }\n    updateFrameTime() {\n        const newFrameTime = getTimeStamp();\n        this.lastFrameTime = this.currentFrameTime;\n        this.currentFrameTime = newFrameTime;\n        this.deltaTime = !this.lastFrameTime\n            ? 100 / 6\n            : newFrameTime - this.lastFrameTime;\n        this.txManager.frameTime = newFrameTime;\n        this.txMemManager.frameTime = newFrameTime;\n        // This event is emitted at the beginning of the frame (before any updates\n        // or rendering), so no need to to use `stage.queueFrameEvent` here.\n        this.eventBus.emit('frameTick', {\n            time: this.currentFrameTime,\n            delta: this.deltaTime,\n        });\n    }\n    /**\n     * Update animations\n     */\n    updateAnimations() {\n        const { animationManager } = this;\n        if (!this.root) {\n            return;\n        }\n        // step animation\n        animationManager.update(this.deltaTime);\n    }\n    /**\n     * Check if the scene has updates\n     */\n    hasSceneUpdates() {\n        return !!this.root.updateType || this.renderRequested;\n    }\n    /**\n     * Start a new frame draw\n     */\n    drawFrame() {\n        const { renderer, renderRequested } = this;\n        assertTruthy(renderer);\n        // Update tree if needed\n        if (this.root.updateType !== 0) {\n            this.root.update(this.deltaTime, this.root.clippingRect);\n        }\n        // Reset render operations and clear the canvas\n        renderer.reset();\n        // Check if we need to cleanup textures\n        if (this.txMemManager.criticalCleanupRequested) {\n            this.txMemManager.cleanup();\n        }\n        // If we have RTT nodes draw them first\n        // So we can use them as textures in the main scene\n        if (renderer.rttNodes.length > 0) {\n            renderer.renderRTTNodes();\n        }\n        // Fill quads buffer\n        this.addQuads(this.root);\n        // Perform render pass\n        renderer?.render();\n        this.calculateFps();\n        // Reset renderRequested flag if it was set\n        if (renderRequested) {\n            this.renderRequested = false;\n        }\n    }\n    /**\n     * Queue an event to be emitted after the current/next frame is rendered\n     *\n     * @remarks\n     * When we are operating in the context of the render loop, we may want to\n     * emit events that are related to the current frame. However, we generally do\n     * NOT want to emit events directly in the middle of the render loop, since\n     * this could enable event handlers to modify the scene graph and cause\n     * unexpected behavior. Instead, we queue up events to be emitted and then\n     * flush the queue after the frame has been rendered.\n     *\n     * @param name\n     * @param data\n     */\n    queueFrameEvent(name, data) {\n        this.frameEventQueue.push([name, data]);\n    }\n    /**\n     * Emit all queued frame events\n     *\n     * @remarks\n     * This method should be called after the frame has been rendered to emit\n     * all events that were queued during the frame.\n     *\n     * See {@link queueFrameEvent} for more information.\n     */\n    flushFrameEvents() {\n        for (const [name, data] of this.frameEventQueue) {\n            this.eventBus.emit(name, data);\n        }\n        this.frameEventQueue = [];\n    }\n    calculateFps() {\n        // If there's an FPS update interval, emit the FPS update event\n        // when the specified interval has elapsed.\n        const { fpsUpdateInterval } = this.options;\n        if (fpsUpdateInterval) {\n            this.fpsNumFrames++;\n            this.fpsElapsedTime += this.deltaTime;\n            if (this.fpsElapsedTime >= fpsUpdateInterval) {\n                const fps = Math.round((this.fpsNumFrames * 1000) / this.fpsElapsedTime);\n                this.fpsNumFrames = 0;\n                this.fpsElapsedTime = 0;\n                this.queueFrameEvent('fpsUpdate', {\n                    fps,\n                    contextSpyData: this.contextSpy?.getData() ?? null,\n                });\n                this.contextSpy?.reset();\n            }\n        }\n    }\n    addQuads(node) {\n        assertTruthy(this.renderer);\n        if (node.isRenderable === true) {\n            node.renderQuads(this.renderer);\n        }\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            if (child === undefined) {\n                continue;\n            }\n            if (child.worldAlpha === 0) {\n                continue;\n            }\n            this.addQuads(child);\n        }\n    }\n    /**\n     * Request a render pass without forcing an update\n     */\n    requestRender() {\n        this.renderRequested = true;\n    }\n    /**\n     * Given a font name, and possible renderer override, return the best compatible text renderer.\n     *\n     * @remarks\n     * Will try to return a canvas renderer if no other suitable renderer can be resolved.\n     *\n     * @param fontFamily\n     * @param textRendererOverride\n     * @returns\n     */\n    resolveTextRenderer(trProps, textRendererOverride = null) {\n        const fontCacheString = `${trProps.fontFamily}${trProps.fontStyle}${trProps.fontWeight}${trProps.fontStretch}${textRendererOverride ? textRendererOverride : ''}`;\n        // check our resolve cache first\n        if (this.fontResolveMap[fontCacheString] !== undefined) {\n            return this.fontResolveMap[fontCacheString];\n        }\n        // Resolve the text renderer\n        let rendererId = textRendererOverride;\n        let overrideFallback = false;\n        // Check if the override is valid (if one is provided)\n        if (rendererId) {\n            const possibleRenderer = this.textRenderers[rendererId];\n            if (!possibleRenderer) {\n                console.warn(`Text renderer override '${rendererId}' not found.`);\n                rendererId = null;\n                overrideFallback = true;\n            }\n            else if (!possibleRenderer.canRenderFont(trProps)) {\n                console.warn(`Cannot use override text renderer '${rendererId}' for font`, trProps);\n                rendererId = null;\n                overrideFallback = true;\n            }\n        }\n        if (!rendererId) {\n            // Iterate through the text renderers and find the first one that can render the font\n            for (const [trId, tr] of Object.entries(this.textRenderers)) {\n                if (tr.canRenderFont(trProps)) {\n                    rendererId = trId;\n                    break;\n                }\n            }\n            if (!rendererId && this.textRenderers.canvas !== undefined) {\n                // If no renderer can be found, use the canvas renderer\n                rendererId = 'canvas';\n            }\n        }\n        if (overrideFallback) {\n            console.warn(`Falling back to text renderer ${String(rendererId)}`);\n        }\n        if (!rendererId) {\n            // silently fail if no renderer can be found, the error is already created\n            // at the constructor level\n            return null;\n        }\n        // By now we are guaranteed to have a valid rendererId (at least Canvas);\n        const resolvedTextRenderer = this.textRenderers[rendererId];\n        assertTruthy(resolvedTextRenderer, 'resolvedTextRenderer undefined');\n        // cache the resolved renderer for future use with these trProps\n        this.fontResolveMap[fontCacheString] = resolvedTextRenderer;\n        // Need to explicitly cast to TextRenderer because TS doesn't like\n        // the covariant state argument in the setter method map\n        return resolvedTextRenderer;\n    }\n    /**\n     * Create a shader controller instance\n     *\n     * @param type\n     * @param props\n     * @returns\n     */\n    createShaderCtr(type, props) {\n        return this.shManager.loadShader(type, props);\n    }\n    createNode(props) {\n        const resolvedProps = this.resolveNodeDefaults(props);\n        return new CoreNode(this, resolvedProps);\n    }\n    createTextNode(props) {\n        const fontSize = props.fontSize ?? 16;\n        const resolvedProps = {\n            ...this.resolveNodeDefaults(props),\n            text: props.text ?? '',\n            textRendererOverride: props.textRendererOverride ?? null,\n            fontSize,\n            fontFamily: props.fontFamily ?? 'sans-serif',\n            fontStyle: props.fontStyle ?? 'normal',\n            fontWeight: props.fontWeight ?? 'normal',\n            fontStretch: props.fontStretch ?? 'normal',\n            textAlign: props.textAlign ?? 'left',\n            contain: props.contain ?? 'none',\n            scrollable: props.scrollable ?? false,\n            scrollY: props.scrollY ?? 0,\n            offsetY: props.offsetY ?? 0,\n            letterSpacing: props.letterSpacing ?? 0,\n            lineHeight: props.lineHeight,\n            maxLines: props.maxLines ?? 0,\n            textBaseline: props.textBaseline ?? 'alphabetic',\n            verticalAlign: props.verticalAlign ?? 'middle',\n            overflowSuffix: props.overflowSuffix ?? '...',\n            debug: props.debug ?? {},\n            shaderProps: null,\n        };\n        const resolvedTextRenderer = this.resolveTextRenderer(resolvedProps, props.textRendererOverride);\n        if (!resolvedTextRenderer) {\n            throw new Error(`No compatible text renderer found for ${resolvedProps.fontFamily}`);\n        }\n        return new CoreTextNode(this, resolvedProps, resolvedTextRenderer);\n    }\n    /**\n     * Resolves the default property values for a Node\n     *\n     * @remarks\n     * This method is used internally by the RendererMain to resolve the default\n     * property values for a Node. It is exposed publicly so that it can be used\n     * by Core Driver implementations.\n     *\n     * @param props\n     * @returns\n     */\n    resolveNodeDefaults(props) {\n        const color = props.color ?? 0xffffffff;\n        const colorTl = props.colorTl ?? props.colorTop ?? props.colorLeft ?? color;\n        const colorTr = props.colorTr ?? props.colorTop ?? props.colorRight ?? color;\n        const colorBl = props.colorBl ?? props.colorBottom ?? props.colorLeft ?? color;\n        const colorBr = props.colorBr ?? props.colorBottom ?? props.colorRight ?? color;\n        const data = santizeCustomDataMap(props.data ?? {});\n        return {\n            x: props.x ?? 0,\n            y: props.y ?? 0,\n            width: props.width ?? 0,\n            height: props.height ?? 0,\n            alpha: props.alpha ?? 1,\n            autosize: props.autosize ?? false,\n            clipping: props.clipping ?? false,\n            color,\n            colorTop: props.colorTop ?? color,\n            colorBottom: props.colorBottom ?? color,\n            colorLeft: props.colorLeft ?? color,\n            colorRight: props.colorRight ?? color,\n            colorBl,\n            colorBr,\n            colorTl,\n            colorTr,\n            zIndex: props.zIndex ?? 0,\n            zIndexLocked: props.zIndexLocked ?? 0,\n            parent: props.parent ?? null,\n            texture: props.texture ?? null,\n            textureOptions: props.textureOptions ?? {},\n            shader: props.shader ?? this.defShaderCtr,\n            // Since setting the `src` will trigger a texture load, we need to set it after\n            // we set the texture. Otherwise, problems happen.\n            src: props.src ?? null,\n            srcHeight: props.srcHeight,\n            srcWidth: props.srcWidth,\n            srcX: props.srcX,\n            srcY: props.srcY,\n            scale: props.scale ?? null,\n            scaleX: props.scaleX ?? props.scale ?? 1,\n            scaleY: props.scaleY ?? props.scale ?? 1,\n            mount: props.mount ?? 0,\n            mountX: props.mountX ?? props.mount ?? 0,\n            mountY: props.mountY ?? props.mount ?? 0,\n            pivot: props.pivot ?? 0.5,\n            pivotX: props.pivotX ?? props.pivot ?? 0.5,\n            pivotY: props.pivotY ?? props.pivot ?? 0.5,\n            rotation: props.rotation ?? 0,\n            rtt: props.rtt ?? false,\n            data: data,\n            preventCleanup: props.preventCleanup ?? false,\n            imageType: props.imageType,\n        };\n    }\n}\n//# sourceMappingURL=Stage.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { assertTruthy, isProductionEnvironment } from '../utils.js';\nimport { Stage } from '../core/Stage.js';\nimport { CoreNode } from '../core/CoreNode.js';\nimport {} from '../core/CoreTextNode.js';\n/**\n * The Renderer Main API\n *\n * @remarks\n * This is the primary class used to configure and operate the Renderer.\n *\n * It is used to create and destroy Nodes, as well as Texture and Shader\n * references.\n *\n * Example:\n * ```ts\n * import { RendererMain, MainCoreDriver } from '@lightningjs/renderer';\n *\n * // Initialize the Renderer\n * const renderer = new RendererMain(\n *   {\n *     appWidth: 1920,\n *     appHeight: 1080\n *   },\n *   'app',\n *   new MainCoreDriver(),\n * );\n * ```\n *\n * ## Events\n * - `fpsUpdate`\n *   - Emitted every `fpsUpdateInterval` milliseconds with the current FPS\n * - `frameTick`\n *   - Emitted every frame tick\n * - `idle`\n *   - Emitted when the renderer is idle (no changes to the scene\n *     graph/animations running)\n * - `criticalCleanup`\n *  - Emitted when the Texture Memory Manager Cleanup process is triggered\n *  - Payload: { memUsed: number, criticalThreshold: number }\n *    - `memUsed` - The amount of memory (in bytes) used by textures before the\n *       cleanup process\n *    - `criticalThreshold` - The critical threshold (in bytes)\n * - `criticalCleanupFailed`\n *   - Emitted when the Texture Memory Manager Cleanup process is unable to free\n *     up enough texture memory to reach below the critical threshold.\n *     This can happen when there is not enough non-renderable textures to\n *     free up.\n *   - Payload (object with keys):\n *     - `memUsed` - The amount of memory (in bytes) used by textures after\n *       the cleanup process\n *     - `criticalThreshold` - The critical threshold (in bytes)\n */\nexport class RendererMain extends EventEmitter {\n    root;\n    canvas;\n    settings;\n    stage;\n    inspector = null;\n    /**\n     * Constructs a new Renderer instance\n     *\n     * @param settings Renderer settings\n     * @param target Element ID or HTMLElement to insert the canvas into\n     * @param driver Core Driver to use\n     */\n    constructor(settings, target) {\n        super();\n        const resolvedTxSettings = {\n            criticalThreshold: settings.textureMemory?.criticalThreshold || 124e6,\n            targetThresholdLevel: settings.textureMemory?.targetThresholdLevel || 0.5,\n            cleanupInterval: settings.textureMemory?.cleanupInterval || 30000,\n            debugLogging: settings.textureMemory?.debugLogging || false,\n        };\n        const resolvedSettings = {\n            appWidth: settings.appWidth || 1920,\n            appHeight: settings.appHeight || 1080,\n            textureMemory: resolvedTxSettings,\n            boundsMargin: settings.boundsMargin || 0,\n            deviceLogicalPixelRatio: settings.deviceLogicalPixelRatio || 1,\n            devicePhysicalPixelRatio: settings.devicePhysicalPixelRatio || window.devicePixelRatio,\n            clearColor: settings.clearColor ?? 0x00000000,\n            fpsUpdateInterval: settings.fpsUpdateInterval || 0,\n            numImageWorkers: settings.numImageWorkers !== undefined ? settings.numImageWorkers : 2,\n            enableContextSpy: settings.enableContextSpy ?? false,\n            inspector: settings.inspector ?? false,\n            renderEngine: settings.renderEngine,\n            quadBufferSize: settings.quadBufferSize ?? 4 * 1024 * 1024,\n            fontEngines: settings.fontEngines,\n        };\n        this.settings = resolvedSettings;\n        const { appWidth, appHeight, deviceLogicalPixelRatio, devicePhysicalPixelRatio, inspector, } = resolvedSettings;\n        const deviceLogicalWidth = appWidth * deviceLogicalPixelRatio;\n        const deviceLogicalHeight = appHeight * deviceLogicalPixelRatio;\n        const canvas = document.createElement('canvas');\n        this.canvas = canvas;\n        canvas.width = deviceLogicalWidth * devicePhysicalPixelRatio;\n        canvas.height = deviceLogicalHeight * devicePhysicalPixelRatio;\n        canvas.style.width = `${deviceLogicalWidth}px`;\n        canvas.style.height = `${deviceLogicalHeight}px`;\n        // Initialize the stage\n        this.stage = new Stage({\n            appWidth: this.settings.appWidth,\n            appHeight: this.settings.appHeight,\n            boundsMargin: this.settings.boundsMargin,\n            clearColor: this.settings.clearColor,\n            canvas: this.canvas,\n            deviceLogicalPixelRatio: this.settings.deviceLogicalPixelRatio,\n            devicePhysicalPixelRatio: this.settings.devicePhysicalPixelRatio,\n            enableContextSpy: this.settings.enableContextSpy,\n            fpsUpdateInterval: this.settings.fpsUpdateInterval,\n            numImageWorkers: this.settings.numImageWorkers,\n            renderEngine: this.settings.renderEngine,\n            textureMemory: resolvedTxSettings,\n            eventBus: this,\n            quadBufferSize: this.settings.quadBufferSize,\n            fontEngines: this.settings.fontEngines,\n        });\n        // Extract the root node\n        this.root = this.stage.root;\n        // Get the target element and attach the canvas to it\n        let targetEl;\n        if (typeof target === 'string') {\n            targetEl = document.getElementById(target);\n        }\n        else {\n            targetEl = target;\n        }\n        if (!targetEl) {\n            throw new Error('Could not find target element');\n        }\n        targetEl.appendChild(canvas);\n        // Initialize inspector (if enabled)\n        if (inspector && !isProductionEnvironment()) {\n            this.inspector = new inspector(canvas, resolvedSettings);\n        }\n    }\n    /**\n     * Create a new scene graph node\n     *\n     * @remarks\n     * A node is the main graphical building block of the Renderer scene graph. It\n     * can be a container for other nodes, or it can be a leaf node that renders a\n     * solid color, gradient, image, or specific texture, using a specific shader.\n     *\n     * To create a text node, see {@link createTextNode}.\n     *\n     * See {@link CoreNode} for more details.\n     *\n     * @param props\n     * @returns\n     */\n    createNode(props) {\n        assertTruthy(this.stage, 'Stage is not initialized');\n        const node = this.stage.createNode(props);\n        if (this.inspector) {\n            return this.inspector.createNode(node);\n        }\n        // FIXME onDestroy event? node.once('beforeDestroy'\n        // FIXME onCreate event?\n        return node;\n    }\n    /**\n     * Create a new scene graph text node\n     *\n     * @remarks\n     * A text node is the second graphical building block of the Renderer scene\n     * graph. It renders text using a specific text renderer that is automatically\n     * chosen based on the font requested and what type of fonts are installed\n     * into an app.\n     *\n     * See {@link ITextNode} for more details.\n     *\n     * @param props\n     * @returns\n     */\n    createTextNode(props) {\n        const textNode = this.stage.createTextNode(props);\n        if (this.inspector) {\n            return this.inspector.createTextNode(textNode);\n        }\n        return textNode;\n    }\n    /**\n     * Destroy a node\n     *\n     * @remarks\n     * This method destroys a node\n     *\n     * @param node\n     * @returns\n     */\n    destroyNode(node) {\n        if (this.inspector) {\n            this.inspector.destroyNode(node.id);\n        }\n        return node.destroy();\n    }\n    /**\n     * Create a new texture reference\n     *\n     * @remarks\n     * This method creates a new reference to a texture. The texture is not\n     * loaded until it is used on a node.\n     *\n     * It can be assigned to a node's `texture` property, or it can be used\n     * when creating a SubTexture.\n     *\n     * @param textureType\n     * @param props\n     * @param options\n     * @returns\n     */\n    createTexture(textureType, props) {\n        return this.stage.txManager.loadTexture(textureType, props);\n    }\n    /**\n     * Create a new shader controller for a shader type\n     *\n     * @remarks\n     * This method creates a new Shader Controller for a specific shader type.\n     *\n     * If the shader has not been loaded yet, it will be loaded. Otherwise, the\n     * existing shader will be reused.\n     *\n     * It can be assigned to a Node's `shader` property.\n     *\n     * @param shaderType\n     * @param props\n     * @returns\n     */\n    createShader(shaderType, props) {\n        return this.stage.shManager.loadShader(shaderType, props);\n    }\n    /**\n     * Create a new Dynamic Shader controller\n     *\n     * @remarks\n     * A Dynamic Shader is a shader that can be composed of an array of mulitple\n     * effects. Each effect can be animated or changed after creation (provided\n     * the effect is given a name).\n     *\n     * Example:\n     * ```ts\n     * renderer.createNode({\n     *   shader: renderer.createDynamicShader([\n     *     renderer.createEffect('radius', {\n     *       radius: 0\n     *     }, 'effect1'),\n     *     renderer.createEffect('border', {\n     *       color: 0xff00ffff,\n     *       width: 10,\n     *     }, 'effect2'),\n     *   ]),\n     * });\n     * ```\n     *\n     * @param effects\n     * @returns\n     */\n    createDynamicShader(effects) {\n        return this.stage.shManager.loadDynamicShader({\n            effects: effects,\n        });\n    }\n    /**\n     * Create an effect to be used in a Dynamic Shader\n     *\n     * @remark\n     * The {name} parameter is optional but required if you want to animate the effect\n     * or change the effect's properties after creation.\n     *\n     * See {@link createDynamicShader} for an example.\n     *\n     * @param type\n     * @param props\n     * @param name\n     * @returns\n     */\n    createEffect(type, props, name) {\n        return {\n            name,\n            type,\n            props,\n        };\n    }\n    /**\n     * Get a Node by its ID\n     *\n     * @param id\n     * @returns\n     */\n    getNodeById(id) {\n        const root = this.stage?.root;\n        if (!root) {\n            return null;\n        }\n        const findNode = (node) => {\n            if (node.id === id) {\n                return node;\n            }\n            for (const child of node.children) {\n                const found = findNode(child);\n                if (found) {\n                    return found;\n                }\n            }\n            return null;\n        };\n        return findNode(root);\n    }\n    toggleFreeze() {\n        throw new Error('Not implemented');\n    }\n    advanceFrame() {\n        throw new Error('Not implemented');\n    }\n    getBufferInfo() {\n        return this.stage.renderer.getBufferInfo();\n    }\n    /**\n     * Re-render the current frame without advancing any running animations.\n     *\n     * @remarks\n     * Any state changes will be reflected in the re-rendered frame. Useful for\n     * debugging.\n     *\n     * May not do anything if the render loop is running on a separate worker.\n     */\n    rerender() {\n        throw new Error('Not implemented');\n    }\n}\n//# sourceMappingURL=Renderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    glw;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    renderToTexture;\n    parentHasRenderTexture;\n    framebufferDimensions;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(glw, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        super();\n        this.glw = glw;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.renderToTexture = renderToTexture;\n        this.parentHasRenderTexture = parentHasRenderTexture;\n        this.framebufferDimensions = framebufferDimensions;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? glw.getParameter(glw.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { glw, shader, shaderProps, options } = this;\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // Clipping\n        if (this.clippingRect.valid) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            glw.setScissorTest(true);\n            glw.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            glw.setScissorTest(false);\n        }\n        glw.drawElements(glw.TRIANGLES, 6 * this.numQuads, glw.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param glw\n */\nexport function getWebGlParameters(glw) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = glw.getParameter(glw[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param glw\n */\nexport function getWebGlExtensions(glw) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = glw.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n *\n * @param glw\n * @param size\n */\nexport function createIndexBuffer(glw, size) {\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = glw.createBuffer();\n    glw.elementArrayBufferData(buffer, indices, glw.STATIC_DRAW);\n}\n/**\n * Checks if an object is of type HTMLImageElement.\n * This is used because we cant check for HTMLImageElement directly when the\n * renderer is running in a seperate web worker context.\n *\n * @param obj\n * @returns\n */\nexport function isHTMLImageElement(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        obj.constructor &&\n        obj.constructor.name === 'HTMLImageElement');\n}\n//# sourceMappingURL=RendererUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isHTMLImageElement } from './internal/RendererUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    glw;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(glw, memManager, textureSource) {\n        super(memManager, textureSource);\n        this.glw = glw;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            // If the texture has been freed while loading, return early.\n            if (this._state === 'freed') {\n                return;\n            }\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            // If the texture has been freed while loading, return early.\n            if (this._state === 'freed') {\n                return;\n            }\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        const { glw } = this;\n        // Set to a 1x1 transparent texture\n        glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        this.setTextureMemUse(TRANSPARENT_TEXTURE_DATA.byteLength);\n        const textureData = await this.textureSource?.getTextureData();\n        // If the texture has been freed while loading, return early.\n        if (!this._nativeCtxTexture) {\n            assertTruthy(this._state === 'freed');\n            return { width: 0, height: 0 };\n        }\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        glw.activeTexture(0);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if ((typeof ImageBitmap !== 'undefined' &&\n            textureData.data instanceof ImageBitmap) ||\n            textureData.data instanceof ImageData ||\n            // not using typeof HTMLImageElement due to web worker\n            isHTMLImageElement(textureData.data)) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.pixelStorei(glw.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            glw.texImage2D(0, glw.RGBA, glw.RGBA, glw.UNSIGNED_BYTE, data);\n            this.setTextureMemUse(width * height * 4);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (glw.isWebGl2() || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                glw.generateMipmap();\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n            this.setTextureMemUse(TRANSPARENT_TEXTURE_DATA.byteLength);\n        }\n        else if ('mipmaps' in textureData.data && textureData.data.mipmaps) {\n            const { mipmaps, width = 0, height = 0, type, glInternalFormat, } = textureData.data;\n            const view = type === 'ktx'\n                ? new DataView(mipmaps[0] ?? new ArrayBuffer(0))\n                : mipmaps[0];\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.compressedTexImage2D(0, glInternalFormat, width, height, 0, view);\n            glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n            glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n            this.setTextureMemUse(view.byteLength);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this.textureSource.setState('freed');\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        const { glw } = this;\n        glw.deleteTexture(this._nativeCtxTexture);\n        this.setTextureMemUse(0);\n        this._nativeCtxTexture = null;\n    }\n    /**\n     * Create native context texture\n     *\n     * @remarks\n     * When this method returns the returned texture will be bound to the GL context state.\n     *\n     * @param width\n     * @param height\n     * @returns\n     */\n    createNativeCtxTexture() {\n        const { glw } = this;\n        const nativeTexture = glw.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        glw.activeTexture(0);\n        glw.bindTexture(nativeTexture);\n        // linear texture filtering\n        glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n        glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n        // texture wrapping method\n        glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n        glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { assertTruthy } from '../../utils.js';\nimport { isWebGl2 } from '../renderers/webgl/internal/WebGlUtils.js';\n/**\n * Optimized WebGL Context Wrapper\n *\n * @remarks\n * This class contains the subset of the WebGLRenderingContext & WebGL2RenderingContext\n * API that is used by the renderer. Select high volume WebGL methods include\n * caching optimizations to avoid making WebGL calls if the state is already set\n * to the desired value.\n *\n * While most methods contained are direct passthroughs to the WebGL context,\n * some methods combine multiple WebGL calls into one for convenience, modify\n * arguments to be more convenient, or are replaced by more specific methods.\n *\n * Not all methods are optimized. Only methods that are called frequently\n * and/or have a high cost are optimized.\n *\n * A subset of GLenum constants are also exposed as properties on this class\n * for convenience.\n */\nexport class WebGlContextWrapper {\n    gl;\n    //#region Cached WebGL State\n    activeTextureUnit = 0;\n    texture2dUnits;\n    texture2dParams = new WeakMap();\n    scissorEnabled;\n    scissorX;\n    scissorY;\n    scissorWidth;\n    scissorHeight;\n    blendEnabled;\n    blendSrcRgb;\n    blendDstRgb;\n    blendSrcAlpha;\n    blendDstAlpha;\n    boundArrayBuffer;\n    boundElementArrayBuffer;\n    curProgram;\n    programUniforms = new WeakMap();\n    //#endregion Cached WebGL State\n    //#region Canvas\n    canvas;\n    //#endregion Canvas\n    //#region WebGL Enums\n    MAX_RENDERBUFFER_SIZE;\n    MAX_TEXTURE_SIZE;\n    MAX_VIEWPORT_DIMS;\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n    MAX_TEXTURE_IMAGE_UNITS;\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n    MAX_VERTEX_ATTRIBS;\n    MAX_VARYING_VECTORS;\n    MAX_VERTEX_UNIFORM_VECTORS;\n    MAX_FRAGMENT_UNIFORM_VECTORS;\n    TEXTURE_MAG_FILTER;\n    TEXTURE_MIN_FILTER;\n    TEXTURE_WRAP_S;\n    TEXTURE_WRAP_T;\n    LINEAR;\n    CLAMP_TO_EDGE;\n    RGBA;\n    UNSIGNED_BYTE;\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n    UNPACK_FLIP_Y_WEBGL;\n    FLOAT;\n    TRIANGLES;\n    UNSIGNED_SHORT;\n    ONE;\n    ONE_MINUS_SRC_ALPHA;\n    VERTEX_SHADER;\n    FRAGMENT_SHADER;\n    STATIC_DRAW;\n    COMPILE_STATUS;\n    LINK_STATUS;\n    DYNAMIC_DRAW;\n    COLOR_ATTACHMENT0;\n    //#endregion WebGL Enums\n    constructor(gl) {\n        this.gl = gl;\n        // The following code extracts the current state of the WebGL context\n        // to our local JavaScript cached version of it. This is so we can\n        // avoid making WebGL calls if we don't need to.\n        // We could assume that the WebGL context is in a default state, but\n        // in the future we may want to support restoring a broken WebGL context\n        // and this will help with that.\n        this.activeTextureUnit =\n            gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0;\n        const maxTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        // save current texture units\n        this.texture2dUnits = new Array(maxTextureUnits)\n            .fill(undefined)\n            .map((_, i) => {\n            this.activeTexture(i);\n            return gl.getParameter(gl.TEXTURE_BINDING_2D);\n        });\n        // restore active texture unit\n        this.activeTexture(this.activeTextureUnit);\n        this.scissorEnabled = gl.isEnabled(gl.SCISSOR_TEST);\n        const scissorBox = gl.getParameter(gl.SCISSOR_BOX);\n        this.scissorX = scissorBox[0];\n        this.scissorY = scissorBox[1];\n        this.scissorWidth = scissorBox[2];\n        this.scissorHeight = scissorBox[3];\n        this.blendEnabled = gl.isEnabled(gl.BLEND);\n        this.blendSrcRgb = gl.getParameter(gl.BLEND_SRC_RGB);\n        this.blendDstRgb = gl.getParameter(gl.BLEND_DST_RGB);\n        this.blendSrcAlpha = gl.getParameter(gl.BLEND_SRC_ALPHA);\n        this.blendDstAlpha = gl.getParameter(gl.BLEND_DST_ALPHA);\n        this.boundArrayBuffer = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n        this.boundElementArrayBuffer = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this.curProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n        this.canvas = gl.canvas;\n        // Extract GLenums\n        this.MAX_RENDERBUFFER_SIZE = gl.MAX_RENDERBUFFER_SIZE;\n        this.MAX_TEXTURE_SIZE = gl.MAX_TEXTURE_SIZE;\n        this.MAX_VIEWPORT_DIMS = gl.MAX_VIEWPORT_DIMS;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.MAX_TEXTURE_IMAGE_UNITS = gl.MAX_TEXTURE_IMAGE_UNITS;\n        this.MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n        this.MAX_VERTEX_ATTRIBS = gl.MAX_VERTEX_ATTRIBS;\n        this.MAX_VARYING_VECTORS = gl.MAX_VARYING_VECTORS;\n        this.MAX_VERTEX_UNIFORM_VECTORS = gl.MAX_VERTEX_UNIFORM_VECTORS;\n        this.MAX_FRAGMENT_UNIFORM_VECTORS = gl.MAX_FRAGMENT_UNIFORM_VECTORS;\n        this.TEXTURE_MAG_FILTER = gl.TEXTURE_MAG_FILTER;\n        this.TEXTURE_MIN_FILTER = gl.TEXTURE_MIN_FILTER;\n        this.TEXTURE_WRAP_S = gl.TEXTURE_WRAP_S;\n        this.TEXTURE_WRAP_T = gl.TEXTURE_WRAP_T;\n        this.LINEAR = gl.LINEAR;\n        this.CLAMP_TO_EDGE = gl.CLAMP_TO_EDGE;\n        this.RGBA = gl.RGBA;\n        this.UNSIGNED_BYTE = gl.UNSIGNED_BYTE;\n        this.UNPACK_PREMULTIPLY_ALPHA_WEBGL = gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n        this.UNPACK_FLIP_Y_WEBGL = gl.UNPACK_FLIP_Y_WEBGL;\n        this.FLOAT = gl.FLOAT;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.ONE = gl.ONE;\n        this.ONE_MINUS_SRC_ALPHA = gl.ONE_MINUS_SRC_ALPHA;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.VERTEX_SHADER = gl.VERTEX_SHADER;\n        this.FRAGMENT_SHADER = gl.FRAGMENT_SHADER;\n        this.STATIC_DRAW = gl.STATIC_DRAW;\n        this.COMPILE_STATUS = gl.COMPILE_STATUS;\n        this.LINK_STATUS = gl.LINK_STATUS;\n        this.DYNAMIC_DRAW = gl.DYNAMIC_DRAW;\n        this.COLOR_ATTACHMENT0 = gl.COLOR_ATTACHMENT0;\n    }\n    /**\n     * Returns true if the WebGL context is WebGL2\n     *\n     * @returns\n     */\n    isWebGl2() {\n        return isWebGl2(this.gl);\n    }\n    /**\n     * ```\n     * gl.activeTexture(textureUnit + gl.TEXTURE0);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: `textureUnit` is based from 0, not `gl.TEXTURE0`.\n     *\n     * @param textureUnit\n     */\n    activeTexture(textureUnit) {\n        const { gl } = this;\n        if (this.activeTextureUnit !== textureUnit) {\n            gl.activeTexture(textureUnit + gl.TEXTURE0);\n            this.activeTextureUnit = textureUnit;\n        }\n    }\n    /**\n     * ```\n     * gl.bindTexture(gl.TEXTURE_2D, texture);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param texture\n     */\n    bindTexture(texture) {\n        const { gl, activeTextureUnit, texture2dUnits } = this;\n        if (texture2dUnits[activeTextureUnit] === texture) {\n            return;\n        }\n        texture2dUnits[activeTextureUnit] = texture;\n        gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    }\n    _getActiveTexture() {\n        const { activeTextureUnit, texture2dUnits } = this;\n        return texture2dUnits[activeTextureUnit];\n    }\n    /**\n     * ```\n     * gl.texParameteri(gl.TEXTURE_2D, pname, param);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param pname\n     * @param param\n     * @returns\n     */\n    texParameteri(pname, param) {\n        const { gl, texture2dParams } = this;\n        const activeTexture = this._getActiveTexture();\n        if (!activeTexture) {\n            throw new Error('No active texture');\n        }\n        let textureParams = texture2dParams.get(activeTexture);\n        if (!textureParams) {\n            textureParams = {};\n            texture2dParams.set(activeTexture, textureParams);\n        }\n        if (textureParams[pname] === param) {\n            return;\n        }\n        textureParams[pname] = param;\n        gl.texParameteri(gl.TEXTURE_2D, pname, param);\n    }\n    texImage2D(level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels) {\n        const { gl } = this;\n        if (format) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource);\n        }\n    }\n    /**\n     * ```\n     * gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, data);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    compressedTexImage2D(level, internalformat, width, height, border, data) {\n        const { gl } = this;\n        gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalformat, width, height, border, data);\n    }\n    /**\n     * ```\n     * gl.pixelStorei(pname, param);\n     * ```\n     *\n     * @param pname\n     * @param param\n     */\n    pixelStorei(pname, param) {\n        const { gl } = this;\n        gl.pixelStorei(pname, param);\n    }\n    /**\n     * ```\n     * gl.generateMipmap(gl.TEXTURE_2D);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    generateMipmap() {\n        const { gl } = this;\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    /**\n     * ```\n     * gl.createTexture();\n     * ```\n     *\n     * @returns\n     */\n    createTexture() {\n        const { gl } = this;\n        return gl.createTexture();\n    }\n    /**\n     * ```\n     * gl.deleteTexture(texture);\n     * ```\n     *\n     * @param texture\n     */\n    deleteTexture(texture) {\n        const { gl } = this;\n        if (texture) {\n            this.texture2dParams.delete(texture);\n        }\n        gl.deleteTexture(texture);\n    }\n    /**\n     * ```\n     * gl.viewport(x, y, width, height);\n     * ```\n     */\n    viewport(x, y, width, height) {\n        const { gl } = this;\n        gl.viewport(x, y, width, height);\n    }\n    /**\n     * ```\n     * gl.clearColor(red, green, blue, alpha);\n     * ```\n     *\n     * @param red\n     * @param green\n     * @param blue\n     * @param alpha\n     */\n    clearColor(red, green, blue, alpha) {\n        const { gl } = this;\n        gl.clearColor(red, green, blue, alpha);\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.SCISSOR_TEST);\n     * ```\n     * @param enable\n     */\n    setScissorTest(enable) {\n        const { gl, scissorEnabled } = this;\n        if (enable === scissorEnabled) {\n            return;\n        }\n        if (enable) {\n            gl.enable(gl.SCISSOR_TEST);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        this.scissorEnabled = enable;\n    }\n    /**\n     * ```\n     * gl.scissor(x, y, width, height);\n     * ```\n     *\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n    scissor(x, y, width, height) {\n        const { gl, scissorX, scissorY, scissorWidth, scissorHeight } = this;\n        if (x !== scissorX ||\n            y !== scissorY ||\n            width !== scissorWidth ||\n            height !== scissorHeight) {\n            gl.scissor(x, y, width, height);\n            this.scissorX = x;\n            this.scissorY = y;\n            this.scissorWidth = width;\n            this.scissorHeight = height;\n        }\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.BLEND);\n     * ```\n     *\n     * @param blend\n     * @returns\n     */\n    setBlend(blend) {\n        const { gl, blendEnabled } = this;\n        if (blend === blendEnabled) {\n            return;\n        }\n        if (blend) {\n            gl.enable(gl.BLEND);\n        }\n        else {\n            gl.disable(gl.BLEND);\n        }\n        this.blendEnabled = blend;\n    }\n    /**\n     * ```\n     * gl.blendFunc(src, dst);\n     * ```\n     *\n     * @param src\n     * @param dst\n     */\n    blendFunc(src, dst) {\n        const { gl, blendSrcRgb, blendDstRgb, blendSrcAlpha, blendDstAlpha } = this;\n        if (src !== blendSrcRgb ||\n            dst !== blendDstRgb ||\n            src !== blendSrcAlpha ||\n            dst !== blendDstAlpha) {\n            gl.blendFunc(src, dst);\n            this.blendSrcRgb = src;\n            this.blendDstRgb = dst;\n            this.blendSrcAlpha = src;\n            this.blendDstAlpha = dst;\n        }\n    }\n    /**\n     * ```\n     * gl.createBuffer();\n     * ```\n     *\n     * @returns\n     */\n    createBuffer() {\n        const { gl } = this;\n        return gl.createBuffer();\n    }\n    /**\n     * ```\n     * gl.createFramebuffer();\n     * ```\n     * @returns\n     */\n    createFramebuffer() {\n        const { gl } = this;\n        return gl.createFramebuffer();\n    }\n    /**\n     * ```\n     * gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n     * ```\n     *\n     * @param framebuffer\n     */\n    bindFramebuffer(framebuffer) {\n        const { gl } = this;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    /**\n     * ```\n     * gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.FRAMEBUFFER` and textarget is always `gl.TEXTURE_2D`\n     */\n    framebufferTexture2D(attachment, texture, level) {\n        const { gl } = this;\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, level);\n    }\n    /**\n     * ```\n     * gl.clear(gl.COLOR_BUFFER_BIT);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Clear mask is always `gl.COLOR_BUFFER_BIT`\n     */\n    clear() {\n        const { gl } = this;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    arrayBufferData(buffer, data, usage) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n     * ```\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    elementArrayBufferData(buffer, data, usage) {\n        const { gl, boundElementArrayBuffer } = this;\n        if (boundElementArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n            this.boundElementArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.vertexAttribPointer` are combined into one function.\n     *\n     * @param buffer\n     * @param index\n     * @param size\n     * @param type\n     * @param normalized\n     * @param stride\n     * @param offset\n     */\n    vertexAttribPointer(buffer, index, size, type, normalized, stride, offset) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n    /**\n     * ```\n     * gl.useProgram(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    useProgram(program) {\n        const { gl, curProgram } = this;\n        if (curProgram === program) {\n            return;\n        }\n        gl.useProgram(program);\n        this.curProgram = program;\n    }\n    setUniform(type, location, ...args) {\n        const { gl, programUniforms } = this;\n        let uniforms = programUniforms.get(this.curProgram);\n        if (!uniforms) {\n            uniforms = new Map();\n            programUniforms.set(this.curProgram, uniforms);\n        }\n        const uniformArgs = uniforms.get(location);\n        if (!uniformArgs || !compareArrays(uniformArgs, args)) {\n            uniforms.set(location, args);\n            gl[type](location, ...args);\n        }\n    }\n    /**\n     * ```\n     * gl.getParameter(pname);\n     * ```\n     *\n     * @param pname\n     * @returns\n     */\n    getParameter(pname) {\n        const { gl } = this;\n        return gl.getParameter(pname);\n    }\n    /**\n     * ```\n     * gl.drawElements(mode, count, type, offset);\n     * ```\n     *\n     * @param mode\n     * @param count\n     * @param type\n     * @param offset\n     */\n    drawElements(mode, count, type, offset) {\n        const { gl } = this;\n        gl.drawElements(mode, count, type, offset);\n    }\n    /**\n     * ```\n     * gl.drawArrays(mode, first, count);\n     * ```\n     *\n     * @param name\n     * @returns\n     */\n    getExtension(name) {\n        const { gl } = this;\n        return gl.getExtension(name);\n    }\n    /**\n     * ```\n     * gl.createVertexArray();\n     * ```\n     *\n     * @returns\n     */\n    createVertexArray() {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        return gl.createVertexArray();\n    }\n    /**\n     * ```\n     * gl.bindVertexArray(vertexArray);\n     * ```\n     *\n     * @param vertexArray\n     */\n    bindVertexArray(vertexArray) {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        gl.bindVertexArray(vertexArray);\n    }\n    /**\n     * ```\n     * gl.getAttribLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getAttribLocation(program, name) {\n        const { gl } = this;\n        return gl.getAttribLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.getUniformLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getUniformLocation(program, name) {\n        const { gl } = this;\n        return gl.getUniformLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.enableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    enableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.enableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.disableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    disableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.disableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.createShader(type);\n     * ```\n     *\n     * @param type\n     * @returns\n     */\n    createShader(type) {\n        const { gl } = this;\n        return gl.createShader(type);\n    }\n    /**\n     * ```\n     * gl.compileShader(shader);\n     * ```\n     *\n     * @param shader\n     * @returns\n     */\n    compileShader(shader) {\n        const { gl } = this;\n        gl.compileShader(shader);\n    }\n    /**\n     * ```\n     * gl.attachShader(program, shader);\n     * ```\n     *\n     * @param program\n     * @param shader\n     */\n    attachShader(program, shader) {\n        const { gl } = this;\n        gl.attachShader(program, shader);\n    }\n    /**\n     * ```\n     * gl.linkProgram(program);\n     * ```\n     *\n     * @param program\n     */\n    linkProgram(program) {\n        const { gl } = this;\n        gl.linkProgram(program);\n    }\n    /**\n     * ```\n     * gl.deleteProgram(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteProgram(shader) {\n        const { gl } = this;\n        gl.deleteProgram(shader);\n    }\n    /**\n     * ```\n     * gl.getShaderParameter(shader, pname);\n     * ```\n     *\n     * @param shader\n     * @param pname\n     */\n    getShaderParameter(shader, pname) {\n        const { gl } = this;\n        return gl.getShaderParameter(shader, pname);\n    }\n    /**\n     * ```\n     * gl.getShaderInfoLog(shader);\n     * ```\n     *\n     * @param shader\n     */\n    getShaderInfoLog(shader) {\n        const { gl } = this;\n        return gl.getShaderInfoLog(shader);\n    }\n    /**\n     * ```\n     * gl.createProgram();\n     * ```\n     *\n     * @returns\n     */\n    createProgram() {\n        const { gl } = this;\n        return gl.createProgram();\n    }\n    /**\n     * ```\n     * gl.getProgramParameter(program, pname);\n     * ```\n     *\n     * @param program\n     * @param pname\n     * @returns\n     */\n    getProgramParameter(program, pname) {\n        const { gl } = this;\n        return gl.getProgramParameter(program, pname);\n    }\n    /**\n     * ```\n     * gl.getProgramInfoLog(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    getProgramInfoLog(program) {\n        const { gl } = this;\n        return gl.getProgramInfoLog(program);\n    }\n    /**\n     * ```\n     * gl.shaderSource(shader, source);\n     * ```\n     *\n     * @param shader\n     * @param source\n     */\n    shaderSource(shader, source) {\n        const { gl } = this;\n        gl.shaderSource(shader, source);\n    }\n    /**\n     * ```\n     * gl.deleteShader(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteShader(shader) {\n        const { gl } = this;\n        gl.deleteShader(shader);\n    }\n}\n/**\n * Compare two arrays for equality.\n *\n * @remarks\n * This function will not try to compare nested arrays or Float32Arrays and\n * instead will always return false when they are encountered.\n *\n * @param a\n * @param b\n * @returns\n */\nexport function compareArrays(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    return a.every((v, i) => {\n        // Don't bother to compare nested arrays or Float32Arrays\n        if (Array.isArray(v) || v instanceof Float32Array) {\n            return false;\n        }\n        else {\n            return v === b[i];\n        }\n    });\n}\n//# sourceMappingURL=WebGlContextWrapper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2024 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxRenderTexture extends WebGlCoreCtxTexture {\n    framebuffer;\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n        // Create Framebuffer object\n        const framebuffer = glw.createFramebuffer();\n        assertTruthy(framebuffer, 'Unable to create framebuffer');\n        this.framebuffer = framebuffer;\n    }\n    async onLoadRequest() {\n        const { glw } = this;\n        const nativeTexture = (this._nativeCtxTexture =\n            this.createNativeCtxTexture());\n        const { width, height } = this.textureSource;\n        // Set the dimensions of the render texture\n        glw.texImage2D(0, glw.RGBA, width, height, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        // Update the texture memory manager\n        this.setTextureMemUse(width * height * 4);\n        // Bind the framebuffer\n        glw.bindFramebuffer(this.framebuffer);\n        // Attach the texture to the framebuffer\n        glw.framebufferTexture2D(glw.COLOR_ATTACHMENT0, nativeTexture, 0);\n        // Unbind the framebuffer\n        glw.bindFramebuffer(null);\n        return {\n            width,\n            height,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxRenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn } from '../../../utils.js';\nimport { CoreRenderer, } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { WebGlContextWrapper } from '../../lib/WebGlContextWrapper.js';\nimport { RenderTexture } from '../../textures/RenderTexture.js';\nimport { WebGlCoreCtxRenderTexture } from './WebGlCoreCtxRenderTexture.js';\nimport { ImageTexture } from '../../textures/ImageTexture.js';\nconst WORDS_PER_QUAD = 24;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    glw;\n    system;\n    //// Persistent data\n    quadBuffer;\n    fQuadBuffer;\n    uiQuadBuffer;\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    rttNodes = [];\n    activeRttNode = null;\n    //// Default Shader\n    defShaderCtrl;\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    quadBufferUsage = 0;\n    /**\n     * Whether the renderer is currently rendering to a texture.\n     */\n    renderToTextureActive = false;\n    constructor(options) {\n        super(options);\n        this.quadBuffer = new ArrayBuffer(this.stage.options.quadBufferSize);\n        this.fQuadBuffer = new Float32Array(this.quadBuffer);\n        this.uiQuadBuffer = new Uint32Array(this.quadBuffer);\n        this.mode = 'webgl';\n        const { canvas, clearColor, bufferMemory } = options;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        // Mark the default texture as ALWAYS renderable\n        // This prevents it from ever being cleaned up.\n        // Fixes https://github.com/lightning-js/renderer/issues/262\n        this.defaultTexture.setRenderableOwner(this, true);\n        // When the default texture is loaded, request a render in case the\n        // RAF is paused. Fixes: https://github.com/lightning-js/renderer/issues/123\n        this.defaultTexture.once('loaded', () => {\n            this.stage.requestRender();\n        });\n        const gl = createWebGLContext(canvas, options.contextSpy);\n        const glw = (this.glw = new WebGlContextWrapper(gl));\n        const color = getNormalizedRgbaComponents(clearColor);\n        glw.viewport(0, 0, canvas.width, canvas.height);\n        glw.clearColor(color[0], color[1], color[2], color[3]);\n        glw.setBlend(true);\n        glw.blendFunc(glw.ONE, glw.ONE_MINUS_SRC_ALPHA);\n        createIndexBuffer(glw, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(this.glw),\n            extensions: getWebGlExtensions(this.glw),\n        };\n        this.shManager.renderer = this;\n        this.defShaderCtrl = this.shManager.loadShader('DefaultShader');\n        this.defaultShader = this.defShaderCtrl.shader;\n        const quadBuffer = glw.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: glw.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        const { glw } = this;\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        glw.setScissorTest(false);\n        glw.clear();\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.glw, this.txMemManager, textureSource);\n        }\n        else if (textureSource instanceof RenderTexture) {\n            return new WebGlCoreCtxRenderTexture(this.glw, this.txMemManager, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.glw, this.txMemManager, textureSource);\n    }\n    /**\n     * This function adds a quad (a rectangle composed of two triangles) to the WebGL rendering pipeline.\n     *\n     * It takes a set of options that define the quad's properties, such as its dimensions, colors, texture, shader, and transformation matrix.\n     * The function first updates the shader properties with the current dimensions if necessary, then sets the default texture if none is provided.\n     * It then checks if a new render operation is needed, based on the current shader and clipping rectangle.\n     * If a new render operation is needed, it creates one and updates the current render operation.\n     * The function then adjusts the texture coordinates based on the texture options and adds the texture to the texture manager.\n     *\n     * Finally, it calculates the vertices for the quad, taking into account any transformations, and adds them to the quad buffer.\n     * The function updates the length and number of quads in the current render operation, and updates the current buffer index.\n     */\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, clippingRect, tx, ty, ta, tb, tc, td, renderCoords, rtt: renderToTexture, parentHasRenderTexture, framebufferDimensions, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions and or alpha that will be used to render the quad.\n         */\n        if (shaderProps !== null) {\n            if (hasOwn(shaderProps, '$dimensions')) {\n                const dimensions = shaderProps.$dimensions;\n                dimensions.width = width;\n                dimensions.height = height;\n            }\n            if (hasOwn(shaderProps, '$alpha')) {\n                shaderProps.$alpha = alpha;\n            }\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (!this.reuseRenderOp(params)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        let flipY = textureOptions?.flipY ?? false;\n        // always flip flipY for render textures\n        if (texture instanceof RenderTexture) {\n            flipY = !flipY;\n        }\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        const resizeMode = textureOptions?.resizeMode ?? false;\n        if (texture instanceof ImageTexture) {\n            if (resizeMode && texture.dimensions) {\n                const { width: tw, height: th } = texture.dimensions;\n                if (resizeMode.type === 'cover') {\n                    const scaleX = width / tw;\n                    const scaleY = height / th;\n                    const scale = Math.max(scaleX, scaleY);\n                    const precision = 1 / scale;\n                    // Determine based on width\n                    if (scale && scaleX && scaleX < scale) {\n                        const desiredSize = precision * width;\n                        texCoordX1 = (1 - desiredSize / tw) * (resizeMode.clipX ?? 0.5);\n                        texCoordX2 = texCoordX1 + desiredSize / tw;\n                    }\n                    // Determine based on height\n                    if (scale && scaleY && scaleY < scale) {\n                        const desiredSize = precision * height;\n                        texCoordY1 = (1 - desiredSize / th) * (resizeMode.clipY ?? 0.5);\n                        texCoordY2 = texCoordY1 + desiredSize / th;\n                    }\n                }\n            }\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const ctxTexture = texture.ctxTexture;\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        if (renderCoords) {\n            const { x1, y1, x2, y2, x3, y3, x4, y4 } = renderCoords;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = x1; // vertexX\n            fQuadBuffer[bufferIdx++] = y1; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = x2;\n            fQuadBuffer[bufferIdx++] = y2;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = x4;\n            fQuadBuffer[bufferIdx++] = y4;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = x3;\n            fQuadBuffer[bufferIdx++] = y3;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta;\n            fQuadBuffer[bufferIdx++] = ty + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = tx + width * ta;\n            const rightCornerY = ty + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        const curRenderOp = new WebGlCoreRenderOp(this.glw, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0, // Z-Index is only used for explictly added Render Ops\n        renderToTexture, parentHasRenderTexture, framebufferDimensions);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * Test if the current Render operation can be reused for the specified parameters.\n     * @param params\n     * @returns\n     */\n    reuseRenderOp(params) {\n        const { shader, shaderProps, parentHasRenderTexture, rtt, clippingRect } = params;\n        const targetShader = shader || this.defaultShader;\n        // Switching shader program will require a new render operation\n        if (this.curRenderOp?.shader !== targetShader) {\n            return false;\n        }\n        // Switching clipping rect will require a new render operation\n        if (!compareRect(this.curRenderOp.clippingRect, clippingRect)) {\n            return false;\n        }\n        // Force new render operation if rendering to texture\n        // @todo: This needs to be improved, render operations could also be reused\n        // for rendering to texture\n        if (parentHasRenderTexture || rtt) {\n            return false;\n        }\n        // Check if the shader can batch the shader properties\n        if (this.curRenderOp.shader !== this.defaultShader &&\n            (!shaderProps ||\n                !this.curRenderOp.shader.canBatchShaderProps(this.curRenderOp.shaderProps, shaderProps))) {\n            return false;\n        }\n        // Render operation can be reused\n        return true;\n    }\n    /**\n     * add RenderOp to the render pipeline\n     */\n    addRenderOp(renderable) {\n        this.renderOps.push(renderable);\n        this.curRenderOp = null;\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { glw, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        glw.arrayBufferData(buffer, arr, glw.STATIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('Quads per operation', renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n        this.quadBufferUsage = this.curBufferIdx * arr.BYTES_PER_ELEMENT;\n    }\n    renderToTexture(node) {\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            if (this.rttNodes[i] === node) {\n                return;\n            }\n        }\n        // @todo: Better bottom up rendering order\n        this.rttNodes.unshift(node);\n    }\n    renderRTTNodes() {\n        const { glw } = this;\n        const { txManager } = this.stage;\n        // Render all associated RTT nodes to their textures\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            const node = this.rttNodes[i];\n            // Skip nodes that don't have RTT updates\n            if (!node || !node.hasRTTupdates) {\n                continue;\n            }\n            // Set the active RTT node to the current node\n            // So we can prevent rendering children of nested RTT nodes\n            this.activeRttNode = node;\n            assertTruthy(node.texture, 'RTT node missing texture');\n            const ctxTexture = node.texture.ctxTexture;\n            assertTruthy(ctxTexture instanceof WebGlCoreCtxRenderTexture);\n            this.renderToTextureActive = true;\n            // Bind the the texture's framebuffer\n            glw.bindFramebuffer(ctxTexture.framebuffer);\n            glw.viewport(0, 0, ctxTexture.w, ctxTexture.h);\n            glw.clear();\n            // Render all associated quads to the texture\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (!child) {\n                    continue;\n                }\n                child.update(this.stage.deltaTime, {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                    valid: false,\n                });\n                this.stage.addQuads(child);\n                child.hasRTTupdates = false;\n            }\n            // Render all associated quads to the texture\n            this.render();\n            // Reset render operations\n            this.renderOps.length = 0;\n            node.hasRTTupdates = false;\n        }\n        // Bind the default framebuffer\n        glw.bindFramebuffer(null);\n        glw.viewport(0, 0, this.glw.canvas.width, this.glw.canvas.height);\n        this.renderToTextureActive = false;\n    }\n    removeRTTNode(node) {\n        const index = this.rttNodes.indexOf(node);\n        if (index === -1) {\n            return;\n        }\n        this.rttNodes.splice(index, 1);\n    }\n    getBufferInfo() {\n        const bufferInfo = {\n            totalAvailable: this.stage.options.quadBufferSize,\n            totalUsed: this.quadBufferUsage,\n        };\n        return bufferInfo;\n    }\n    getDefShaderCtr() {\n        return this.defShaderCtrl;\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderer.js.map","import { SdfTrFontFace, WebTrFontFace, RendererMain, } from '@lightningjs/renderer';\nexport let renderer;\nexport let createShader;\nexport const getRenderer = () => renderer;\nexport function startLightningRenderer(options, rootId = 'app') {\n    renderer = new RendererMain(options, rootId);\n    createShader = renderer.createShader.bind(renderer);\n    return renderer;\n}\nexport function loadFonts(fonts) {\n    const stage = renderer.stage;\n    for (const font of fonts) {\n        if ('type' in font) {\n            stage.fontManager.addFontFace(new SdfTrFontFace(font.type, {\n                ...font,\n                stage,\n            }));\n        }\n        else {\n            stage.fontManager.addFontFace(new WebTrFontFace(font));\n        }\n    }\n}\n//# sourceMappingURL=lightningInit.js.map","function isDevEnv() {\n    return !!(import.meta.env && import.meta.env.DEV);\n}\nexport const isDev = isDevEnv() || false;\nexport const Config = {\n    debug: false,\n    focusDebug: false,\n    animationsEnabled: true,\n    animationSettings: {\n        duration: 250,\n        easing: 'ease-in-out',\n    },\n    fontSettings: {\n        fontFamily: 'Ubuntu',\n        fontSize: 100,\n    },\n    setActiveElement: () => { },\n};\n//# sourceMappingURL=config.js.map","import { Config, isDev } from './config.js';\nimport { ElementNode } from './elementNode.js';\nfunction hasDebug(node) {\n    return isObject(node) && node.debug;\n}\nexport function log(msg, node, ...args) {\n    if (isDev) {\n        if (Config.debug || hasDebug(node) || hasDebug(args[0])) {\n            console.log(msg, node, ...args);\n        }\n    }\n}\nexport const isFunc = (obj) => obj instanceof Function;\nexport function isObject(item) {\n    return typeof item === 'object';\n}\nexport function isArray(item) {\n    return Array.isArray(item);\n}\nexport function isString(item) {\n    return typeof item === 'string';\n}\nexport function isNumber(item) {\n    return typeof item === 'number';\n}\nexport function isInteger(item) {\n    return Number.isInteger(item);\n}\nexport function isINode(node) {\n    return 'destroy' in node && typeof node.destroy === 'function';\n}\nexport function isElementNode(node) {\n    return node instanceof ElementNode;\n}\nexport function keyExists(obj, keys) {\n    for (const key of keys) {\n        if (key in obj) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function flattenStyles(obj, result = {}) {\n    if (isArray(obj)) {\n        obj.forEach((item) => {\n            flattenStyles(item, result);\n        });\n    }\n    else if (obj) {\n        // handle the case where the object is not an array\n        for (const key in obj) {\n            // be careful of 0 values\n            if (result[key] === undefined) {\n                result[key] = obj[key];\n            }\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=utils.js.map","import { isArray, isString } from './utils.js';\nexport default class States extends Array {\n    onChange;\n    constructor(callback, initialState = {}) {\n        if (isArray(initialState)) {\n            super(...initialState);\n        }\n        else if (isString(initialState)) {\n            super(initialState);\n        }\n        else {\n            super(...Object.entries(initialState)\n                .filter(([_key, value]) => value)\n                .map(([key]) => key));\n        }\n        this.onChange = callback;\n        return this;\n    }\n    has(state) {\n        return this.indexOf(state) >= 0;\n    }\n    is(state) {\n        return this.indexOf(state) >= 0;\n    }\n    add(state) {\n        if (this.has(state)) {\n            return;\n        }\n        this.push(state);\n        this.onChange();\n    }\n    toggle(state, force) {\n        if (force === true) {\n            this.add(state);\n        }\n        else if (force === false) {\n            this.remove(state);\n        }\n        else {\n            if (this.has(state)) {\n                this.remove(state);\n            }\n            else {\n                this.add(state);\n            }\n        }\n    }\n    merge(newStates) {\n        if (isArray(newStates)) {\n            this.length = 0; // Clear the current states\n            this.push(...newStates);\n        }\n        else if (isString(newStates)) {\n            this.length = 0; // Clear the current states\n            this.push(newStates);\n        }\n        else {\n            for (const state in newStates) {\n                this.toggle(state, newStates[state]);\n            }\n        }\n        return this;\n    }\n    remove(state) {\n        const stateIndexToRemove = this.indexOf(state);\n        if (stateIndexToRemove >= 0) {\n            this.splice(stateIndexToRemove, 1);\n            this.onChange();\n        }\n    }\n}\n//# sourceMappingURL=states.js.map","export const NodeType = {\n    Element: 'element',\n    TextNode: 'textNode',\n    Text: 'text',\n};\n//# sourceMappingURL=nodeTypes.js.map","import { NodeType } from './nodeTypes.js';\nexport default function (node) {\n    const children = [];\n    let hasOrder = false;\n    let growSize = 0;\n    for (let i = 0; i < node.children.length; i++) {\n        const c = node.children[i];\n        // Filter empty text nodes which are place holders for <Show> and elements missing dimensions\n        if (c._type === NodeType.Text || c.flexItem === false) {\n            continue;\n        }\n        if (c.flexOrder !== undefined) {\n            hasOrder = true;\n        }\n        if (c.flexGrow !== undefined) {\n            growSize += c.flexGrow;\n        }\n        children.push(c);\n    }\n    if (hasOrder) {\n        children.sort((a, b) => (a.flexOrder || 0) - (b.flexOrder || 0));\n    }\n    const numChildren = children.length;\n    const direction = node.flexDirection || 'row';\n    const isRow = direction === 'row';\n    const dimension = isRow ? 'width' : 'height';\n    const crossDimension = isRow ? 'height' : 'width';\n    const marginOne = isRow ? 'marginLeft' : 'marginTop';\n    const marginTwo = isRow ? 'marginRight' : 'marginBottom';\n    const prop = isRow ? 'x' : 'y';\n    const crossProp = isRow ? 'y' : 'x';\n    const containerSize = node[dimension] || 0;\n    const containerCrossSize = node[crossDimension] || 0;\n    const gap = node.gap || 0;\n    const justify = node.justifyContent || 'flexStart';\n    const align = node.alignItems;\n    if (growSize) {\n        const flexBasis = children.reduce((prev, c) => prev +\n            (c.flexGrow ? 0 : c[dimension] || 0) +\n            (c[marginOne] || 0) +\n            (c[marginTwo] || 0), 0);\n        const growFactor = (containerSize - flexBasis - gap * (numChildren - 1)) / growSize;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            if (c.flexGrow !== undefined && c.flexGrow > 0) {\n                c[dimension] = c.flexGrow * growFactor;\n            }\n        }\n    }\n    let itemSize = 0;\n    if (['center', 'spaceBetween', 'spaceEvenly'].includes(justify)) {\n        itemSize = children.reduce((prev, c) => prev + (c[dimension] || 0) + (c[marginOne] || 0) + (c[marginTwo] || 0), 0);\n    }\n    // Only align children if container has a cross size\n    const crossAlignChild = containerCrossSize && align\n        ? (c) => {\n            if (align === 'flexStart') {\n                c[crossProp] = 0;\n            }\n            else if (align === 'center') {\n                c[crossProp] = (containerCrossSize - (c[crossDimension] || 0)) / 2;\n            }\n            else if (align === 'flexEnd') {\n                c[crossProp] = containerCrossSize - (c[crossDimension] || 0);\n            }\n        }\n        : (c) => c;\n    if (justify === 'flexStart') {\n        let start = 0;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n        // Update container size\n        if (node.flexBoundary !== 'fixed') {\n            const calculatedSize = start - gap;\n            if (calculatedSize !== node[dimension]) {\n                node[dimension] = calculatedSize;\n                return true;\n            }\n        }\n    }\n    else if (justify === 'flexEnd') {\n        let start = containerSize;\n        for (let i = numChildren - 1; i >= 0; i--) {\n            const c = children[i];\n            c[prop] = start - (c[dimension] || 0) - (c[marginTwo] || 0);\n            start -=\n                (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n        // Update container size\n        if (node.flexBoundary !== 'fixed') {\n            const calculatedSize = start - gap;\n            if (calculatedSize !== node[dimension]) {\n                node[dimension] = calculatedSize;\n                return true;\n            }\n        }\n    }\n    else if (justify === 'center') {\n        let start = (containerSize - (itemSize + gap * (numChildren - 1))) / 2;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + gap + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    else if (justify === 'spaceBetween') {\n        const toPad = (containerSize - itemSize) / (numChildren - 1);\n        let start = 0;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + toPad + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    else if (justify === 'spaceEvenly') {\n        const toPad = (containerSize - itemSize) / (numChildren + 1);\n        let start = toPad;\n        for (let i = 0; i < children.length; i++) {\n            const c = children[i];\n            c[prop] = start + (c[marginOne] || 0);\n            start +=\n                (c[dimension] || 0) + toPad + (c[marginOne] || 0) + (c[marginTwo] || 0);\n            crossAlignChild(c);\n        }\n    }\n    // Container was not updated\n    return false;\n}\n//# sourceMappingURL=flex.js.map","import { Config } from './config.js';\nconst keyMapEntries = {\n    ArrowLeft: 'Left',\n    ArrowRight: 'Right',\n    ArrowUp: 'Up',\n    ArrowDown: 'Down',\n    Enter: 'Enter',\n    l: 'Last',\n    ' ': 'Space',\n    Backspace: 'Back',\n    Escape: 'Escape',\n};\nconst keyHoldMapEntries = {\n// Enter: 'EnterHold',\n};\nconst flattenKeyMap = (keyMap, targetMap) => {\n    for (const [key, value] of Object.entries(keyMap)) {\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                targetMap[v] = key;\n            });\n        }\n        else if (value === null) {\n            delete targetMap[key];\n        }\n        else {\n            targetMap[value] = key;\n        }\n    }\n};\nlet needFocusDebugStyles = true;\nconst addFocusDebug = (prevFocusPath, newFocusPath) => {\n    if (needFocusDebugStyles) {\n        const style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = `\n      [data-focus=\"3\"] {\n        border: 2px solid rgba(255, 33, 33, 0.2);\n        border-radius: 5px;\n        transition: border-color 0.3s ease;\n      }\n\n      [data-focus=\"2\"] {\n        border: 2px solid rgba(255, 33, 33, 0.4);\n        border-radius: 5px;\n        transition: border-color 0.3s ease;\n      }\n\n      [data-focus=\"1\"] {\n        border: 4px solid rgba(255, 33, 33, 0.9);\n        border-radius: 5px;\n        transition: border-color 0.5s ease;\n      }\n    `;\n        document.head.appendChild(style);\n        needFocusDebugStyles = false;\n    }\n    prevFocusPath.forEach((elm) => {\n        elm.data = {\n            ...elm.data,\n            focus: undefined,\n        };\n    });\n    newFocusPath.forEach((elm, i) => {\n        elm.data = {\n            ...elm.data,\n            focus: i + 1,\n        };\n    });\n};\nlet activeElement;\nexport const setActiveElement = (elm) => {\n    updateFocusPath(elm, activeElement);\n    activeElement = elm;\n    // Callback for libraries to use signals / refs\n    Config.setActiveElement(elm);\n};\nlet focusPath = [];\nconst updateFocusPath = (currentFocusedElm, prevFocusedElm) => {\n    let current = currentFocusedElm;\n    const fp = [];\n    while (current) {\n        if (!current.states.has('focus') || current === currentFocusedElm) {\n            current.states.add('focus');\n            current.onFocus?.call(current, currentFocusedElm, prevFocusedElm);\n            current.onFocusChanged?.call(current, true, currentFocusedElm, prevFocusedElm);\n        }\n        fp.push(current);\n        current = current.parent;\n    }\n    focusPath.forEach((elm) => {\n        if (!fp.includes(elm)) {\n            elm.states.remove('focus');\n            elm.onBlur?.call(elm, currentFocusedElm, prevFocusedElm);\n            elm.onFocusChanged?.call(elm, false, currentFocusedElm, prevFocusedElm);\n        }\n    });\n    if (Config.focusDebug) {\n        addFocusDebug(focusPath, fp);\n    }\n    focusPath = fp;\n    return fp;\n};\nconst propagateKeyDown = (e, mappedEvent, isHold) => {\n    let finalFocusElm = undefined;\n    for (const elm of focusPath) {\n        finalFocusElm = finalFocusElm || elm;\n        if (mappedEvent) {\n            const onKeyHandler = elm[`on${mappedEvent}`];\n            if (onKeyHandler?.call(elm, e, elm, finalFocusElm) === true) {\n                break;\n            }\n        }\n        else {\n            console.log(`Unhandled key event: ${e.key || e.keyCode}`);\n        }\n        const fallbackFunction = isHold ? elm.onKeyHold : elm.onKeyPress;\n        if (fallbackFunction?.call(elm, e, mappedEvent, elm, finalFocusElm) === true) {\n            break;\n        }\n    }\n    return false;\n};\nconst DEFAULT_KEY_HOLD_THRESHOLD = 200; // ms\nconst keyHoldTimeouts = {};\nconst keyHoldCallback = (e, mappedKeyHoldEvent) => {\n    delete keyHoldTimeouts[e.key || e.keyCode];\n    propagateKeyDown(e, mappedKeyHoldEvent, true);\n};\nconst handleKeyEvents = (delay, keypress, keyup) => {\n    if (keypress) {\n        const key = keypress.key || keypress.keyCode;\n        const mappedKeyHoldEvent = keyHoldMapEntries[key];\n        const mappedKeyEvent = keyMapEntries[key];\n        if (!mappedKeyHoldEvent) {\n            propagateKeyDown(keypress, mappedKeyEvent, false);\n        }\n        else {\n            if (keyHoldTimeouts[key]) {\n                clearTimeout(keyHoldTimeouts[key]);\n            }\n            keyHoldTimeouts[key] = window.setTimeout(() => keyHoldCallback(keypress, mappedKeyHoldEvent), delay);\n        }\n    }\n    if (keyup) {\n        const key = keyup.key || keyup.keyCode;\n        const mappedKeyEvent = keyMapEntries[key];\n        if (keyHoldTimeouts[key]) {\n            clearTimeout(keyHoldTimeouts[key]);\n            delete keyHoldTimeouts[key];\n            propagateKeyDown(keyup, mappedKeyEvent, false);\n        }\n    }\n};\nexport const useFocusManager = ({ userKeyMap, keyHoldOptions, ownerContext = (cb) => {\n    cb();\n}, } = {}) => {\n    if (userKeyMap) {\n        flattenKeyMap(userKeyMap, keyMapEntries);\n    }\n    if (keyHoldOptions?.userKeyHoldMap) {\n        flattenKeyMap(keyHoldOptions.userKeyHoldMap, keyHoldMapEntries);\n    }\n    const delay = keyHoldOptions?.holdThreshold || DEFAULT_KEY_HOLD_THRESHOLD;\n    const runKeyEvent = handleKeyEvents.bind(null, delay);\n    // Owner context is for frameworks that need effects\n    const keyPressHandler = (event) => ownerContext(() => {\n        runKeyEvent(event, undefined);\n    });\n    const keyUpHandler = (event) => ownerContext(() => {\n        runKeyEvent(undefined, event);\n    });\n    document.addEventListener('keyup', keyUpHandler);\n    document.addEventListener('keydown', keyPressHandler);\n    return {\n        cleanup: () => {\n            document.removeEventListener('keydown', keyPressHandler);\n            document.removeEventListener('keyup', keyUpHandler);\n            for (const [_, timeout] of Object.entries(keyHoldTimeouts)) {\n                if (timeout)\n                    clearTimeout(timeout);\n            }\n        },\n        focusPath: () => focusPath,\n    };\n};\n//# sourceMappingURL=focusManager.js.map","import { renderer, createShader } from './lightningInit.js';\nimport States from './states.js';\nimport calculateFlex from './flex.js';\nimport { log, isArray, isNumber, isFunc, keyExists, flattenStyles, isINode, isElementNode, } from './utils.js';\nimport { Config } from './config.js';\nimport { assertTruthy } from '@lightningjs/renderer/utils';\nimport { NodeType } from './nodeTypes.js';\nimport { setActiveElement } from './focusManager.js';\nconst layoutQueue = new Set();\nlet dynamicSizedNodeCount = 0;\nlet flushQueued = false;\nfunction flushLayout() {\n    if (flushQueued)\n        return;\n    flushQueued = true;\n    // Use setTimeout to allow renderers microtasks to finish\n    setTimeout(() => {\n        const queue = [...layoutQueue];\n        layoutQueue.clear();\n        for (let i = queue.length - 1; i >= 0; i--) {\n            const node = queue[i];\n            node.updateLayout();\n        }\n        flushQueued = false;\n        dynamicSizedNodeCount = 0;\n    }, 0);\n}\nfunction convertEffectsToShader(styleEffects) {\n    const effects = [];\n    let index = 0;\n    for (const [type, props] of Object.entries(styleEffects)) {\n        effects.push({ name: `effect${index}`, type, props });\n        index++;\n    }\n    return createShader('DynamicShader', { effects });\n}\nfunction borderAccessor(direction = '') {\n    return {\n        set(value) {\n            // Format: width || { width, color }\n            if (isNumber(value)) {\n                value = { width: value, color: 0x000000ff };\n            }\n            this.effects = this.effects\n                ? {\n                    ...(this.effects || {}),\n                    ...{ [`border${direction}`]: value },\n                }\n                : { [`border${direction}`]: value };\n        },\n        get() {\n            return this.effects?.[`border${direction}`];\n        },\n    };\n}\nconst LightningRendererNumberProps = [\n    'alpha',\n    'color',\n    'colorTop',\n    'colorRight',\n    'colorLeft',\n    'colorBottom',\n    'colorTl',\n    'colorTr',\n    'colorBl',\n    'colorBr',\n    'height',\n    'fontSize',\n    'lineHeight',\n    'mount',\n    'mountX',\n    'mountY',\n    'pivot',\n    'pivotX',\n    'pivotY',\n    'rotation',\n    'scale',\n    'scaleX',\n    'scaleY',\n    'width',\n    'worldX',\n    'worldY',\n    'x',\n    'y',\n    'zIndex',\n    'zIndexLocked',\n];\nconst LightningRendererNonAnimatingProps = [\n    'absX',\n    'absY',\n    'autosize',\n    'clipping',\n    'contain',\n    'data',\n    'fontFamily',\n    'fontStretch',\n    'fontStyle',\n    'fontWeight',\n    'letterSpacing',\n    'maxLines',\n    'offsetY',\n    'overflowSuffix',\n    'rtt',\n    'scrollable',\n    'scrollY',\n    'src',\n    'text',\n    'textAlign',\n    'textBaseline',\n    'textOverflow',\n    'texture',\n    'textureOptions',\n    'verticalAlign',\n    'wordWrap',\n];\nexport class ElementNode extends Object {\n    constructor(name) {\n        super();\n        this._type = name === 'text' ? NodeType.TextNode : NodeType.Element;\n        this.rendered = false;\n        this.lng = {};\n        this.children = [];\n    }\n    get effects() {\n        return this._effects;\n    }\n    set effects(v) {\n        this._effects = v;\n        if (this.rendered) {\n            this.shader = convertEffectsToShader(v);\n        }\n    }\n    set id(id) {\n        this._id = id;\n        if (Config.rendererOptions?.inspector) {\n            this.data = { ...this.data, testId: id };\n        }\n    }\n    get id() {\n        return this._id;\n    }\n    get parent() {\n        return this._parent;\n    }\n    set parent(p) {\n        this._parent = p;\n        if (this.rendered) {\n            this.lng.parent = p?.lng ?? null;\n        }\n    }\n    insertChild(node, beforeNode) {\n        node.parent = this;\n        if (beforeNode) {\n            // SolidJS can move nodes around in the children array.\n            // We need to insert following DOM insertBefore which moves elements.\n            this.removeChild(node);\n            const index = this.children.indexOf(beforeNode);\n            if (index >= 0) {\n                this.children.splice(index, 0, node);\n                return;\n            }\n        }\n        this.children.push(node);\n    }\n    removeChild(node) {\n        const nodeIndexToRemove = this.children.indexOf(node);\n        if (nodeIndexToRemove >= 0) {\n            this.children.splice(nodeIndexToRemove, 1);\n        }\n    }\n    get selectedNode() {\n        const selectedIndex = this.selected || 0;\n        for (let i = selectedIndex; i < this.children.length; i++) {\n            const element = this.children[i];\n            if (isElementNode(element)) {\n                this.selected = i;\n                return element;\n            }\n        }\n        return undefined;\n    }\n    set shader(shaderProps) {\n        let shProps = shaderProps;\n        if (isArray(shaderProps)) {\n            shProps = createShader(...shaderProps);\n        }\n        this.lng.shader = shProps;\n    }\n    _sendToLightningAnimatable(name, value) {\n        if (this.transition &&\n            this.rendered &&\n            Config.animationsEnabled &&\n            (this.transition === true || this.transition[name])) {\n            const animationSettings = this.transition === true || this.transition[name] === true\n                ? undefined\n                : this.transition[name];\n            const animationController = this.animate({ [name]: value }, animationSettings);\n            if (isFunc(this.onAnimationStarted)) {\n                animationController.once('animating', (controller) => {\n                    this.onAnimationStarted?.call(this, controller, name, value);\n                });\n            }\n            if (isFunc(this.onAnimationFinished)) {\n                animationController.once('stopped', (controller) => {\n                    this.onAnimationFinished?.call(this, controller, name, value);\n                });\n            }\n            return animationController.start();\n        }\n        this.lng[name] = value;\n    }\n    animate(props, animationSettings) {\n        assertTruthy(this.rendered, 'Node must be rendered before animating');\n        return this.lng.animate(props, animationSettings || this.animationSettings || {});\n    }\n    chain(props, animationSettings) {\n        if (this._animationRunning) {\n            this._animationQueue = [];\n            this._animationRunning = false;\n        }\n        if (animationSettings) {\n            this._animationQueueSettings = animationSettings;\n        }\n        else if (!this._animationQueueSettings) {\n            this._animationQueueSettings =\n                animationSettings || this.animationSettings;\n        }\n        animationSettings = animationSettings || this._animationQueueSettings;\n        this._animationQueue = this._animationQueue || [];\n        this._animationQueue.push({ props, animationSettings });\n        return this;\n    }\n    async start() {\n        let animation = this._animationQueue.shift();\n        while (animation) {\n            this._animationRunning = true;\n            await this.animate(animation.props, animation.animationSettings)\n                .start()\n                .waitUntilStopped();\n            animation = this._animationQueue.shift();\n        }\n        this._animationRunning = false;\n        this._animationQueueSettings = undefined;\n    }\n    setFocus() {\n        if (this.skipFocus) {\n            return;\n        }\n        if (this.rendered) {\n            // can be 0\n            if (this.forwardFocus !== undefined) {\n                if (isFunc(this.forwardFocus)) {\n                    if (this.forwardFocus.call(this, this) !== false) {\n                        return;\n                    }\n                }\n                else {\n                    const focusedIndex = typeof this.forwardFocus === 'number' ? this.forwardFocus : null;\n                    const nodes = this.children;\n                    if (focusedIndex !== null && focusedIndex < nodes.length) {\n                        const child = nodes[focusedIndex];\n                        isElementNode(child) && child.setFocus();\n                        return;\n                    }\n                }\n            }\n            // Delay setting focus so children can render (useful for Row + Column)\n            queueMicrotask(() => setActiveElement(this));\n        }\n        else {\n            this._autofocus = true;\n        }\n    }\n    isTextNode() {\n        return this._type === NodeType.TextNode;\n    }\n    _layoutOnLoad() {\n        dynamicSizedNodeCount++;\n        this.lng.on('loaded', () => {\n            // Re-add the node to the layout queue because somehow the queue fluses and there is a straggler\n            layoutQueue.add(this.parent);\n            flushLayout();\n        });\n    }\n    getText() {\n        let result = '';\n        for (let i = 0; i < this.children.length; i++) {\n            result += this.children[i].text;\n        }\n        return result;\n    }\n    destroy() {\n        if (this._queueDelete && isINode(this.lng)) {\n            this.lng.destroy();\n            if (this.parent?.requiresLayout()) {\n                this.parent.updateLayout();\n            }\n        }\n    }\n    // Must be set before render\n    set onEvents(events) {\n        this._events = events;\n    }\n    get onEvents() {\n        return this._events;\n    }\n    set style(values) {\n        if (isArray(values)) {\n            this._style = flattenStyles(values);\n        }\n        else {\n            this._style = values;\n        }\n        // Keys set in JSX are more important\n        for (const key in this._style) {\n            // be careful of 0 values\n            if (this[key] === undefined) {\n                this[key] = this._style[key];\n            }\n        }\n    }\n    get style() {\n        return this._style;\n    }\n    get hasChildren() {\n        return this.children.length > 0;\n    }\n    getChildById(id) {\n        return this.children.find((c) => c.id === id);\n    }\n    searchChildrenById(id) {\n        // traverse all the childrens children\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children[i];\n            if (isElementNode(child)) {\n                if (child.id === id) {\n                    return child;\n                }\n                const found = child.searchChildrenById(id);\n                if (found) {\n                    return found;\n                }\n            }\n        }\n    }\n    set states(states) {\n        this._states = this._states\n            ? this._states.merge(states)\n            : new States(this._stateChanged.bind(this), states);\n        if (this.rendered) {\n            this._stateChanged();\n        }\n    }\n    get states() {\n        this._states = this._states || new States(this._stateChanged.bind(this));\n        return this._states;\n    }\n    get animationSettings() {\n        return this._animationSettings || Config.animationSettings;\n    }\n    set animationSettings(animationSettings) {\n        this._animationSettings = animationSettings;\n    }\n    set hidden(val) {\n        this.alpha = val ? 0 : 1;\n    }\n    get hidden() {\n        return this.alpha === 0;\n    }\n    set autofocus(val) {\n        this._autofocus = val ? true : false;\n        this._autofocus && this.setFocus();\n    }\n    get autofocus() {\n        return this._autofocus;\n    }\n    requiresLayout() {\n        return this.display === 'flex' || this.onBeforeLayout || this.onLayout;\n    }\n    set updateLayoutOn(v) {\n        this.updateLayout();\n    }\n    get updateLayoutOn() {\n        return null;\n    }\n    updateLayout() {\n        if (this.hasChildren) {\n            log('Layout: ', this);\n            let changedLayout = false;\n            if (isFunc(this.onBeforeLayout)) {\n                console.warn('onBeforeLayout is deprecated');\n                changedLayout = this.onBeforeLayout.call(this, this) || false;\n            }\n            if (this.display === 'flex') {\n                if (calculateFlex(this) || changedLayout) {\n                    this.parent?.updateLayout();\n                }\n            }\n            else if (changedLayout) {\n                this.parent?.updateLayout();\n            }\n            isFunc(this.onLayout) && this.onLayout.call(this, this);\n        }\n    }\n    _stateChanged() {\n        log('State Changed: ', this, this.states);\n        if (this.forwardStates) {\n            // apply states to children first\n            const states = this.states.slice();\n            this.children.forEach((c) => {\n                c.states = states;\n            });\n        }\n        const states = this.states;\n        if (this._undoStyles || (this.style && keyExists(this.style, states))) {\n            this._undoStyles = this._undoStyles || [];\n            const stylesToUndo = {};\n            this._undoStyles.forEach((styleKey) => {\n                stylesToUndo[styleKey] = this.style[styleKey];\n            });\n            const newStyles = states.reduce((acc, state) => {\n                const styles = this.style[state];\n                if (styles) {\n                    acc = {\n                        ...acc,\n                        ...styles,\n                    };\n                }\n                return acc;\n            }, {});\n            this._undoStyles = Object.keys(newStyles);\n            // Apply transition first\n            if (newStyles.transition !== undefined) {\n                this.transition = newStyles.transition;\n            }\n            // Apply the styles\n            Object.assign(this, stylesToUndo, newStyles);\n        }\n    }\n    render(topNode) {\n        // Elements are inserted from the inside out, then rendered from the outside in.\n        // Render starts when an element is insertered with a parent that is already renderered.\n        const node = this;\n        const parent = this.parent;\n        if (!parent) {\n            console.warn('Parent not set - no node created for: ', this);\n            return;\n        }\n        if (!parent.rendered) {\n            console.warn('Parent not rendered yet: ', this);\n            return;\n        }\n        if (parent.requiresLayout()) {\n            layoutQueue.add(parent);\n        }\n        if (this.rendered) {\n            // This happens if Array of items is reordered to reuse elements.\n            // We return after layout is queued so the change can trigger layout updates.\n            return;\n        }\n        if (this._states) {\n            this._stateChanged();\n        }\n        const props = node.lng;\n        if (this.right || this.right === 0) {\n            props.x = (parent.width || 0) - this.right;\n            props.mountX = 1;\n        }\n        if (this.bottom || this.bottom === 0) {\n            props.y = (parent.height || 0) - this.bottom;\n            props.mountY = 1;\n        }\n        props.x = props.x || 0;\n        props.y = props.y || 0;\n        props.parent = parent.lng;\n        if (node._effects) {\n            props.shader = convertEffectsToShader(node._effects);\n        }\n        if (node.isTextNode()) {\n            const textProps = props;\n            if (Config.fontSettings) {\n                for (const key in Config.fontSettings) {\n                    if (textProps[key] === undefined) {\n                        textProps[key] = Config.fontSettings[key];\n                    }\n                }\n            }\n            textProps.text = textProps.text || node.getText();\n            if (textProps.textAlign && !textProps.contain) {\n                console.warn('Text align requires contain: ', node.getText());\n            }\n            // contain is either width or both\n            if (textProps.contain) {\n                if (!textProps.width) {\n                    textProps.width =\n                        (parent.width || 0) - textProps.x - (textProps.marginRight || 0);\n                }\n                if (textProps.contain === 'both' &&\n                    !textProps.height &&\n                    !textProps.maxLines) {\n                    textProps.height =\n                        (parent.height || 0) - textProps.y - (textProps.marginBottom || 0);\n                }\n                else if (textProps.maxLines === 1) {\n                    textProps.height = (textProps.height ||\n                        textProps.lineHeight ||\n                        textProps.fontSize);\n                }\n            }\n            log('Rendering: ', this, props);\n            node.lng = renderer.createTextNode(props);\n            if (parent.requiresLayout()) {\n                if (!props.width || !props.height) {\n                    node._layoutOnLoad();\n                }\n            }\n        }\n        else {\n            // If its not an image or texture apply some defaults\n            if (!props.texture) {\n                // Set width and height to parent less offset\n                if (isNaN(props.width)) {\n                    props.width = (parent.width || 0) - props.x;\n                }\n                if (isNaN(props.height)) {\n                    props.height = (parent.height || 0) - props.y;\n                }\n                if (props.rtt && !props.color) {\n                    props.color = 0xffffffff;\n                }\n                if (!props.color && !props.src) {\n                    // Default color to transparent - If you later set a src, you'll need\n                    // to set color '#ffffffff'\n                    props.color = 0x00000000;\n                }\n            }\n            log('Rendering: ', this, props);\n            node.lng = renderer.createNode(props);\n        }\n        node.rendered = true;\n        if (node.autosize && parent.requiresLayout()) {\n            node._layoutOnLoad();\n        }\n        if (node.onFail) {\n            node.lng.on('failed', node.onFail);\n        }\n        if (node.onLoad) {\n            node.lng.on('loaded', node.onLoad);\n        }\n        isFunc(this.onCreate) && this.onCreate.call(this, node);\n        node.onEvents &&\n            node.onEvents.forEach(([name, handler]) => {\n                node.lng.on(name, (inode, data) => handler(node, data));\n            });\n        // L3 Inspector adds div to the lng object\n        //@ts-expect-error - div is not in the typings\n        if (node.lng?.div) {\n            //@ts-expect-error - div is not in the typings\n            node.lng.div.element = node;\n        }\n        if (node._type === NodeType.Element) {\n            // only element nodes will have children that need rendering\n            const numChildren = node.children.length;\n            for (let i = 0; i < numChildren; i++) {\n                const c = node.children[i];\n                assertTruthy(c, 'Child is undefined');\n                if (isElementNode(c)) {\n                    c.render();\n                }\n                else if (c.text && c._type === NodeType.Text) {\n                    // Solid Show uses an empty text node as a placeholder\n                    // Vue uses comment nodes for v-if\n                    console.warn('TextNode outside of <Text>: ', c);\n                }\n            }\n        }\n        if (topNode && !dynamicSizedNodeCount) {\n            flushLayout();\n        }\n        node._autofocus && node.setFocus();\n    }\n}\nfor (const key of LightningRendererNumberProps) {\n    Object.defineProperty(ElementNode.prototype, key, {\n        get() {\n            return this.lng[key];\n        },\n        set(v) {\n            this._sendToLightningAnimatable(key, v);\n        },\n    });\n}\nfor (const key of LightningRendererNonAnimatingProps) {\n    Object.defineProperty(ElementNode.prototype, key, {\n        get() {\n            return this.lng[key];\n        },\n        set(v) {\n            this.lng[key] = v;\n        },\n    });\n}\n// Add Border Helpers\nfunction createEffectAccessor(key) {\n    return {\n        set(value) {\n            this.effects = this.effects\n                ? {\n                    ...this.effects,\n                    [key]: value,\n                }\n                : { [key]: value };\n        },\n        get() {\n            return this.effects?.[key];\n        },\n    };\n}\nObject.defineProperties(ElementNode.prototype, {\n    border: borderAccessor(),\n    borderLeft: borderAccessor('Left'),\n    borderRight: borderAccessor('Right'),\n    borderTop: borderAccessor('Top'),\n    borderBottom: borderAccessor('Bottom'),\n    linearGradient: createEffectAccessor('linearGradient'),\n    radialGradient: createEffectAccessor('radialGradient'),\n    radialProgress: createEffectAccessor('radialProgressGradient'),\n    borderRadius: {\n        set(radius) {\n            this.effects = this.effects\n                ? {\n                    ...this.effects,\n                    radius: { radius },\n                }\n                : { radius: { radius } };\n        },\n        get() {\n            return this.effects?.radius?.radius;\n        },\n    },\n});\n//# sourceMappingURL=elementNode.js.map","let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned ? UNOWNED : {\n      owned: null,\n      cleanups: null,\n      context: current ? current.context : null,\n      owner: current\n    },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = (\"initialValue\" in options),\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);else loadEnd(pr, undefined, castError(p.value), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, options);\n  updateComputation(node);\n  setDeferred(() => Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined ? value : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const {\n      factory: oldFactory,\n      untrack: oldUntrack\n    } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, owner && owner.owner || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(error, fns, owner);\n    },\n    state: STALE\n  });else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        ...Owner.context,\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get ? {\n          enumerable: true,\n          configurable: true,\n          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])\n        } : desc.value !== undefined ? desc : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if ($PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) ? untrack(() => {\n      if (false) ;\n      if (!ctx || sharedConfig.done) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }) : \"\");\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => keyed ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return props.when;\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(() => {\n      let conds = conditions();\n      if (!Array.isArray(conds)) conds = [conds];\n      for (let i = 0; i < conds.length; i++) {\n        const c = conds[i].when;\n        if (c) {\n          keyed = !!conds[i].keyed;\n          return [i, c, conds[i]];\n        }\n      }\n      return [-1];\n    }, undefined, {\n      equals\n    });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    return fn ? untrack(() => c(keyed ? when : () => {\n      if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n      return cond.when;\n    })) : c;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load) err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(() => {\n        if (sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      }, err => {\n        error = err;\n        set();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createSignal } from 'solid-js';\nimport { type ElementNode } from '@lightningtv/core';\nexport const [activeElement, setActiveElement] = createSignal<\n  ElementNode | undefined\n>(undefined);\n","import { isInteger } from '@lightningtv/core';\n\n/**\n * Converts a color string to a color number value.\n */\nexport function hexColor(color: string | number = ''): number {\n  if (isInteger(color)) {\n    return color;\n  }\n\n  if (typeof color === 'string') {\n    // Renderer expects RGBA values\n    if (color.startsWith('#')) {\n      return Number(\n        color.replace('#', '0x') + (color.length === 7 ? 'ff' : ''),\n      );\n    }\n\n    if (color.startsWith('0x')) {\n      return Number(color);\n    }\n    return Number('0x' + (color.length === 6 ? color + 'ff' : color));\n  }\n\n  return 0x00000000;\n}\n","import { createRoot, createRenderEffect, mergeProps, createMemo, createComponent, untrack } from 'solid-js';\n\nfunction createRenderer$1({\n  createElement,\n  createTextNode,\n  isTextNode,\n  replaceText,\n  insertNode,\n  removeNode,\n  setProperty,\n  getParentNode,\n  getFirstChild,\n  getNextSibling\n}) {\n  function insert(parent, accessor, marker, initial) {\n    if (marker !== undefined && !initial) initial = [];\n    if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n    createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n  }\n  function insertExpression(parent, value, current, marker, unwrapArray) {\n    while (typeof current === \"function\") current = current();\n    if (value === current) return current;\n    const t = typeof value,\n      multi = marker !== undefined;\n    if (t === \"string\" || t === \"number\") {\n      if (t === \"number\") value = value.toString();\n      if (multi) {\n        let node = current[0];\n        if (node && isTextNode(node)) {\n          replaceText(node, value);\n        } else node = createTextNode(value);\n        current = cleanChildren(parent, current, marker, node);\n      } else {\n        if (current !== \"\" && typeof current === \"string\") {\n          replaceText(getFirstChild(parent), current = value);\n        } else {\n          cleanChildren(parent, current, marker, createTextNode(value));\n          current = value;\n        }\n      }\n    } else if (value == null || t === \"boolean\") {\n      current = cleanChildren(parent, current, marker);\n    } else if (t === \"function\") {\n      createRenderEffect(() => {\n        let v = value();\n        while (typeof v === \"function\") v = v();\n        current = insertExpression(parent, v, current, marker);\n      });\n      return () => current;\n    } else if (Array.isArray(value)) {\n      const array = [];\n      if (normalizeIncomingArray(array, value, unwrapArray)) {\n        createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n        return () => current;\n      }\n      if (array.length === 0) {\n        const replacement = cleanChildren(parent, current, marker);\n        if (multi) return current = replacement;\n      } else {\n        if (Array.isArray(current)) {\n          if (current.length === 0) {\n            appendNodes(parent, array, marker);\n          } else reconcileArrays(parent, current, array);\n        } else if (current == null || current === \"\") {\n          appendNodes(parent, array);\n        } else {\n          reconcileArrays(parent, multi && current || [getFirstChild(parent)], array);\n        }\n      }\n      current = array;\n    } else {\n      if (Array.isArray(current)) {\n        if (multi) return current = cleanChildren(parent, current, marker, value);\n        cleanChildren(parent, current, null, value);\n      } else if (current == null || current === \"\" || !getFirstChild(parent)) {\n        insertNode(parent, value);\n      } else replaceNode(parent, value, getFirstChild(parent));\n      current = value;\n    }\n    return current;\n  }\n  function normalizeIncomingArray(normalized, array, unwrap) {\n    let dynamic = false;\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i],\n        t;\n      if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n        dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n      } else if ((t = typeof item) === \"string\" || t === \"number\") {\n        normalized.push(createTextNode(item));\n      } else if (t === \"function\") {\n        if (unwrap) {\n          while (typeof item === \"function\") item = item();\n          dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n        } else {\n          normalized.push(item);\n          dynamic = true;\n        }\n      } else normalized.push(item);\n    }\n    return dynamic;\n  }\n  function reconcileArrays(parentNode, a, b) {\n    let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = getNextSibling(a[aEnd - 1]),\n      map = null;\n    while (aStart < aEnd || bStart < bEnd) {\n      if (a[aStart] === b[bStart]) {\n        aStart++;\n        bStart++;\n        continue;\n      }\n      while (a[aEnd - 1] === b[bEnd - 1]) {\n        aEnd--;\n        bEnd--;\n      }\n      if (aEnd === aStart) {\n        const node = bEnd < bLength ? bStart ? getNextSibling(b[bStart - 1]) : b[bEnd - bStart] : after;\n        while (bStart < bEnd) insertNode(parentNode, b[bStart++], node);\n      } else if (bEnd === bStart) {\n        while (aStart < aEnd) {\n          if (!map || !map.has(a[aStart])) removeNode(parentNode, a[aStart]);\n          aStart++;\n        }\n      } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n        const node = getNextSibling(a[--aEnd]);\n        insertNode(parentNode, b[bStart++], getNextSibling(a[aStart++]));\n        insertNode(parentNode, b[--bEnd], node);\n        a[aEnd] = b[bEnd];\n      } else {\n        if (!map) {\n          map = new Map();\n          let i = bStart;\n          while (i < bEnd) map.set(b[i], i++);\n        }\n        const index = map.get(a[aStart]);\n        if (index != null) {\n          if (bStart < index && index < bEnd) {\n            let i = aStart,\n              sequence = 1,\n              t;\n            while (++i < aEnd && i < bEnd) {\n              if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n              sequence++;\n            }\n            if (sequence > index - bStart) {\n              const node = a[aStart];\n              while (bStart < index) insertNode(parentNode, b[bStart++], node);\n            } else replaceNode(parentNode, b[bStart++], a[aStart++]);\n          } else aStart++;\n        } else removeNode(parentNode, a[aStart++]);\n      }\n    }\n  }\n  function cleanChildren(parent, current, marker, replacement) {\n    if (marker === undefined) {\n      let removed;\n      while (removed = getFirstChild(parent)) removeNode(parent, removed);\n      replacement && insertNode(parent, replacement);\n      return \"\";\n    }\n    const node = replacement || createTextNode(\"\");\n    if (current.length) {\n      let inserted = false;\n      for (let i = current.length - 1; i >= 0; i--) {\n        const el = current[i];\n        if (node !== el) {\n          const isParent = getParentNode(el) === parent;\n          if (!inserted && !i) isParent ? replaceNode(parent, node, el) : insertNode(parent, node, marker);else isParent && removeNode(parent, el);\n        } else inserted = true;\n      }\n    } else insertNode(parent, node, marker);\n    return [node];\n  }\n  function appendNodes(parent, array, marker) {\n    for (let i = 0, len = array.length; i < len; i++) insertNode(parent, array[i], marker);\n  }\n  function replaceNode(parent, newNode, oldNode) {\n    insertNode(parent, newNode, oldNode);\n    removeNode(parent, oldNode);\n  }\n  function spreadExpression(node, props, prevProps = {}, skipChildren) {\n    props || (props = {});\n    if (!skipChildren) {\n      createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n    }\n    createRenderEffect(() => props.ref && props.ref(node));\n    createRenderEffect(() => {\n      for (const prop in props) {\n        if (prop === \"children\" || prop === \"ref\") continue;\n        const value = props[prop];\n        if (value === prevProps[prop]) continue;\n        setProperty(node, prop, value, prevProps[prop]);\n        prevProps[prop] = value;\n      }\n    });\n    return prevProps;\n  }\n  return {\n    render(code, element) {\n      let disposer;\n      createRoot(dispose => {\n        disposer = dispose;\n        insert(element, code());\n      });\n      return disposer;\n    },\n    insert,\n    spread(node, accessor, skipChildren) {\n      if (typeof accessor === \"function\") {\n        createRenderEffect(current => spreadExpression(node, accessor(), current, skipChildren));\n      } else spreadExpression(node, accessor, undefined, skipChildren);\n    },\n    createElement,\n    createTextNode,\n    insertNode,\n    setProp(node, name, value, prev) {\n      setProperty(node, name, value, prev);\n      return value;\n    },\n    mergeProps,\n    effect: createRenderEffect,\n    memo: createMemo,\n    createComponent,\n    use(fn, element, arg) {\n      return untrack(() => fn(element, arg));\n    }\n  };\n}\n\nfunction createRenderer(options) {\n  const renderer = createRenderer$1(options);\n  renderer.mergeProps = mergeProps;\n  return renderer;\n}\n\nexport { createRenderer };\n","import { assertTruthy } from '@lightningtv/core';\nimport {\n  ElementNode,\n  NodeType,\n  log,\n  type ElementText,\n} from '@lightningtv/core';\nimport type { SolidNode, SolidRendererOptions } from './types.js';\n\nexport default {\n  createElement(name: string): ElementNode {\n    return new ElementNode(name);\n  },\n  createTextNode(text: string): ElementText {\n    // A text node is just a string - not the <text> node\n    return { _type: NodeType.Text, text, parent: undefined };\n  },\n  replaceText(node: ElementText, value: string): void {\n    log('Replace Text: ', node, value);\n    node.text = value;\n    const parent = node.parent;\n    assertTruthy(parent);\n    parent.text = parent.getText();\n  },\n  setProperty(node: ElementNode, name: string, value: any = true): void {\n    node[name] = value;\n  },\n  insertNode(parent: ElementNode, node: SolidNode, anchor: SolidNode): void {\n    log('INSERT: ', parent, node, anchor);\n\n    parent.insertChild(node, anchor);\n    node._queueDelete = false;\n\n    if (node instanceof ElementNode) {\n      parent.rendered && node.render(true);\n    } else if (parent.isTextNode()) {\n      // TextNodes can be placed outside of <text> nodes when <Show> is used as placeholder\n      parent.text = parent.getText();\n    }\n  },\n  isTextNode(node: ElementNode): boolean {\n    return node.isTextNode();\n  },\n  removeNode(parent: ElementNode, node: SolidNode): void {\n    log('REMOVE: ', parent, node);\n    parent.removeChild(node);\n    node._queueDelete = true;\n    if (node instanceof ElementNode) {\n      // Solid replacesNodes to move them (via insert and remove),\n      // so we need to wait for the next microtask to destroy the node\n      // in the event it gets a new parent.\n      queueMicrotask(() => node.destroy());\n    }\n  },\n  getParentNode(node: SolidNode): ElementNode | undefined {\n    return node.parent;\n  },\n  getFirstChild(node: ElementNode): SolidNode | undefined {\n    return node.children[0];\n  },\n  getNextSibling(node: SolidNode): SolidNode | undefined {\n    const children = node.parent!.children || [];\n    const index = children.indexOf(node) + 1;\n    if (index < children.length) {\n      return children[index];\n    }\n    return undefined;\n  },\n} satisfies SolidRendererOptions;\n","import { createRenderer as solidCreateRenderer } from 'solid-js/universal';\nimport {\n  Config,\n  type IntrinsicNodeProps,\n  type IntrinsicTextProps,\n  startLightningRenderer,\n  type RendererMain,\n  type RendererMainSettings,\n} from '@lightningtv/core';\nimport nodeOpts from './solidOpts.js';\nimport {\n  splitProps,\n  createMemo,\n  untrack,\n  type JSXElement,\n  type ValidComponent,\n} from 'solid-js';\nimport type { SolidNode } from './types.js';\nimport { setActiveElement } from './activeElement.js';\n\nconst solidRenderer = solidCreateRenderer<SolidNode>(nodeOpts);\n\nlet renderer: RendererMain;\nexport const rootNode = nodeOpts.createElement('App');\n\nconst render = function (code: () => JSXElement) {\n  // @ts-expect-error - code is jsx element and not SolidElement yet\n  return solidRenderer.render(code, rootNode);\n};\n\nexport function createRenderer(\n  rendererOptions?: RendererMainSettings,\n  node?: HTMLElement | string,\n) {\n  const options =\n    rendererOptions || (Config.rendererOptions as RendererMainSettings);\n\n  renderer = startLightningRenderer(options, node || 'app');\n  //Prevent this from happening automatically\n  Config.setActiveElement = setActiveElement;\n  rootNode.lng = renderer.root!;\n  rootNode.rendered = true;\n  return {\n    renderer,\n    rootNode,\n    render,\n  };\n}\n\nexport const {\n  effect,\n  memo,\n  createComponent,\n  createElement,\n  createTextNode,\n  insertNode,\n  insert,\n  spread,\n  setProp,\n  mergeProps,\n  use,\n} = solidRenderer;\n\n/**\n * renders an arbitrary custom or native component and passes the other props\n * ```typescript\n * <Dynamic component={multiline() ? 'textarea' : 'input'} value={value()} />\n * ```\n * @description https://www.solidjs.com/docs/latest/api#dynamic\n */\nexport function Dynamic<T>(\n  props: T & {\n    component?: ValidComponent;\n  },\n): JSXElement {\n  const [p, others] = splitProps(props, ['component']);\n\n  const cached = createMemo(() => p.component);\n\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case 'function':\n        return untrack(() => component(others));\n\n      case 'string': {\n        const el = createElement(component);\n        spread(el, others);\n        return el;\n      }\n\n      default:\n        break;\n    }\n  }) as unknown as JSXElement;\n}\n\n// Dont use JSX as it creates circular dependencies and causes trouble with the playground.\nexport const View = (props: IntrinsicNodeProps) => {\n  const el = createElement('node');\n  spread(el, props, false);\n  return el as unknown as JSXElement;\n};\n\nexport const Text = (props: IntrinsicTextProps) => {\n  const el = createElement('text');\n  spread(el, props, false);\n  return el as unknown as JSXElement;\n};\n","import { Text, View, hexColor } from '@lightningtv/solid';\nimport { Index, Show, createSignal } from 'solid-js';\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst generateRandomColor = () => '0x' + Math.floor(Math.random() * 16777215).toString(16) + 'FF';\n\nconst HelloWorld = () => {\n  const [blocks, setBlocks] = createSignal([]);\n  let blockContainer;\n\n  const handleTPress = () => {\n    const _blocks = [];\n\n    // To tear down and recreate uncomment next line\n    // setBlocks([]);\n\n    for (let step = 0; step < 1000; step++) {\n      _blocks.push({\n        width: random(50, 100),\n        height: random(50, 100),\n        x: random(0, WIDTH),\n        y: random(0, HEIGHT),\n        borderRadius: random(0, 50),\n        color: generateRandomColor()\n      });\n    }\n\n    setBlocks(_blocks);\n  };\n\n  setInterval(() => {\n    handleTPress();\n  }, 2000);\n\n  return (\n    <View style={{color: hexColor('#f0f0f0')}}>\n      <Index each={blocks()}>{(item) => <node x={/*once*/ item().x} y={/*@once*/ item().y} width={/*@once*/ item().width} height={/*@once*/ item().height} color={/*@once*/ item().color} borderRadius={/*@once*/ item().borderRadius} />}</Index>\n    </View>\n  );\n};\n// <For each={blocks()}>{(item) => <node x={/*once*/ item.x} y={/*@once*/ item.y} width={/*@once*/ item.width} height={/*@once*/ item.height} color={/*@once*/ item.color} borderRadius={/*@once*/ item.borderRadius} />}</For>\n// <node x={item().x} y={item().y} width={item().width} height={item().height} color={item().color} borderRadius={item().borderRadius} />\n// <node x={/*once*/ item().x} y={/*@once*/ item().y} width={/*@once*/ item().width} height={/*@once*/ item().height} color={/*@once*/ item().color} borderRadius={/*@once*/ item().borderRadius} />\nexport default HelloWorld;\n\nconst HEIGHT = 600;\nconst WIDTH = 800;\n\nconst Block = (props) => {\n  return <View {...props} />;\n};\n\nfunction generateRandomHexColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n","import { createRenderer, Config } from '@lightningtv/solid';\nimport HelloWorld from './pages/HelloWorld';\nimport { WebGlCoreRenderer } from '@lightningjs/renderer/webgl';\n// import TextPage from './pages/Text';\n// import CounterPage from './pages/Counter';\n// import ButtonsPage from './pages/ButtonsPage';\n// import NotFound from './pages/NotFound';\n\n//import coreExtensionModuleUrl from './AppCoreExtensions.js?importChunkUrl';\n\nConfig.debug = false;\nConfig.fontSettings.fontFamily = 'Ubuntu';\nConfig.fontSettings.color = 0xffffffff;\nConfig.rendererOptions = {\n  //coreExtensionModule: coreExtensionModuleUrl,\n  numImageWorkers: 2,\n  enableInspector: false,\n  renderEngine: WebGlCoreRenderer,\n  fontEngines: [],\n  // deviceLogicalPixelRatio: 1\n};\n\nconst {render} = createRenderer();\nrender(() =>  (\n  <HelloWorld />\n));\n"],"names":["__vite_import_meta_env__","key","effect","CoreNodeRenderState","UpdateType","renderer","createShader","isArray","rootNode","width","height","bufferMemory","tx","ty","i","activeElement","setActiveElement","_a","_b","states","value","createComponent","mergeProps","sources","createElement","createTextNode","insertNode","insert","dispose","createRenderer","solidCreateRenderer","render","random","min","max","Math","floor","generateRandomColor","toString","HelloWorld","blocks","setBlocks","createSignal","handleTPress","_blocks","step","push","x","WIDTH","y","HEIGHT","borderRadius","color","setInterval","_$createComponent","View","style","hexColor","children","Index","each","item","_el$","_$createElement","_$setProp","_$effect","_$p","Config","debug","fontSettings","fontFamily","rendererOptions","numImageWorkers","enableInspector","renderEngine","WebGlCoreRenderer","fontEngines"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81]}